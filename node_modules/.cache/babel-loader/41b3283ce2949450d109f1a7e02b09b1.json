{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\kenny\\\\Projects\\\\djangotutorials\\\\drf_react_project\\\\react_frontend\\\\blogapi\\\\src\\\\components\\\\actions\\\\scrollToTopBtn.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport ReactTooltip from \"react-tooltip\";\nimport DarkContext from \"./../../context/darkMode\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ScrollToTopBtn = props => {\n  _s();\n\n  const [showScrollBtn, setshowScrollBtn] = useState(false);\n  const darkContext = useContext(DarkContext);\n\n  window.onscroll = () => {\n    console.log(document.documentElement.scrollTop);\n    const {\n      showOn\n    } = props;\n\n    if (document.body.scrollTop > showOn || document.documentElement.scrollTop > showOn) {\n      setshowScrollBtn(true);\n    } else if (document.body.scrollTop < showOn || document.documentElement.scrollTop < showOn) {\n      setshowScrollBtn(false);\n    }\n  };\n\n  const dataType = darkContext.darkMode ? \"light\" : \"dark\";\n\n  if (showScrollBtn) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"scroll-to-top\",\n      children: [/*#__PURE__*/_jsxDEV(ReactTooltip, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        \"data-tip\": \"Scroll To Top\",\n        \"data-type\": dataType,\n        className: \"btn btn-success\",\n        onClick: () => window.scrollTo(0, 0),\n        children: /*#__PURE__*/_jsxDEV(\"i\", {\n          className: \"fas fa-arrow-up\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this);\n  }\n\n  return \"\";\n};\n\n_s(ScrollToTopBtn, \"ZvRwFGEOJsiTHn8vNsrFuihNLl0=\");\n\n_c = ScrollToTopBtn;\nexport default ScrollToTopBtn;\n\nvar _c;\n\n$RefreshReg$(_c, \"ScrollToTopBtn\");","map":{"version":3,"sources":["C:/Users/kenny/Projects/djangotutorials/drf_react_project/react_frontend/blogapi/src/components/actions/scrollToTopBtn.jsx"],"names":["React","useState","ReactTooltip","DarkContext","ScrollToTopBtn","props","showScrollBtn","setshowScrollBtn","darkContext","useContext","window","onscroll","console","log","document","documentElement","scrollTop","showOn","body","dataType","darkMode","scrollTo"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,YAAP,MAAyB,eAAzB;AACA,OAAOC,WAAP,MAAwB,0BAAxB;;;AAEA,MAAMC,cAAc,GAAIC,KAAD,IAAW;AAAA;;AAChC,QAAM,CAACC,aAAD,EAAgBC,gBAAhB,IAAoCN,QAAQ,CAAC,KAAD,CAAlD;AACA,QAAMO,WAAW,GAAGC,UAAU,CAACN,WAAD,CAA9B;;AAEAO,EAAAA,MAAM,CAACC,QAAP,GAAkB,MAAM;AACtBC,IAAAA,OAAO,CAACC,GAAR,CAAYC,QAAQ,CAACC,eAAT,CAAyBC,SAArC;AAEA,UAAM;AAAEC,MAAAA;AAAF,QAAaZ,KAAnB;;AAEA,QACES,QAAQ,CAACI,IAAT,CAAcF,SAAd,GAA0BC,MAA1B,IACAH,QAAQ,CAACC,eAAT,CAAyBC,SAAzB,GAAqCC,MAFvC,EAGE;AACAV,MAAAA,gBAAgB,CAAC,IAAD,CAAhB;AACD,KALD,MAKO,IACLO,QAAQ,CAACI,IAAT,CAAcF,SAAd,GAA0BC,MAA1B,IACAH,QAAQ,CAACC,eAAT,CAAyBC,SAAzB,GAAqCC,MAFhC,EAGL;AACAV,MAAAA,gBAAgB,CAAC,KAAD,CAAhB;AACD;AACF,GAhBD;;AAkBA,QAAMY,QAAQ,GAAGX,WAAW,CAACY,QAAZ,GAAuB,OAAvB,GAAiC,MAAlD;;AAEA,MAAId,aAAJ,EAAmB;AACjB,wBACE;AAAK,MAAA,SAAS,EAAC,eAAf;AAAA,8BACE,QAAC,YAAD;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AACE,oBAAU,eADZ;AAEE,qBAAWa,QAFb;AAGE,QAAA,SAAS,EAAC,iBAHZ;AAIE,QAAA,OAAO,EAAE,MAAMT,MAAM,CAACW,QAAP,CAAgB,CAAhB,EAAmB,CAAnB,CAJjB;AAAA,+BAME;AAAG,UAAA,SAAS,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA;AANF;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAaD;;AACD,SAAO,EAAP;AACD,CAxCD;;GAAMjB,c;;KAAAA,c;AA0CN,eAAeA,cAAf","sourcesContent":["import React, { useState } from \"react\";\r\nimport ReactTooltip from \"react-tooltip\";\r\nimport DarkContext from \"./../../context/darkMode\";\r\n\r\nconst ScrollToTopBtn = (props) => {\r\n  const [showScrollBtn, setshowScrollBtn] = useState(false);\r\n  const darkContext = useContext(DarkContext);\r\n\r\n  window.onscroll = () => {\r\n    console.log(document.documentElement.scrollTop);\r\n\r\n    const { showOn } = props;\r\n\r\n    if (\r\n      document.body.scrollTop > showOn ||\r\n      document.documentElement.scrollTop > showOn\r\n    ) {\r\n      setshowScrollBtn(true);\r\n    } else if (\r\n      document.body.scrollTop < showOn ||\r\n      document.documentElement.scrollTop < showOn\r\n    ) {\r\n      setshowScrollBtn(false);\r\n    }\r\n  };\r\n\r\n  const dataType = darkContext.darkMode ? \"light\" : \"dark\";\r\n\r\n  if (showScrollBtn) {\r\n    return (\r\n      <div className=\"scroll-to-top\">\r\n        <ReactTooltip />\r\n        <button\r\n          data-tip={\"Scroll To Top\"}\r\n          data-type={dataType}\r\n          className=\"btn btn-success\"\r\n          onClick={() => window.scrollTo(0, 0)}\r\n        >\r\n          <i className=\"fas fa-arrow-up\"></i>\r\n        </button>\r\n      </div>\r\n    );\r\n  }\r\n  return \"\";\r\n};\r\n\r\nexport default ScrollToTopBtn;\r\n"]},"metadata":{},"sourceType":"module"}