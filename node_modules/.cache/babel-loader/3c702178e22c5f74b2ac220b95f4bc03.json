{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\kenny\\\\Projects\\\\djangotutorials\\\\drf_react_project\\\\react_frontend\\\\blogapi\\\\src\\\\components\\\\actions\\\\updatePost.jsx\";\nimport React from \"react\";\nimport Form from \"../common/form\";\nimport Joi from \"joi-browser\";\nimport DarkContext from \"../../context/darkMode\";\nimport axios from \"axios\";\nimport apiURL from \"../../apiUrl\";\nimport axiosInstance from \"./../../baseAxios\";\nimport { Link } from \"react-router-dom\";\nimport history from \"./../../history\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class UpdatePost extends Form {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      data: {\n        title: \"\",\n        content: \"\"\n      },\n      errors: {},\n      slug: \"\"\n    };\n    this.schema = {\n      title: Joi.string().required().min(10).max(80).label(\"Title\"),\n      content: Joi.string().required().min(100).label(\"Content\")\n    };\n\n    this.afterSubmit = () => {\n      axiosInstance.put(\"update-post/\" + this.props.match.params.slug, {\n        title: this.state.data.title,\n        slug: \"\",\n        author: this.props.users.filter(user => user.username == localStorage.getItem(\"currentUser\"))[0].id,\n        content: this.state.data.content\n      }).then(res => {\n        this.props.history.replace(\"/dashboard\");\n        console.log(res);\n      }).catch(response => console.log(response.response));\n    };\n  }\n\n  componentDidMount() {\n    this.props.toggleShowSearchBar(false);\n    axiosInstance.get(apiURL + \"posts/\" + this.props.match.params.slug).then(res => {\n      const {\n        title,\n        slug,\n        excerpt,\n        content\n      } = res.data;\n      this.setState({\n        slug: slug\n      });\n      this.setState({\n        data: {\n          title: title,\n          content: content\n        }\n      });\n    }).catch(res => console.log(res.response));\n\n    const BaseJoi = require(\"joi-browser\");\n\n    const ImageExtension = require(\"joi-image-extension\");\n\n    const Joi = BaseJoi.extend(ImageExtension);\n    this.setState({\n      joi: Joi\n    });\n  }\n\n  afterChange(input) {}\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(DarkContext.Consumer, {\n      children: darkContext => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-container border \" + `${darkContext.darkMode ? \"bg-dark\" : \"bg-light\"}`,\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          className: darkContext.darkMode ? \"text-light\" : \"\",\n          children: \"Updating Your Post..\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          action: \"\",\n          onSubmit: this.handleSubmit,\n          children: [this.renderInput(\"title\", \"Title\"), this.renderTextArea(\"content\", \"Content\"), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"update-cancel-post-container\",\n            children: [this.renderButton(\"Update Post\"), /*#__PURE__*/_jsxDEV(Link //to={\"/posts/\" + this.state.slug}\n            , {\n              onClick: history.goBack,\n              className: \"btn btn-primary\",\n              children: \"Cancel\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 83,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["C:/Users/kenny/Projects/djangotutorials/drf_react_project/react_frontend/blogapi/src/components/actions/updatePost.jsx"],"names":["React","Form","Joi","DarkContext","axios","apiURL","axiosInstance","Link","history","UpdatePost","state","data","title","content","errors","slug","schema","string","required","min","max","label","afterSubmit","put","props","match","params","author","users","filter","user","username","localStorage","getItem","id","then","res","replace","console","log","catch","response","componentDidMount","toggleShowSearchBar","get","excerpt","setState","BaseJoi","require","ImageExtension","extend","joi","afterChange","input","render","darkContext","darkMode","handleSubmit","renderInput","renderTextArea","renderButton","goBack"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport Form from \"../common/form\";\r\nimport Joi from \"joi-browser\";\r\nimport DarkContext from \"../../context/darkMode\";\r\nimport axios from \"axios\";\r\nimport apiURL from \"../../apiUrl\";\r\nimport axiosInstance from \"./../../baseAxios\";\r\nimport { Link } from \"react-router-dom\";\r\nimport history from \"./../../history\";\r\n\r\nexport default class UpdatePost extends Form {\r\n  componentDidMount() {\r\n    this.props.toggleShowSearchBar(false);\r\n    axiosInstance\r\n      .get(apiURL + \"posts/\" + this.props.match.params.slug)\r\n      .then((res) => {\r\n        const { title, slug, excerpt, content } = res.data;\r\n        this.setState({ slug: slug });\r\n        this.setState({\r\n          data: {\r\n            title: title,\r\n            content: content,\r\n          },\r\n        });\r\n      })\r\n      .catch((res) => console.log(res.response));\r\n\r\n    const BaseJoi = require(\"joi-browser\");\r\n    const ImageExtension = require(\"joi-image-extension\");\r\n\r\n    const Joi = BaseJoi.extend(ImageExtension);\r\n    this.setState({ joi: Joi });\r\n  }\r\n\r\n  state = {\r\n    data: { title: \"\", content: \"\" },\r\n    errors: {},\r\n    slug: \"\",\r\n  };\r\n\r\n  schema = {\r\n    title: Joi.string().required().min(10).max(80).label(\"Title\"),\r\n    content: Joi.string().required().min(100).label(\"Content\"),\r\n  };\r\n\r\n  afterSubmit = () => {\r\n    axiosInstance\r\n      .put(\"update-post/\" + this.props.match.params.slug, {\r\n        title: this.state.data.title,\r\n        slug: \"\",\r\n        author: this.props.users.filter(\r\n          (user) => user.username == localStorage.getItem(\"currentUser\")\r\n        )[0].id,\r\n        content: this.state.data.content,\r\n      })\r\n      .then((res) => {\r\n        this.props.history.replace(\"/dashboard\");\r\n        console.log(res);\r\n      })\r\n      .catch((response) => console.log(response.response));\r\n  };\r\n\r\n  afterChange(input) {}\r\n\r\n  render() {\r\n    return (\r\n      <DarkContext.Consumer>\r\n        {(darkContext) => (\r\n          <div\r\n            className={\r\n              \"form-container border \" +\r\n              `${darkContext.darkMode ? \"bg-dark\" : \"bg-light\"}`\r\n            }\r\n          >\r\n            <h1 className={darkContext.darkMode ? \"text-light\" : \"\"}>\r\n              Updating Your Post..\r\n            </h1>\r\n            <form action=\"\" onSubmit={this.handleSubmit}>\r\n              {this.renderInput(\"title\", \"Title\")}\r\n              {this.renderTextArea(\"content\", \"Content\")}\r\n              <div className=\"update-cancel-post-container\">\r\n                {this.renderButton(\"Update Post\")}\r\n                <Link\r\n                  //to={\"/posts/\" + this.state.slug}\r\n                  onClick={history.goBack}\r\n                  className=\"btn btn-primary\"\r\n                >\r\n                  Cancel\r\n                </Link>\r\n              </div>\r\n            </form>\r\n          </div>\r\n        )}\r\n      </DarkContext.Consumer>\r\n    );\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}