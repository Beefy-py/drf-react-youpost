{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\kenny\\\\Projects\\\\djangotutorials\\\\drf_react_project\\\\react_frontend\\\\blogapi\\\\src\\\\components\\\\content\\\\postDetail.jsx\";\nimport React, { Component } from \"react\";\nimport UserContext from \"../../context/userContext\";\nimport DarkContext from \"./../../context/darkMode\";\nimport { Link } from \"react-router-dom\";\nimport axiosInstance from \"./../../baseAxios\";\nimport CommentsHeader from \"./../actions/commentsHeader\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class PostDetail extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      currentUserId: JSON.parse(atob(localStorage.getItem(\"access_token\").split(\".\")[1])).user_id,\n      postAuthorId: this.props.post.author,\n      currentUser: {},\n      comments: []\n    };\n\n    this.renderUpDel = () => {\n      const {\n        currentUserId,\n        postAuthorId,\n        currentUser\n      } = this.state;\n      const {\n        slug\n      } = this.props.post;\n\n      if (currentUserId !== postAuthorId) {\n        if (currentUser.is_superuser) {\n          console.log(\"admin has right to delete post.\");\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"actions\",\n            children: [/*#__PURE__*/_jsxDEV(Link, {\n              to: \"/update-post/\" + slug,\n              children: /*#__PURE__*/_jsxDEV(\"i\", {\n                className: \"fas fa-wrench\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 34,\n                columnNumber: 15\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 33,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(Link, {\n              to: \"/delete-post/\" + slug,\n              children: /*#__PURE__*/_jsxDEV(\"i\", {\n                className: \"fas fa-trash-alt\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 37,\n                columnNumber: 15\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 36,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 11\n          }, this);\n        }\n\n        return \"\";\n      }\n\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"actions\",\n        children: [/*#__PURE__*/_jsxDEV(Link, {\n          to: \"/update-post/\" + slug,\n          children: /*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"fas fa-wrench\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/delete-post/\" + slug,\n          children: /*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"fas fa-trash-alt\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 7\n      }, this);\n    };\n\n    this.addComment = comment => {\n      const {\n        comments\n      } = this.state;\n      let newComments = comments;\n      newComments.push(comment);\n      this.setState({\n        comments: newComments\n      });\n    };\n  }\n\n  componentDidMount() {\n    axiosInstance.get(\"user/list/\" + this.state.currentUserId).then(res => this.setState({\n      currentUser: res.data\n    }));\n  }\n\n  render() {\n    const {\n      title,\n      image,\n      author,\n      content,\n      published\n    } = this.props.post;\n    const {\n      comments\n    } = this.state;\n    const accessToken = localStorage.getItem(\"access_token\");\n    return this.props.post ? /*#__PURE__*/_jsxDEV(DarkContext.Consumer, {\n      children: darkContext => /*#__PURE__*/_jsxDEV(UserContext.Consumer, {\n        children: userContext => /*#__PURE__*/_jsxDEV(\"article\", {\n          className: darkContext.darkMode ? \"post-container text-light\" : \"post-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: darkContext.darkMode ? \"dark-page-shadow post-img-title\" : \"post-img-title\",\n            children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n              children: title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 90,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n              src: image,\n              className: \"card-img-top\",\n              alt: \"Image for: \" + title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 92,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: darkContext.darkMode ? \"post-body dark-page-shadow border bg-dark\" : \"post-body border bg-light\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                children: [userContext.getAuthor(author), \" published on\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 106,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: published ? new Intl.DateTimeFormat(\"en-GB\", {\n                  dateStyle: \"full\"\n                }).format(new Date(published)) : \"\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 107,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 105,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 115,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                whiteSpace: \"pre-wrap\"\n              },\n              className: darkContext.darkMode ? \"post-content\" : \"post-content text-dark\",\n              children: content\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 116,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(React.Fragment, {\n              children: this.renderUpDel()\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 127,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: darkContext.darkMode ? \"comments dark-page-shadow border bg-dark\" : \"comments border bg-light\",\n            children: [/*#__PURE__*/_jsxDEV(CommentsHeader, {\n              addComment: this.addComment\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 150,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n              children: comments.length ? comments.map(comment => /*#__PURE__*/_jsxDEV(\"p\", {\n                children: comment\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 153,\n                columnNumber: 49\n              }, this)) : /*#__PURE__*/_jsxDEV(\"h3\", {\n                children: \"No Comments\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 155,\n                columnNumber: 23\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 151,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 143,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this) : \"\";\n  }\n\n}","map":{"version":3,"sources":["C:/Users/kenny/Projects/djangotutorials/drf_react_project/react_frontend/blogapi/src/components/content/postDetail.jsx"],"names":["React","Component","UserContext","DarkContext","Link","axiosInstance","CommentsHeader","PostDetail","state","currentUserId","JSON","parse","atob","localStorage","getItem","split","user_id","postAuthorId","props","post","author","currentUser","comments","renderUpDel","slug","is_superuser","console","log","addComment","comment","newComments","push","setState","componentDidMount","get","then","res","data","render","title","image","content","published","accessToken","darkContext","userContext","darkMode","getAuthor","Intl","DateTimeFormat","dateStyle","format","Date","whiteSpace","length","map"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport UserContext from \"../../context/userContext\";\r\nimport DarkContext from \"./../../context/darkMode\";\r\nimport { Link } from \"react-router-dom\";\r\nimport axiosInstance from \"./../../baseAxios\";\r\nimport CommentsHeader from \"./../actions/commentsHeader\";\r\n\r\nexport default class PostDetail extends Component {\r\n  state = {\r\n    currentUserId: JSON.parse(\r\n      atob(localStorage.getItem(\"access_token\").split(\".\")[1])\r\n    ).user_id,\r\n    postAuthorId: this.props.post.author,\r\n    currentUser: {},\r\n    comments: [],\r\n  };\r\n\r\n  componentDidMount() {\r\n    axiosInstance\r\n      .get(\"user/list/\" + this.state.currentUserId)\r\n      .then((res) => this.setState({ currentUser: res.data }));\r\n  }\r\n\r\n  renderUpDel = () => {\r\n    const { currentUserId, postAuthorId, currentUser } = this.state;\r\n    const { slug } = this.props.post;\r\n\r\n    if (currentUserId !== postAuthorId) {\r\n      if (currentUser.is_superuser) {\r\n        console.log(\"admin has right to delete post.\");\r\n        return (\r\n          <div className=\"actions\">\r\n            <Link to={\"/update-post/\" + slug}>\r\n              <i className=\"fas fa-wrench\"></i>\r\n            </Link>\r\n            <Link to={\"/delete-post/\" + slug}>\r\n              <i className=\"fas fa-trash-alt\"></i>\r\n            </Link>\r\n          </div>\r\n        );\r\n      }\r\n      return \"\";\r\n    }\r\n\r\n    return (\r\n      <div className=\"actions\">\r\n        <Link to={\"/update-post/\" + slug}>\r\n          <i className=\"fas fa-wrench\"></i>\r\n        </Link>\r\n        <Link to={\"/delete-post/\" + slug}>\r\n          <i className=\"fas fa-trash-alt\"></i>\r\n        </Link>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  addComment = (comment) => {\r\n    const { comments } = this.state;\r\n    let newComments = comments;\r\n    newComments.push(comment);\r\n    this.setState({ comments: newComments });\r\n  };\r\n\r\n  render() {\r\n    const { title, image, author, content, published } = this.props.post;\r\n\r\n    const { comments } = this.state;\r\n\r\n    const accessToken = localStorage.getItem(\"access_token\");\r\n\r\n    return this.props.post ? (\r\n      <DarkContext.Consumer>\r\n        {(darkContext) => (\r\n          <UserContext.Consumer>\r\n            {(userContext) => (\r\n              <article\r\n                className={\r\n                  darkContext.darkMode\r\n                    ? \"post-container text-light\"\r\n                    : \"post-container\"\r\n                }\r\n              >\r\n                <div\r\n                  className={\r\n                    darkContext.darkMode\r\n                      ? \"dark-page-shadow post-img-title\"\r\n                      : \"post-img-title\"\r\n                  }\r\n                >\r\n                  <h1>{title}</h1>\r\n\r\n                  <img\r\n                    src={image}\r\n                    className=\"card-img-top\"\r\n                    alt={\"Image for: \" + title}\r\n                  />\r\n                </div>\r\n                <div\r\n                  className={\r\n                    darkContext.darkMode\r\n                      ? \"post-body dark-page-shadow border bg-dark\"\r\n                      : \"post-body border bg-light\"\r\n                  }\r\n                >\r\n                  <span>\r\n                    <p>{userContext.getAuthor(author)} published on</p>\r\n                    <p>\r\n                      {published\r\n                        ? new Intl.DateTimeFormat(\"en-GB\", {\r\n                            dateStyle: \"full\",\r\n                          }).format(new Date(published))\r\n                        : \"\"}\r\n                    </p>\r\n                  </span>\r\n                  <hr />\r\n                  <div\r\n                    style={{ whiteSpace: \"pre-wrap\" }}\r\n                    className={\r\n                      darkContext.darkMode\r\n                        ? \"post-content\"\r\n                        : \"post-content text-dark\"\r\n                    }\r\n                  >\r\n                    {content}\r\n                  </div>\r\n\r\n                  <React.Fragment>\r\n                    {/* {author === currentUserId ? (\r\n                      <div className=\"actions\">\r\n                        <Link to={\"/update-post/\" + slug}>\r\n                          <i className=\"fas fa-wrench\"></i>\r\n                        </Link>\r\n                        <Link to={\"/delete-post/\" + slug}>\r\n                          <i className=\"fas fa-trash-alt\"></i>\r\n                        </Link>\r\n                      </div>\r\n                    ) : (\r\n                      \"\"\r\n                    )} */}\r\n                    {this.renderUpDel()}\r\n                  </React.Fragment>\r\n                </div>\r\n                <div\r\n                  className={\r\n                    darkContext.darkMode\r\n                      ? \"comments dark-page-shadow border bg-dark\"\r\n                      : \"comments border bg-light\"\r\n                  }\r\n                >\r\n                  <CommentsHeader addComment={this.addComment} />\r\n                  <section>\r\n                    {comments.length ? (\r\n                      comments.map((comment) => <p>{comment}</p>)\r\n                    ) : (\r\n                      <h3>No Comments</h3>\r\n                    )}\r\n                  </section>\r\n                </div>\r\n              </article>\r\n            )}\r\n          </UserContext.Consumer>\r\n        )}\r\n      </DarkContext.Consumer>\r\n    ) : (\r\n      \"\"\r\n    );\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}