{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\kenny\\\\Projects\\\\djangotutorials\\\\drf_react_project\\\\react_frontend\\\\blogapi\\\\src\\\\components\\\\actions\\\\postLoading.jsx\";\nimport React from \"react\";\nimport Skeleton from \"@yisheng90/react-loading\";\n/*<Spinner animation=\"grow\" variant=\"primary\" />*/\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst PostLoading = Component => {\n  const renderLoadingBars = rows => {\n    let heights = [];\n\n    for (let i = 0; i < rows; i++) {\n      heights.push(250);\n    }\n  };\n\n  return function PostLoadingComponent({\n    items,\n    isLoading,\n    ...props\n  }) {\n    if (!isLoading) {\n      return /*#__PURE__*/_jsxDEV(Component, { ...props\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 14\n      }, this);\n    }\n\n    return /*#__PURE__*/_jsxDEV(React.Fragment, {\n      children: items === \"1+\" ? /*#__PURE__*/_jsxDEV(React.Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(Skeleton, {\n          height: 220\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Skeleton, {\n          height: 220\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(Skeleton, {\n        height: 220,\n        width: \"90%\",\n        class: \"ree\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this);\n  };\n};\n\n_c = PostLoading;\nexport default PostLoading;\n\nvar _c;\n\n$RefreshReg$(_c, \"PostLoading\");","map":{"version":3,"sources":["C:/Users/kenny/Projects/djangotutorials/drf_react_project/react_frontend/blogapi/src/components/actions/postLoading.jsx"],"names":["React","Skeleton","PostLoading","Component","renderLoadingBars","rows","heights","i","push","PostLoadingComponent","items","isLoading","props"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,0BAArB;AAEA;;;;AAEA,MAAMC,WAAW,GAAIC,SAAD,IAAe;AACjC,QAAMC,iBAAiB,GAAIC,IAAD,IAAU;AAClC,QAAIC,OAAO,GAAG,EAAd;;AACA,SAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGF,IAApB,EAA0BE,CAAC,EAA3B,EAA+B;AAC7BD,MAAAA,OAAO,CAACE,IAAR,CAAa,GAAb;AACD;AACF,GALD;;AAOA,SAAO,SAASC,oBAAT,CAA8B;AAAEC,IAAAA,KAAF;AAASC,IAAAA,SAAT;AAAoB,OAAGC;AAAvB,GAA9B,EAA8D;AACnE,QAAI,CAACD,SAAL,EAAgB;AACd,0BAAO,QAAC,SAAD,OAAeC;AAAf;AAAA;AAAA;AAAA;AAAA,cAAP;AACD;;AAED,wBACE,QAAC,KAAD,CAAO,QAAP;AAAA,gBACGF,KAAK,KAAK,IAAV,gBACC,QAAC,KAAD,CAAO,QAAP;AAAA,gCACE,QAAC,QAAD;AAAU,UAAA,MAAM,EAAE;AAAlB;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE,QAAC,QAAD;AAAU,UAAA,MAAM,EAAE;AAAlB;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cADD,gBAMC,QAAC,QAAD;AAAU,QAAA,MAAM,EAAE,GAAlB;AAAuB,QAAA,KAAK,EAAE,KAA9B;AAAqC,QAAA,KAAK,EAAC;AAA3C;AAAA;AAAA;AAAA;AAAA;AAPJ;AAAA;AAAA;AAAA;AAAA,YADF;AAYD,GAjBD;AAkBD,CA1BD;;KAAMR,W;AA4BN,eAAeA,WAAf","sourcesContent":["import React from \"react\";\r\nimport Skeleton from \"@yisheng90/react-loading\";\r\n\r\n/*<Spinner animation=\"grow\" variant=\"primary\" />*/\r\n\r\nconst PostLoading = (Component) => {\r\n  const renderLoadingBars = (rows) => {\r\n    let heights = [];\r\n    for (let i = 0; i < rows; i++) {\r\n      heights.push(250);\r\n    }\r\n  };\r\n\r\n  return function PostLoadingComponent({ items, isLoading, ...props }) {\r\n    if (!isLoading) {\r\n      return <Component {...props} />;\r\n    }\r\n\r\n    return (\r\n      <React.Fragment>\r\n        {items === \"1+\" ? (\r\n          <React.Fragment>\r\n            <Skeleton height={220} />\r\n            <Skeleton height={220} />\r\n          </React.Fragment>\r\n        ) : (\r\n          <Skeleton height={220} width={\"90%\"} class=\"ree\" />\r\n        )}\r\n      </React.Fragment>\r\n    );\r\n  };\r\n};\r\n\r\nexport default PostLoading;\r\n"]},"metadata":{},"sourceType":"module"}