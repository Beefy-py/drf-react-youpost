{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\kenny\\\\Projects\\\\drf_react_youpost\\\\src\\\\components\\\\content\\\\posts.jsx\";\nimport React, { Component } from \"react\";\nimport DarkContext from \"./../../context/darkMode\";\nimport ReactPaginate from \"react-paginate\";\nimport SingularPost from \"./singularPost\";\nimport ScrollToTopBtn from \"../actions/scrollToTopBtn\";\nimport { Link } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      offset: 0,\n      data: [],\n      perPage: 6,\n      currentPage: 0\n    };\n\n    this.renderTags = tagList => {\n      return tagList.map(tag => /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => this.props.getPostsByTag(tag.id),\n        className: \"badge \" + tag.styling,\n        children: tag.name\n      }, tag.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 7\n      }, this));\n    };\n\n    this.reactToPost = (postId, vote) => {\n      console.log(\"reacted to \" + postId + \" with \" + vote);\n    };\n\n    this.getRatingSuffix = rating => {\n      if (rating > 999000000) {\n        const num = (rating / 1000000000).toFixed(1);\n        return `${num}B`;\n      }\n\n      if (rating > 999999) {\n        const num = (rating / 1000000).toFixed(1);\n        return `${num}M`;\n      }\n\n      if (rating > 999) {\n        const num = (rating / 1000).toFixed(1);\n        return `${num}K`;\n      }\n\n      if (rating < -999999999) {\n        const num = (rating / 1000000000).toFixed(1);\n        return `${num}B`;\n      }\n\n      if (rating < -999999) {\n        const num = (rating / 1000000).toFixed(1);\n        return `${num}M`;\n      }\n\n      if (rating < -999) {\n        const num = (rating / 1000).toFixed(1);\n        return `${num}K`;\n      }\n\n      return rating.toString();\n    };\n\n    this.handlePageClick = e => {\n      const selectedPage = e.selected;\n      const offset = selectedPage * this.state.perPage;\n      this.setState({\n        currentPage: selectedPage,\n        offset: offset\n      }, () => this.receivedData());\n      window.scrollTo(0, 0);\n    };\n  }\n\n  componentDidMount() {\n    if (this.props.posts) {\n      this.receivedData();\n    }\n  }\n\n  receivedData() {\n    const data = this.props.posts;\n    const slice = data.slice(this.state.offset, this.state.offset + this.state.perPage);\n    const postData = slice.map(post => {\n      const {\n        title,\n        content,\n        slug,\n        author,\n        image,\n        rating\n      } = post;\n      const postDate = new Intl.DateTimeFormat(\"en-GB\", {\n        month: \"long\",\n        year: \"numeric\",\n        day: \"numeric\"\n      }).format(new Date(post.published));\n      const day = new Date(postDate).toLocaleString(\"en-us\", {\n        weekday: \"long\"\n      });\n      console.log(image);\n      const dataType = this.context.darkMode ? \"light\" : \"dark\";\n      return /*#__PURE__*/_jsxDEV(React.Fragment, {\n        children: /*#__PURE__*/_jsxDEV(SingularPost, {\n          title: title,\n          content: content,\n          slug: slug,\n          author: author,\n          image: image,\n          rating: rating,\n          postDate: postDate,\n          day: day,\n          dataType: dataType,\n          post: post,\n          getRatingSuffix: this.getRatingSuffix,\n          dataType: dataType\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 11\n        }, this)\n      }, post.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this);\n    });\n    this.setState({\n      pageCount: Math.ceil(data.length / this.state.perPage),\n      postData\n    });\n  }\n\n  render() {\n    const {\n      posts\n    } = this.props;\n    const {\n      renderTags,\n      reactToPost\n    } = this;\n    const pageLinkClassName = this.context.darkMode ? \" bg-dark page-link text-light\" : \"page-link\";\n    return /*#__PURE__*/_jsxDEV(DarkContext.Consumer, {\n      children: darkContext => /*#__PURE__*/_jsxDEV(React.Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"main\", {\n          className: darkContext.darkMode ? \"bg-dark dark-page-shadow \" : \"bg-light border\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"post-tags\",\n            children: renderTags([{\n              name: \"latest\",\n              styling: \"btn-primary\",\n              id: \"Lat\"\n            }, {\n              name: \"most popular\",\n              styling: \"btn-success\",\n              id: \"MPo\"\n            }, {\n              name: \"least popular\",\n              styling: \"btn-danger\",\n              id: \"LPo\"\n            }, {\n              name: \"oldest\",\n              styling: \"btn-warning\",\n              id: \"Old\"\n            }])\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 145,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: darkContext.darkMode ? \"sorted-by text-light\" : \"sorted-by\",\n            children: [\"Sorted By:\", \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n              children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                className: \"fas fa-filter\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 161,\n                columnNumber: 19\n              }, this), \" \", this.props.curSorted]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 160,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 154,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n            className: darkContext.darkMode ? \"posts-section-dark posts-section\" : \"posts-section\",\n            children: this.state.postData\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 165,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 13\n        }, this), \" \", this.data ? /*#__PURE__*/_jsxDEV(ReactPaginate, {\n          previousLabel: \"previous\",\n          nextLabel: \"next\",\n          breakLabel: \"...\",\n          breakClassName: \"break-me\",\n          pageCount: this.state.pageCount,\n          marginPagesDisplayed: 3,\n          pageRangeDisplayed: 5,\n          onPageChange: this.handlePageClick,\n          containerClassName: \"pagination justify-content-center\",\n          pageClassName: \"page-item\",\n          pageLinkClassName: pageLinkClassName,\n          previousClassName: pageLinkClassName,\n          nextClassName: pageLinkClassName,\n          activeClassName: \"active\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 26\n        }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"There are no posts \", /*#__PURE__*/_jsxDEV(Link, {\n            to: \"create-post\",\n            children: \"Create A Post\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 190,\n            columnNumber: 39\n          }, this), \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 190,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(ScrollToTopBtn, {\n          showOn: 2500\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 191,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 7\n    }, this);\n  }\n\n}\nApp.contextType = DarkContext;","map":{"version":3,"sources":["C:/Users/kenny/Projects/drf_react_youpost/src/components/content/posts.jsx"],"names":["React","Component","DarkContext","ReactPaginate","SingularPost","ScrollToTopBtn","Link","App","state","offset","data","perPage","currentPage","renderTags","tagList","map","tag","props","getPostsByTag","id","styling","name","reactToPost","postId","vote","console","log","getRatingSuffix","rating","num","toFixed","toString","handlePageClick","e","selectedPage","selected","setState","receivedData","window","scrollTo","componentDidMount","posts","slice","postData","post","title","content","slug","author","image","postDate","Intl","DateTimeFormat","month","year","day","format","Date","published","toLocaleString","weekday","dataType","context","darkMode","pageCount","Math","ceil","length","render","pageLinkClassName","darkContext","curSorted","contextType"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport DarkContext from \"./../../context/darkMode\";\r\nimport ReactPaginate from \"react-paginate\";\r\nimport SingularPost from \"./singularPost\";\r\nimport ScrollToTopBtn from \"../actions/scrollToTopBtn\";\r\nimport { Link } from 'react-router-dom';\r\n\r\nexport default class App extends Component {\r\n  state = { offset: 0, data: [], perPage: 6, currentPage: 0 };\r\n  static contextType = DarkContext;\r\n\r\n  componentDidMount() {\r\n    if (this.props.posts) {\r\n      this.receivedData();\r\n    }\r\n  }\r\n\r\n  renderTags = (tagList) => {\r\n    return tagList.map((tag) => (\r\n      <button\r\n        key={tag.id}\r\n        onClick={() => this.props.getPostsByTag(tag.id)}\r\n        className={\"badge \" + tag.styling}\r\n      >\r\n        {tag.name}\r\n      </button>\r\n    ));\r\n  };\r\n\r\n  reactToPost = (postId, vote) => {\r\n    console.log(\"reacted to \" + postId + \" with \" + vote);\r\n  };\r\n\r\n  getRatingSuffix = (rating) => {\r\n    if (rating > 999000000) {\r\n      const num = (rating / 1000000000).toFixed(1);\r\n      return `${num}B`;\r\n    }\r\n    if (rating > 999999) {\r\n      const num = (rating / 1000000).toFixed(1);\r\n      return `${num}M`;\r\n    }\r\n    if (rating > 999) {\r\n      const num = (rating / 1000).toFixed(1);\r\n      return `${num}K`;\r\n    }\r\n\r\n    if (rating < -999999999) {\r\n      const num = (rating / 1000000000).toFixed(1);\r\n      return `${num}B`;\r\n    }\r\n    if (rating < -999999) {\r\n      const num = (rating / 1000000).toFixed(1);\r\n      return `${num}M`;\r\n    }\r\n\r\n    if (rating < -999) {\r\n      const num = (rating / 1000).toFixed(1);\r\n      return `${num}K`;\r\n    }\r\n\r\n    return rating.toString();\r\n  };\r\n\r\n  receivedData() {\r\n    const data = this.props.posts;\r\n\r\n    const slice = data.slice(\r\n      this.state.offset,\r\n      this.state.offset + this.state.perPage\r\n    );\r\n    const postData = slice.map((post) => {\r\n      const { title, content, slug, author, image, rating } = post;\r\n      const postDate = new Intl.DateTimeFormat(\"en-GB\", {\r\n        month: \"long\",\r\n        year: \"numeric\",\r\n        day: \"numeric\",\r\n      }).format(new Date(post.published));\r\n\r\n      const day = new Date(postDate).toLocaleString(\"en-us\", {\r\n        weekday: \"long\",\r\n      });\r\n\r\n      console.log(image);\r\n\r\n      const dataType = this.context.darkMode ? \"light\" : \"dark\";\r\n\r\n      return (\r\n        <React.Fragment key={post.id}>\r\n          <SingularPost\r\n            title={title}\r\n            content={content}\r\n            slug={slug}\r\n            author={author}\r\n            image={image}\r\n            rating={rating}\r\n            postDate={postDate}\r\n            day={day}\r\n            dataType={dataType}\r\n            post={post}\r\n            getRatingSuffix={this.getRatingSuffix}\r\n            dataType={dataType}\r\n          />\r\n        </React.Fragment>\r\n      );\r\n    });\r\n\r\n    this.setState({\r\n      pageCount: Math.ceil(data.length / this.state.perPage),\r\n\r\n      postData,\r\n    });\r\n  }\r\n\r\n  handlePageClick = (e) => {\r\n    const selectedPage = e.selected;\r\n    const offset = selectedPage * this.state.perPage;\r\n\r\n    this.setState({ currentPage: selectedPage, offset: offset }, () =>\r\n      this.receivedData()\r\n    );\r\n\r\n    window.scrollTo(0, 0);\r\n  };\r\n\r\n  render() {\r\n    const { posts } = this.props;\r\n    const { renderTags, reactToPost } = this;\r\n\r\n    const pageLinkClassName = this.context.darkMode\r\n      ? \" bg-dark page-link text-light\"\r\n      : \"page-link\";\r\n\r\n    return (\r\n      <DarkContext.Consumer>\r\n        {(darkContext) => (\r\n          <React.Fragment>\r\n            <main\r\n              className={\r\n                darkContext.darkMode\r\n                  ? \"bg-dark dark-page-shadow \"\r\n                  : \"bg-light border\"\r\n              }\r\n            >\r\n              <div className=\"post-tags\">\r\n                {renderTags([\r\n                  { name: \"latest\", styling: \"btn-primary\", id: \"Lat\" },\r\n                  { name: \"most popular\", styling: \"btn-success\", id: \"MPo\" },\r\n                  { name: \"least popular\", styling: \"btn-danger\", id: \"LPo\" },\r\n                  { name: \"oldest\", styling: \"btn-warning\", id: \"Old\" },\r\n                ])}\r\n              </div>\r\n\r\n              <p\r\n                className={\r\n                  darkContext.darkMode ? \"sorted-by text-light\" : \"sorted-by\"\r\n                }\r\n              >\r\n                Sorted By:{\" \"}\r\n                <span>\r\n                  <i className=\"fas fa-filter\"></i> {this.props.curSorted}\r\n                </span>\r\n              </p>\r\n\r\n              <section\r\n                className={\r\n                  darkContext.darkMode\r\n                    ? \"posts-section-dark posts-section\"\r\n                    : \"posts-section\"\r\n                }\r\n              >\r\n                {this.state.postData}\r\n              </section>\r\n            </main>{\" \"}\r\n            {this.data ? <ReactPaginate\r\n              previousLabel={\"previous\"}\r\n              nextLabel={\"next\"}\r\n              breakLabel={\"...\"}\r\n              breakClassName={\"break-me\"}\r\n              pageCount={this.state.pageCount}\r\n              marginPagesDisplayed={3}\r\n              pageRangeDisplayed={5}\r\n              onPageChange={this.handlePageClick}\r\n              containerClassName={\"pagination justify-content-center\"}\r\n              pageClassName={\"page-item\"}\r\n              pageLinkClassName={pageLinkClassName}\r\n              previousClassName={pageLinkClassName}\r\n              nextClassName={pageLinkClassName}\r\n              activeClassName={\"active\"}\r\n            />: <p>There are no posts <Link to='create-post'>Create A Post</Link> </p>}\r\n            <ScrollToTopBtn showOn={2500} />\r\n          </React.Fragment>\r\n        )}\r\n      </DarkContext.Consumer>\r\n    );\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}