{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\kenny\\\\Projects\\\\djangotutorials\\\\drf_react_project\\\\react_frontend\\\\blogapi\\\\src\\\\components\\\\content\\\\body.jsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport axios from \"axios\";\nimport Posts from \"./posts\";\nimport PostLoadingComponent from \"../actions/postLoading\";\nimport { useState, useEffect, useContext } from \"react\";\nimport apiURL from \"../../apiUrl\";\nimport DarkContext from \"./../../context/darkMode\";\nimport { useHistory } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Body = props => {\n  _s();\n\n  const darkContext = useContext(DarkContext);\n  let history = useHistory();\n  const PostLoading = PostLoadingComponent(Posts);\n  const [appState, setAppState] = useState({\n    loading: false,\n    posts: null\n  });\n  useEffect(() => {\n    props.toggleShowSearchBar(true);\n    setAppState({\n      loading: true\n    });\n    axios.get(apiURL).then(res => setAppState({\n      loading: false,\n      posts: res.data\n    }));\n    axios.get(apiURL + \"search/?search=s\").then(res => console.log(res.data));\n  }, [setAppState]);\n  /*const handleChange = (e) => {\r\n    e.preventDefault();\r\n    setSearchValue({ search: e.target.value });\r\n    console.log(searchValue.search);\r\n  };\r\n    const goSearch = (e) => {\r\n    history.push({\r\n      pathname: \"/search/\",\r\n      search: \"?search= \" + searchValue.search,\r\n    });\r\n    window.location.reload();\r\n  };\r\n  \r\n   <SearchBar\r\n     handleChange={handleChange}\r\n     placeholder=\"search by title\"\r\n     searchQuery={searchValue.search}\r\n     setAppState={setAppState}\r\n     onRequestSearch={() => goSearch(searchValue.search)}\r\n   />; */\n\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    className: darkContext.darkMode ? \"bg-dark rm-box-shadow\" : \"bg-light border\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"post-tags\",\n      children: /*#__PURE__*/_jsxDEV(\"span\", {\n        className: darkContext.darkMode ? \"badge badge-light\" : \"badge badge-dark\",\n        children: \"latest\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(PostLoading, {\n      isLoading: appState.loading,\n      posts: appState.posts\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Body, \"h+u9UCMn6c7YEg3AJyQ0N5Cr+vw=\", false, function () {\n  return [useHistory];\n});\n\n_c = Body;\nexport default Body;\n\nvar _c;\n\n$RefreshReg$(_c, \"Body\");","map":{"version":3,"sources":["C:/Users/kenny/Projects/djangotutorials/drf_react_project/react_frontend/blogapi/src/components/content/body.jsx"],"names":["React","axios","Posts","PostLoadingComponent","useState","useEffect","useContext","apiURL","DarkContext","useHistory","Body","props","darkContext","history","PostLoading","appState","setAppState","loading","posts","toggleShowSearchBar","get","then","res","data","console","log","darkMode"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,OAAOC,oBAAP,MAAiC,wBAAjC;AACA,SAASC,QAAT,EAAmBC,SAAnB,EAA8BC,UAA9B,QAAgD,OAAhD;AACA,OAAOC,MAAP,MAAmB,cAAnB;AACA,OAAOC,WAAP,MAAwB,0BAAxB;AACA,SAASC,UAAT,QAA2B,kBAA3B;;;AAEA,MAAMC,IAAI,GAAIC,KAAD,IAAW;AAAA;;AACtB,QAAMC,WAAW,GAAGN,UAAU,CAACE,WAAD,CAA9B;AACA,MAAIK,OAAO,GAAGJ,UAAU,EAAxB;AAEA,QAAMK,WAAW,GAAGX,oBAAoB,CAACD,KAAD,CAAxC;AACA,QAAM,CAACa,QAAD,EAAWC,WAAX,IAA0BZ,QAAQ,CAAC;AAAEa,IAAAA,OAAO,EAAE,KAAX;AAAkBC,IAAAA,KAAK,EAAE;AAAzB,GAAD,CAAxC;AAEAb,EAAAA,SAAS,CAAC,MAAM;AACdM,IAAAA,KAAK,CAACQ,mBAAN,CAA0B,IAA1B;AAEAH,IAAAA,WAAW,CAAC;AAAEC,MAAAA,OAAO,EAAE;AAAX,KAAD,CAAX;AACAhB,IAAAA,KAAK,CACFmB,GADH,CACOb,MADP,EAEGc,IAFH,CAESC,GAAD,IAASN,WAAW,CAAC;AAAEC,MAAAA,OAAO,EAAE,KAAX;AAAkBC,MAAAA,KAAK,EAAEI,GAAG,CAACC;AAA7B,KAAD,CAF5B;AAIAtB,IAAAA,KAAK,CAACmB,GAAN,CAAUb,MAAM,GAAG,kBAAnB,EAAuCc,IAAvC,CAA6CC,GAAD,IAASE,OAAO,CAACC,GAAR,CAAYH,GAAG,CAACC,IAAhB,CAArD;AACD,GATQ,EASN,CAACP,WAAD,CATM,CAAT;AAWA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAIE,sBACE;AACE,IAAA,SAAS,EACPJ,WAAW,CAACc,QAAZ,GAAuB,uBAAvB,GAAiD,iBAFrD;AAAA,4BAKE;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA,6BACE;AACE,QAAA,SAAS,EACPd,WAAW,CAACc,QAAZ,GAAuB,mBAAvB,GAA6C,kBAFjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YALF,eAeE,QAAC,WAAD;AAAa,MAAA,SAAS,EAAEX,QAAQ,CAACE,OAAjC;AAA0C,MAAA,KAAK,EAAEF,QAAQ,CAACG;AAA1D;AAAA;AAAA;AAAA;AAAA,YAfF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAmBD,CA5DD;;GAAMR,I;UAEUD,U;;;KAFVC,I;AA8DN,eAAeA,IAAf","sourcesContent":["import React from \"react\";\r\nimport axios from \"axios\";\r\nimport Posts from \"./posts\";\r\nimport PostLoadingComponent from \"../actions/postLoading\";\r\nimport { useState, useEffect, useContext } from \"react\";\r\nimport apiURL from \"../../apiUrl\";\r\nimport DarkContext from \"./../../context/darkMode\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nconst Body = (props) => {\r\n  const darkContext = useContext(DarkContext);\r\n  let history = useHistory();\r\n\r\n  const PostLoading = PostLoadingComponent(Posts);\r\n  const [appState, setAppState] = useState({ loading: false, posts: null });\r\n\r\n  useEffect(() => {\r\n    props.toggleShowSearchBar(true);\r\n\r\n    setAppState({ loading: true });\r\n    axios\r\n      .get(apiURL)\r\n      .then((res) => setAppState({ loading: false, posts: res.data }));\r\n\r\n    axios.get(apiURL + \"search/?search=s\").then((res) => console.log(res.data));\r\n  }, [setAppState]);\r\n\r\n  /*const handleChange = (e) => {\r\n    e.preventDefault();\r\n    setSearchValue({ search: e.target.value });\r\n    console.log(searchValue.search);\r\n  };\r\n\r\n  const goSearch = (e) => {\r\n    history.push({\r\n      pathname: \"/search/\",\r\n      search: \"?search= \" + searchValue.search,\r\n    });\r\n    window.location.reload();\r\n  };\r\n\r\n\r\n   <SearchBar\r\n     handleChange={handleChange}\r\n     placeholder=\"search by title\"\r\n     searchQuery={searchValue.search}\r\n     setAppState={setAppState}\r\n     onRequestSearch={() => goSearch(searchValue.search)}\r\n   />; */\r\n\r\n  return (\r\n    <main\r\n      className={\r\n        darkContext.darkMode ? \"bg-dark rm-box-shadow\" : \"bg-light border\"\r\n      }\r\n    >\r\n      <div className=\"post-tags\">\r\n        <span\r\n          className={\r\n            darkContext.darkMode ? \"badge badge-light\" : \"badge badge-dark\"\r\n          }\r\n        >\r\n          latest\r\n        </span>\r\n      </div>\r\n\r\n      <PostLoading isLoading={appState.loading} posts={appState.posts} />\r\n    </main>\r\n  );\r\n};\r\n\r\nexport default Body;\r\n"]},"metadata":{},"sourceType":"module"}