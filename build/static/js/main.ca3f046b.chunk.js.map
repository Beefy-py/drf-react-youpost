{"version":3,"sources":["context/userContext.js","context/darkMode.js","components/content/header.jsx","components/content/footer.jsx","baseAxios.js","components/content/singularPost.jsx","components/actions/scrollToTopBtn.jsx","components/content/posts.jsx","components/actions/postLoading.jsx","components/content/body.jsx","components/common/input.jsx","components/common/select.jsx","components/common/textArea.jsx","components/common/imageField.jsx","components/common/form.jsx","apiUrl.js","components/actions/registerForm.jsx","components/actions/loginForm.jsx","components/actions/logout.jsx","components/content/searchPage.jsx","components/actions/createPost.jsx","components/actions/searchBar.jsx","utils/extendedJoi.js","components/actions/commentsHeader.jsx","components/content/postDetail.jsx","components/content/postDetailWrapper.jsx","components/content/notFoundPage.jsx","history.js","components/actions/updatePost.jsx","components/actions/deletePost.jsx","components/content/userPosts.jsx","components/content/userPostsWrapper.jsx","components/content/userInfo.jsx","components/content/dashboard.jsx","components/admin/adminPage.jsx","App.js","reportWebVitals.js","index.js"],"names":["UserContext","createContext","displayName","DarkContext","React","Header","useContext","darkContext","refreshToken","localStorage","getItem","authorized","dropDownItemStyling","darkMode","className","to","type","data-bs-toggle","data-bs-target","aria-controls","aria-expanded","aria-label","id","role","aria-labelledby","Fragment","onClick","toggleDarkMode","Footer","href","axios","defaults","xsrfCookieName","xsrfHeaderName","baseURL","axiosInstance","create","timeout","headers","Authorization","accept","interceptors","response","use","a","error","originalRequest","config","alert","Promise","reject","status","url","window","location","data","code","statusText","reload","tokenParts","JSON","parse","atob","split","now","Math","ceil","Date","exp","post","refresh","then","setItem","access","console","log","SingularPost","state","rating","users","currentUserId","user_id","currentUser","likeClass","dislikeClass","bookmarkClass","bookmarkDataTip","addBookmark","bookmarked","includes","splice","indexOf","setState","push","put","replace","getRatingColor","rate","prefix","get","res","this","props","slug","liked","disliked","value","restPost","title","content","author","published","likedPosts","dislikedPosts","username","dislike","image","postDate","day","dataType","getRatingSuffix","filter","user","context","src","alt","Consumer","userContext","getAuthor","length","substring","data-tip","toString","data-type","changeRating","style","fontSize","Component","contextType","ScrollToTopBtn","useState","showScrollBtn","setshowScrollBtn","onscroll","showOn","document","body","scrollTop","documentElement","data-place","scrollTo","App","offset","perPage","currentPage","renderTags","tagList","map","tag","getPostsByTag","styling","name","reactToPost","postId","vote","num","toFixed","handlePageClick","e","selectedPage","selected","receivedData","posts","postData","slice","Intl","DateTimeFormat","month","year","format","toLocaleString","weekday","pageCount","pageLinkClassName","curSorted","previousLabel","nextLabel","breakLabel","breakClassName","marginPagesDisplayed","pageRangeDisplayed","onPageChange","containerClassName","pageClassName","previousClassName","nextClassName","activeClassName","PostLoading","numRows","rows","isLoading","display","width","margin","height","Body","toggleShowSearchBar","useHistory","PostLoadingComponent","Posts","currentlySortedBy","setCurrentlySortedBy","loading","appState","setAppState","useEffect","getPosts","allPosts","filtered","sort","p1","p2","Input","label","onChange","htmlFor","placeholder","Select","options","rest","option","_id","TextArea","ImageField","Form","errors","chosenImg","validate","Joi","schema","abortEarly","details","item","path","message","validateProperty","files","obj","handleSubmit","preventDefault","afterSubmit","handleChange","input","currentTarget","errorMessage","afterChange","disabled","apiURL","RegisterForm","email","password","string","required","min","repeatPassword","ref","first_name","firstname","last_name","lastname","catch","errorUsername","errors400","action","onSubmit","renderInput","renderButton","LoginForm","onLogIn","history","errorText","detail","errors401","Logout","performLogout","removeItem","SearchPage","setPosts","search","dateStyle","class","CreatePost","slugs","joi","max","formData","FormData","append","errorTitle","BaseJoi","require","ImageExtension","extend","inp","renderImageField","renderTextArea","SearchBar","searchValue","searchResults","target","goSearch","pathname","withRouter","CommentsHeader","showCommentForm","comment","toggleForm","addComment","text","PostDetail","postAuthorId","comments","renderUpDel","is_superuser","newComments","unshift","whiteSpace","comId","boxShadow","posted","timeStyle","PostDetailWrapper","match","postIsLoading","params","NotFoundPage","createBrowserHistory","UpdatePost","any","meta","swaggerType","optional","description","goBack","DeletePost","performDelete","delete","renderYesBtn","UserPosts","getUserPosts","UserPostsWrapper","UserInfo","bio","pageBio","bioChangeActive","editBio","darkCnxt","date_joined","Dashboard","dataClasses","data1","data2","data3","renderPostById","getPostSlug","toggleAccordion","cl","newClasses","renderChevron","dcl","currentUserPosts","topPost","i","userPosts","AdminPage","showSearchBar","handleLoggedIn","getAuthorById","pk","find","makePageDark","boolInp","querySelector","getHours","Provider","background","component","render","exact","IsAuthenticatedRoute","from","PrivateAdminRoute","accessToken","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.ca3f046b.chunk.js","sourcesContent":["import { createContext } from \"react\";\r\n\r\nconst UserContext = createContext();\r\nUserContext.displayName = \"UserContext\";\r\n\r\nexport default UserContext;\r\n","import React from \"react\";\r\n\r\nconst DarkContext = React.createContext();\r\nDarkContext.displayName = \"darkContext\";\r\n\r\nexport default DarkContext;\r\n","import React from \"react\";\r\nimport { useContext } from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport UserContext from \"../../context/userContext\";\r\nimport DarkContext from \"./../../context/darkMode\";\r\n\r\nconst Header = () => {\r\n  const userContext = useContext(UserContext);\r\n  const darkContext = useContext(DarkContext);\r\n\r\n  const refreshToken = localStorage.getItem(\"refresh_token\");\r\n  const accessToken = localStorage.getItem(\"access_token\");\r\n\r\n  const authorized =\r\n    refreshToken === \"undefined\" || refreshToken === null ? false : true;\r\n\r\n  const dropDownItemStyling = darkContext.darkMode\r\n    ? \"dropdown-item bg-dark text-light\"\r\n    : \"dropdown-item bg-light\";\r\n\r\n  return (\r\n    <nav\r\n      className={\r\n        darkContext.darkMode\r\n          ? \"navbar-dark bg-dark navbar navbar-expand-lg dark-page-shadow\"\r\n          : \"navbar-light bg-light navbar navbar-expand-lg border\"\r\n      }\r\n    >\r\n      <div className=\"container-fluid\">\r\n        <NavLink className=\"navbar-brand text-success\" to=\"/\">\r\n          <b>YouPost</b>\r\n        </NavLink>\r\n        <button\r\n          className=\"navbar-toggler\"\r\n          type=\"button\"\r\n          data-bs-toggle=\"collapse\"\r\n          data-bs-target=\"#navbarSupportedContent\"\r\n          aria-controls=\"navbarSupportedContent\"\r\n          aria-expanded=\"false\"\r\n          aria-label=\"Toggle navigation\"\r\n        >\r\n          <span className=\"navbar-toggler-icon\"></span>\r\n        </button>\r\n        <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n          <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n            <li className=\"nav-item\">\r\n              <NavLink className=\"nav-link active\" to=\"/dashboard\">\r\n                Dashboard\r\n              </NavLink>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n              <NavLink className=\"nav-link active\" to=\"/\">\r\n                Posts\r\n              </NavLink>\r\n            </li>\r\n            {/* <li className=\"nav-item\">\r\n              <NavLink className=\"nav-link active\" to=\"/create-post\">\r\n                CreatePost\r\n              </NavLink>\r\n            </li> */}\r\n            <li className=\"nav-item dropdown\">\r\n              <NavLink\r\n                className=\"nav-link dropdown-toggle\"\r\n                to=\"/\"\r\n                id=\"navbarDropdown\"\r\n                role=\"button\"\r\n                data-bs-toggle=\"dropdown\"\r\n                aria-expanded=\"false\"\r\n              >\r\n                <i className=\"fas fa-user-circle\"></i>\r\n                {authorized ? localStorage.getItem(\"currentUser\") : \"Guest\"}\r\n                {/*<i className=\"fas fa-crown\"></i>*/}\r\n              </NavLink>\r\n              <ul\r\n                className={\r\n                  darkContext.darkMode\r\n                    ? \"dropdown-menu bg-dark border\"\r\n                    : \"dropdown-menu bg-light\"\r\n                }\r\n                aria-labelledby=\"navbarDropdown\"\r\n              >\r\n                {authorized ? (\r\n                  <li>\r\n                    <NavLink className={dropDownItemStyling} to=\"/logout\">\r\n                      <i className=\"fas fa-sign-out-alt\"></i> Logout\r\n                    </NavLink>\r\n                  </li>\r\n                ) : (\r\n                  <React.Fragment>\r\n                    <li>\r\n                      <NavLink className={dropDownItemStyling} to=\"/login\">\r\n                        <i className=\"fas fa-sign-in-alt\"></i> Login\r\n                      </NavLink>\r\n                    </li>\r\n                    <li>\r\n                      <NavLink className={dropDownItemStyling} to=\"/register\">\r\n                        <i className=\"fas fa-user-plus\"></i> Register\r\n                      </NavLink>\r\n                    </li>\r\n                  </React.Fragment>\r\n                )}\r\n                <li>\r\n                  <hr className=\"dropdown-divider\"></hr>\r\n                </li>\r\n                <li>\r\n                  <NavLink className={dropDownItemStyling} to=\"/\">\r\n                    <i className=\"fas fa-user-cog\"></i> Settings\r\n                  </NavLink>\r\n                </li>\r\n                <li\r\n                  className={dropDownItemStyling + \" dark-mode-toggler\"}\r\n                  onClick={darkContext.toggleDarkMode}\r\n                >\r\n                  {darkContext.darkMode ? (\r\n                    <React.Fragment>\r\n                      <i className=\"fas fa-sun\"></i>\r\n                      <span>Light</span>\r\n                    </React.Fragment>\r\n                  ) : (\r\n                    <React.Fragment>\r\n                      <i className=\"fas fa-moon\"></i>\r\n                      <span>Dark</span>\r\n                    </React.Fragment>\r\n                  )}\r\n                </li>\r\n              </ul>\r\n            </li>\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import React, { useContext } from \"react\";\r\nimport DarkContext from \"./../../context/darkMode\";\r\n\r\nconst Footer = () => {\r\n  const darkContext = useContext(DarkContext);\r\n  return (\r\n    <footer\r\n      className={\r\n        darkContext.darkMode\r\n          ? \"text-center text-lg-start bg-dark text-muted dark-page-shadow footer-dark\"\r\n          : \"text-center text-lg-start bg-light text-muted\"\r\n      }\r\n    >\r\n      <section className=\"d-flex justify-content-center justify-content-lg-between p-4 border-bottom\">\r\n        <div className=\"me-5 d-none d-lg-block\">\r\n          <span>Get connected with us on social networks:</span>\r\n        </div>\r\n        <div>\r\n          <a href=\"#\" className=\"me-4 text-reset\">\r\n            <i className=\"fab fa-facebook-f\"></i>\r\n          </a>\r\n          <a href=\"#\" className=\"me-4 text-reset\">\r\n            <i className=\"fab fa-twitter\"></i>\r\n          </a>\r\n          <a href=\"#\" className=\"me-4 text-reset\">\r\n            <i className=\"fab fa-google\"></i>\r\n          </a>\r\n          <a href=\"#\" className=\"me-4 text-reset\">\r\n            <i className=\"fab fa-instagram\"></i>\r\n          </a>\r\n          <a href=\"#\" className=\"me-4 text-reset\">\r\n            <i className=\"fab fa-linkedin\"></i>\r\n          </a>\r\n          <a href=\"#\" className=\"me-4 text-reset\">\r\n            <i className=\"fab fa-github\"></i>\r\n          </a>\r\n        </div>\r\n      </section>\r\n\r\n      <section className=\"\">\r\n        <div className=\"container text-center text-md-start mt-5\">\r\n          <div className=\"row mt-3\">\r\n            <div className=\"col-md-3 col-lg-4 col-xl-3 mx-auto mb-4\">\r\n              <h6 className=\"text-uppercase fw-bold mb-4\">\r\n                <i className=\"fas fa-gem me-3\"></i>Company name\r\n              </h6>\r\n              <p>\r\n                Here you can use rows and columns to organize your footer\r\n                content. Lorem ipsum dolor sit amet, consectetur adipisicing\r\n                elit.\r\n              </p>\r\n            </div>\r\n\r\n            <div className=\"col-md-2 col-lg-2 col-xl-2 mx-auto mb-4\">\r\n              <h6 className=\"text-uppercase fw-bold mb-4\">Products</h6>\r\n              <p>\r\n                <a href=\"#\" className=\"text-reset\">\r\n                  Angular\r\n                </a>\r\n              </p>\r\n              <p>\r\n                <a href=\"#\" className=\"text-reset\">\r\n                  React\r\n                </a>\r\n              </p>\r\n              <p>\r\n                <a href=\"#\" className=\"text-reset\">\r\n                  Vue\r\n                </a>\r\n              </p>\r\n              <p>\r\n                <a href=\"#\" className=\"text-reset\">\r\n                  Laravel\r\n                </a>\r\n              </p>\r\n            </div>\r\n\r\n            <div className=\"col-md-3 col-lg-2 col-xl-2 mx-auto mb-4\">\r\n              <h6 className=\"text-uppercase fw-bold mb-4\">Useful links</h6>\r\n              <p>\r\n                <a href=\"#\" className=\"text-reset\">\r\n                  Pricing\r\n                </a>\r\n              </p>\r\n              <p>\r\n                <a href=\"#\" className=\"text-reset\">\r\n                  Settings\r\n                </a>\r\n              </p>\r\n              <p>\r\n                <a href=\"#\" className=\"text-reset\">\r\n                  Orders\r\n                </a>\r\n              </p>\r\n              <p>\r\n                <a href=\"#\" className=\"text-reset\">\r\n                  Help\r\n                </a>\r\n              </p>\r\n            </div>\r\n\r\n            <div className=\"col-md-4 col-lg-3 col-xl-3 mx-auto mb-md-0 mb-4\">\r\n              <h6 className=\"text-uppercase fw-bold mb-4\">Contact</h6>\r\n              <p>\r\n                <i className=\"fas fa-home me-3\"></i> New York, NY 10012, US\r\n              </p>\r\n              <p>\r\n                <i className=\"fas fa-envelope me-3\"></i>\r\n                info@example.com\r\n              </p>\r\n              <p>\r\n                <i className=\"fas fa-phone me-3\"></i> + 01 234 567 88\r\n              </p>\r\n              <p>\r\n                <i className=\"fas fa-print me-3\"></i> + 01 234 567 89\r\n              </p>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </section>\r\n\r\n      <div className=\"text-center p-4\">\r\n        © 2021 Copyright:\r\n        <a className=\"text-reset fw-bold\" href=\"https://mdbootstrap.com/\">\r\n          MDBootstrap.com\r\n        </a>\r\n      </div>\r\n    </footer>\r\n  );\r\n};\r\n\r\nexport default Footer;\r\n","import axios from \"axios\";\r\n\r\naxios.defaults.xsrfCookieName = 'csrftoken';\r\naxios.defaults.xsrfHeaderName = 'X-CSRFToken';\r\n\r\nconst baseURL = \"http://localhost:8000/api/\";\r\n\r\nconst axiosInstance = axios.create({\r\n  baseURL: baseURL,\r\n  timeout: 5000,\r\n  headers: {\r\n    Authorization: localStorage.getItem(\"access_token\")\r\n      ? \"JWT \" + localStorage.getItem(\"access_token\")\r\n      : null,\r\n    \"Content-Type\": \"application/json\",\r\n    accept: \"application/json\",\r\n  },\r\n});\r\n\r\naxiosInstance.interceptors.response.use(\r\n  (response) => {\r\n    return response;\r\n  },\r\n  async function (error) {\r\n    const originalRequest = error.config;\r\n\r\n    if (typeof error.response === \"undefined\") {\r\n      alert(\r\n        \"A server/network error occurred. \" +\r\n          \"Looks like CORS might be the problem. \" +\r\n          \"Sorry about this - we will get it fixed shortly.\"\r\n      );\r\n      return Promise.reject(error);\r\n    }\r\n\r\n    if (\r\n      error.response.status === 401 &&\r\n      originalRequest.url === baseURL + \"token/refresh/\"\r\n    ) {\r\n      window.location.href = \"/login/\";\r\n      return Promise.reject(error);\r\n    }\r\n\r\n    if (\r\n      error.response.data.code === \"token_not_valid\" &&\r\n      error.response.status === 401 &&\r\n      error.response.statusText === \"Unauthorized\"\r\n    ) {\r\n      const refreshToken = localStorage.getItem(\"refresh_token\");\r\n\r\n      if (refreshToken !== \"undefined\") {\r\n        if (refreshToken === null) window.location.reload();\r\n        const tokenParts = JSON.parse(atob(refreshToken.split(\".\")[1]));\r\n        // exp date in token is expressed in seconds, while now() returns milliseconds:\r\n        const now = Math.ceil(Date.now() / 1000);\r\n        // console.log(tokenParts.exp);\r\n        // console.log(tokenParts);\r\n\r\n        if (tokenParts.exp > now) {\r\n          return axiosInstance\r\n            .post(\"/token/refresh\", { refresh: refreshToken })\r\n            .then((response) => {\r\n              //console.log(response.data);\r\n\r\n              localStorage.setItem(\"access_token\", response.data.access);\r\n              localStorage.setItem(\"refresh_token\", response.data.refresh);\r\n\r\n              axiosInstance.defaults.headers[\"Authorization\"] =\r\n                \"JWT \" + response.data.access;\r\n              originalRequest.headers[\"Authorization\"] =\r\n                \"JWT \" + response.data.access;\r\n\r\n              //console.log(\"create new token\");\r\n\r\n              return axiosInstance(originalRequest);\r\n            });\r\n        } else {\r\n          console.log(\"Refresh token is expired\", tokenParts.exp, now);\r\n          window.location.href = \"/login/\";\r\n        }\r\n      } else {\r\n        window.location.href = \"/login/\";\r\n        console.log(\"Refresh token not available.\");\r\n      }\r\n    }\r\n\r\n    // specific error handling done elsewhere\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\nexport default axiosInstance;\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport UserContext from \"./../../context/userContext\";\r\nimport ReactTooltip from \"react-tooltip\";\r\nimport axiosInstance from \"./../../baseAxios\";\r\nimport DarkContext from \"./../../context/darkMode\";\r\n\r\nexport default class SingularPost extends Component {\r\n  state = {\r\n    rating: 0,\r\n    users: [],\r\n    currentUserId: JSON.parse(\r\n      atob(localStorage.getItem(\"access_token\").split(\".\")[1])\r\n    ).user_id,\r\n    currentUser: {},\r\n    likeClass: \"btn btn-outline-dark\",\r\n    dislikeClass: \"btn btn-outline-dark\",\r\n    bookmarkClass: \"btn btn-outline-dark\",\r\n    bookmarkDataTip: \"add to bookmarks\",\r\n  };\r\n\r\n  static contextType = DarkContext;\r\n\r\n  componentDidMount() {\r\n    axiosInstance.get(\"user/list/\").then((res) => {\r\n      this.setState({ users: res.data });\r\n    });\r\n\r\n    axiosInstance\r\n      .get(\"posts/\" + this.props.post.slug)\r\n      .then((res) => this.setState({ rating: res.data.rating }));\r\n\r\n    axiosInstance.get(\"user/list/\" + this.state.currentUserId).then((res) => {\r\n      this.setState({ currentUser: res.data });\r\n\r\n      const { post } = this.props;\r\n\r\n      if (res.data.liked.includes(post.id)) {\r\n        this.setState({ likeClass: \"btn btn-success disabled\" });\r\n        this.setState({ dislikeClass: \"btn btn-outline-dark disabled\" });\r\n      }\r\n\r\n      if (res.data.disliked.includes(post.id)) {\r\n        // console.log(`${res.data.username} has already disliked  ${post.title}`);\r\n        this.setState({ dislikeClass: \"btn btn-danger disabled\" });\r\n        this.setState({ likeClass: \"btn btn-outline-dark disabled\" });\r\n      }\r\n\r\n      if (res.data.bookmarked.includes(post.id)) {\r\n        this.setState({ bookmarkClass: \"btn btn-info\" });\r\n        this.setState({ bookmarkDataTip: \"remove from bookmarks\" });\r\n      }\r\n    });\r\n  }\r\n\r\n  changeRating(post, value) {\r\n    const { rating, currentUser, currentUserId } = this.state;\r\n\r\n    const restPost = {\r\n      title: post.title,\r\n      slug: post.slug,\r\n      content: post.content,\r\n      author: post.author,\r\n      published: post.published,\r\n    };\r\n\r\n    let likedPosts = currentUser.liked;\r\n    let dislikedPosts = currentUser.disliked;\r\n\r\n    if (value === 1) {\r\n      likedPosts.push(post.id);\r\n      console.log(\r\n        currentUser.username + \" liked \" + post.title + \" with id \" + post.id\r\n      );\r\n    } else {\r\n      dislikedPosts.push(post.id);\r\n      console.log(\r\n        currentUser.username + \" disliked \" + post.title + \" with id \" + post.id\r\n      );\r\n    }\r\n\r\n    currentUser.liked = likedPosts;\r\n    currentUser.dislike = dislikedPosts;\r\n\r\n    if (currentUser.liked.includes(post.id)) {\r\n      this.setState({ likeClass: \"btn btn-success disabled\" });\r\n      this.setState({ dislikeClass: \"btn btn-outline-dark disabled\" });\r\n    }\r\n\r\n    if (currentUser.disliked.includes(post.id)) {\r\n      this.setState({ dislikeClass: \"btn btn-danger disabled\" });\r\n      this.setState({ likeClass: \"btn btn-outline-dark disabled\" });\r\n    }\r\n\r\n    axiosInstance.put(\"user/list/\" + currentUserId, currentUser);\r\n\r\n    this.setState({ rating: rating + value });\r\n\r\n    axiosInstance.put(\"update-post/\" + post.slug, {\r\n      ...restPost,\r\n      rating: rating + value,\r\n    });\r\n\r\n    window.location.replace(\"posts/\" + post.slug);\r\n  }\r\n\r\n  addBookmark = (post) => {\r\n    const { currentUser, currentUserId } = this.state;\r\n    let bookmarked;\r\n    bookmarked = currentUser.bookmarked;\r\n    console.log(\"\\n before\", currentUser.bookmarked);\r\n\r\n    if (currentUser.bookmarked.includes(post.id)) {\r\n      bookmarked.splice(bookmarked.indexOf(post.id), 1);\r\n      this.setState({ bookmarkClass: \"btn btn-outline-dark\" });\r\n      this.setState({ bookmarkDataTip: \"add to bookmarks\" });\r\n    } else {\r\n      bookmarked.push(post.id);\r\n      this.setState({ bookmarkClass: \"btn btn-info\" });\r\n      this.setState({ bookmarkDataTip: \"remove from bookmarks\" });\r\n    }\r\n\r\n    currentUser.bookmarked = bookmarked;\r\n    console.log(\"\\n after\", currentUser.bookmarked);\r\n\r\n    axiosInstance.put(\"user/list/\" + currentUserId, {\r\n      ...currentUser,\r\n      bookmarked: bookmarked,\r\n    });\r\n\r\n    window.location.replace(\"/dashboard\");\r\n  };\r\n\r\n  getRatingColor = (rate) => {\r\n    const prefix = \"rate badge \";\r\n\r\n    if (rate > 999999999) return prefix + \"rate1b\";\r\n    if (rate > 999999) return prefix + \"rate1m\";\r\n    if (rate > 99999) return prefix + \"rate100k\";\r\n    if (rate > 999) return prefix + \"rate1k\";\r\n    if (rate > 0) return prefix + \"before1k\";\r\n    if (rate === 0) return prefix + \"rate0\";\r\n    if (rate < -999999999) return prefix + \"rate-1b\";\r\n    if (rate < -999999) return prefix + \"rate-1m\";\r\n    if (rate < -99999) return prefix + \"rate-100k\";\r\n    if (rate < -999) return prefix + \"rate-1k\";\r\n    if (rate < 0) return prefix + \"before-1k\";\r\n\r\n    return prefix + \"badge-primary\";\r\n  };\r\n  render() {\r\n    const {\r\n      title,\r\n      content,\r\n      slug,\r\n      author,\r\n      image,\r\n      postDate,\r\n      day,\r\n      dataType,\r\n      post,\r\n\r\n      getRatingSuffix,\r\n    } = this.props;\r\n\r\n    const { likeClass, dislikeClass, bookmarkClass, bookmarkDataTip } =\r\n      this.state;\r\n\r\n    const rating = this.state.rating;\r\n    const currentUser = this.state.users.filter(\r\n      (user) => user.username == localStorage.getItem(\"currentUser\")\r\n    )[0];\r\n\r\n    return (\r\n      <div\r\n        key={post.id}\r\n        className={\r\n          this.context.darkMode\r\n            ? \"blog-post text-light border bg-dark\"\r\n            : \"blog-post border\"\r\n        }\r\n      >\r\n        <ReactTooltip />\r\n        <div className=\"blog-post-img border\">\r\n          <img src={image} alt={\"Image for: \" + title} />\r\n        </div>\r\n        <div className=\"blog-post-info\">\r\n          <div className=\"blog-post-date\">\r\n            <span>{day}</span>\r\n            <span>{postDate}</span>\r\n          </div>\r\n          <div className=\"blog-post-author\">\r\n            <UserContext.Consumer>\r\n              {(userContext) => {\r\n                return (\r\n                  <React.Fragment>\r\n                    by <span>{userContext.getAuthor(author)}</span>\r\n                  </React.Fragment>\r\n                );\r\n              }}\r\n            </UserContext.Consumer>\r\n          </div>\r\n\r\n          <h1 className=\"blog-post-title\">{title}</h1>\r\n          <p className=\"blog-post-text\">\r\n            {content.length >= 500\r\n              ? content.substring(0, 500) + \"...\"\r\n              : content}\r\n          </p>\r\n          <Link to={\"posts/\" + slug} className=\"blog-post-cta\">\r\n            Read More\r\n          </Link>\r\n        </div>\r\n        <div className=\"blog-post-options\">\r\n          <div className={this.getRatingColor(rating)}>\r\n            <span\r\n              data-tip={\r\n                \"rating: \" +\r\n                rating.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")\r\n              }\r\n              data-type={dataType}\r\n            >\r\n              {getRatingSuffix(rating)}\r\n            </span>\r\n          </div>\r\n          {currentUser ? (\r\n            <React.Fragment>\r\n              {author === currentUser.id ? (\r\n                <i className=\"fas fa-info-circle\"></i>\r\n              ) : (\r\n                <React.Fragment>\r\n                  <ReactTooltip />\r\n                  <div className=\"react\">\r\n                    <div className=\"upvote\">\r\n                      <button\r\n                        className={likeClass}\r\n                        data-tip=\"like\"\r\n                        data-type={dataType}\r\n                        onClick={() => this.changeRating(post, 1)}\r\n                      >\r\n                        <i className=\"far fa-thumbs-up\"></i>\r\n                      </button>\r\n                    </div>\r\n                    <div className=\"downvote\">\r\n                      <button\r\n                        className={dislikeClass}\r\n                        data-tip=\"dislike\"\r\n                        data-type={dataType}\r\n                        onClick={() => this.changeRating(post, -1)}\r\n                      >\r\n                        <i className=\"far fa-thumbs-down\"></i>\r\n                      </button>\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"other-react\">\r\n                    <div className=\"bookmark\">\r\n                      <button\r\n                        className={bookmarkClass}\r\n                        data-tip={bookmarkDataTip}\r\n                        data-type={dataType}\r\n                        onClick={() => this.addBookmark(post)}\r\n                      >\r\n                        <i className=\"far fa-bookmark\"></i>\r\n                        {/* <i className=\"fas fa-bookmark\"></i> */}\r\n                      </button>\r\n                    </div>\r\n                    <div\r\n                      className=\"comment\"\r\n                      data-tip=\"comment on this post\"\r\n                      data-type={dataType}\r\n                    >\r\n                      <button className=\"btn btn-dark\">\r\n                        <i\r\n                          style={{ fontSize: \".8rem\" }}\r\n                          className=\"far fa-comment-alt\"\r\n                        ></i>\r\n                      </button>\r\n                    </div>\r\n                  </div>\r\n                </React.Fragment>\r\n              )}\r\n            </React.Fragment>\r\n          ) : (\r\n            \"\"\r\n          )}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { useState, useContext } from \"react\";\r\nimport ReactTooltip from \"react-tooltip\";\r\nimport DarkContext from \"./../../context/darkMode\";\r\n\r\nconst ScrollToTopBtn = (props) => {\r\n  const [showScrollBtn, setshowScrollBtn] = useState(false);\r\n  const darkContext = useContext(DarkContext);\r\n\r\n  window.onscroll = () => {\r\n    // console.log(document.documentElement.scrollTop);\r\n\r\n    const { showOn } = props;\r\n\r\n    if (\r\n      document.body.scrollTop > showOn ||\r\n      document.documentElement.scrollTop > showOn\r\n    ) {\r\n      setshowScrollBtn(true);\r\n    } else if (\r\n      document.body.scrollTop < showOn ||\r\n      document.documentElement.scrollTop < showOn\r\n    ) {\r\n      setshowScrollBtn(false);\r\n    }\r\n  };\r\n\r\n  const dataType = darkContext.darkMode ? \"light\" : \"dark\";\r\n\r\n  if (showScrollBtn) {\r\n    return (\r\n      <div className=\"scroll-to-top\">\r\n        <ReactTooltip />\r\n        <button\r\n          data-tip=\"Scroll To Top\"\r\n          data-type={dataType}\r\n          data-place=\"left\"\r\n          className=\"btn btn-success\"\r\n          onClick={() => window.scrollTo(0, 0)}\r\n        >\r\n          <i className=\"fas fa-arrow-up\"></i>\r\n        </button>\r\n      </div>\r\n    );\r\n  }\r\n  return \"\";\r\n};\r\n\r\nexport default ScrollToTopBtn;\r\n","import React, { Component } from \"react\";\r\nimport DarkContext from \"./../../context/darkMode\";\r\nimport ReactPaginate from \"react-paginate\";\r\nimport SingularPost from \"./singularPost\";\r\nimport ScrollToTopBtn from \"../actions/scrollToTopBtn\";\r\n\r\nexport default class App extends Component {\r\n  state = { offset: 0, data: [], perPage: 6, currentPage: 0 };\r\n  static contextType = DarkContext;\r\n\r\n  componentDidMount() {\r\n    if (this.props.posts) {\r\n      this.receivedData();\r\n    }\r\n  }\r\n\r\n  renderTags = (tagList) => {\r\n    return tagList.map((tag) => (\r\n      <button\r\n        key={tag.id}\r\n        onClick={() => this.props.getPostsByTag(tag.id)}\r\n        className={\"badge \" + tag.styling}\r\n      >\r\n        {tag.name}\r\n      </button>\r\n    ));\r\n  };\r\n\r\n  reactToPost = (postId, vote) => {\r\n    console.log(\"reacted to \" + postId + \" with \" + vote);\r\n  };\r\n\r\n  getRatingSuffix = (rating) => {\r\n    if (rating > 999000000) {\r\n      const num = (rating / 1000000000).toFixed(1);\r\n      return `${num}B`;\r\n    }\r\n    if (rating > 999999) {\r\n      const num = (rating / 1000000).toFixed(1);\r\n      return `${num}M`;\r\n    }\r\n    if (rating > 999) {\r\n      const num = (rating / 1000).toFixed(1);\r\n      return `${num}K`;\r\n    }\r\n\r\n    if (rating < -999999999) {\r\n      const num = (rating / 1000000000).toFixed(1);\r\n      return `${num}B`;\r\n    }\r\n    if (rating < -999999) {\r\n      const num = (rating / 1000000).toFixed(1);\r\n      return `${num}M`;\r\n    }\r\n\r\n    if (rating < -999) {\r\n      const num = (rating / 1000).toFixed(1);\r\n      return `${num}K`;\r\n    }\r\n\r\n    return rating.toString();\r\n  };\r\n\r\n  receivedData() {\r\n    const data = this.props.posts;\r\n    const slice = data.slice(\r\n      this.state.offset,\r\n      this.state.offset + this.state.perPage\r\n    );\r\n    const postData = slice.map((post) => {\r\n      const { title, content, slug, author, image, rating } = post;\r\n      const postDate = new Intl.DateTimeFormat(\"en-GB\", {\r\n        month: \"long\",\r\n        year: \"numeric\",\r\n        day: \"numeric\",\r\n      }).format(new Date(post.published));\r\n\r\n      const day = new Date(postDate).toLocaleString(\"en-us\", {\r\n        weekday: \"long\",\r\n      });\r\n\r\n      console.log(image);\r\n\r\n      const dataType = this.context.darkMode ? \"light\" : \"dark\";\r\n\r\n      return (\r\n        <React.Fragment key={post.id}>\r\n          <SingularPost\r\n            title={title}\r\n            content={content}\r\n            slug={slug}\r\n            author={author}\r\n            image={image}\r\n            rating={rating}\r\n            postDate={postDate}\r\n            day={day}\r\n            dataType={dataType}\r\n            post={post}\r\n            getRatingSuffix={this.getRatingSuffix}\r\n            dataType={dataType}\r\n          />\r\n        </React.Fragment>\r\n      );\r\n    });\r\n\r\n    this.setState({\r\n      pageCount: Math.ceil(data.length / this.state.perPage),\r\n\r\n      postData,\r\n    });\r\n  }\r\n\r\n  handlePageClick = (e) => {\r\n    const selectedPage = e.selected;\r\n    const offset = selectedPage * this.state.perPage;\r\n\r\n    this.setState({ currentPage: selectedPage, offset: offset }, () =>\r\n      this.receivedData()\r\n    );\r\n\r\n    window.scrollTo(0, 0);\r\n  };\r\n\r\n  render() {\r\n    const { posts } = this.props;\r\n    const { renderTags, reactToPost } = this;\r\n\r\n    const pageLinkClassName = this.context.darkMode\r\n      ? \" bg-dark page-link text-light\"\r\n      : \"page-link\";\r\n\r\n    return (\r\n      <DarkContext.Consumer>\r\n        {(darkContext) => (\r\n          <React.Fragment>\r\n            <main\r\n              className={\r\n                darkContext.darkMode\r\n                  ? \"bg-dark dark-page-shadow \"\r\n                  : \"bg-light border\"\r\n              }\r\n            >\r\n              <div className=\"post-tags\">\r\n                {renderTags([\r\n                  { name: \"latest\", styling: \"btn-primary\", id: \"Lat\" },\r\n                  { name: \"most popular\", styling: \"btn-success\", id: \"MPo\" },\r\n                  { name: \"least popular\", styling: \"btn-danger\", id: \"LPo\" },\r\n                  { name: \"oldest\", styling: \"btn-warning\", id: \"Old\" },\r\n                ])}\r\n              </div>\r\n\r\n              <p\r\n                className={\r\n                  darkContext.darkMode ? \"sorted-by text-light\" : \"sorted-by\"\r\n                }\r\n              >\r\n                Sorted By:{\" \"}\r\n                <span>\r\n                  <i className=\"fas fa-filter\"></i> {this.props.curSorted}\r\n                </span>\r\n              </p>\r\n\r\n              <section\r\n                className={\r\n                  darkContext.darkMode\r\n                    ? \"posts-section-dark posts-section\"\r\n                    : \"posts-section\"\r\n                }\r\n              >\r\n                {this.state.postData}\r\n              </section>\r\n            </main>{\" \"}\r\n            <ReactPaginate\r\n              previousLabel={\"previous\"}\r\n              nextLabel={\"next\"}\r\n              breakLabel={\"...\"}\r\n              breakClassName={\"break-me\"}\r\n              pageCount={this.state.pageCount}\r\n              marginPagesDisplayed={3}\r\n              pageRangeDisplayed={5}\r\n              onPageChange={this.handlePageClick}\r\n              containerClassName={\"pagination justify-content-center\"}\r\n              pageClassName={\"page-item\"}\r\n              pageLinkClassName={pageLinkClassName}\r\n              previousClassName={pageLinkClassName}\r\n              nextClassName={pageLinkClassName}\r\n              activeClassName={\"active\"}\r\n            />\r\n            <ScrollToTopBtn showOn={2500} />\r\n          </React.Fragment>\r\n        )}\r\n      </DarkContext.Consumer>\r\n    );\r\n  }\r\n}\r\n","import React, { useContext } from \"react\";\r\nimport Skeleton from \"@yisheng90/react-loading\";\r\nimport DarkContext from \"./../../context/darkMode\";\r\n\r\n/*<Spinner animation=\"grow\" variant=\"primary\" />*/\r\n\r\nconst PostLoading = (Component) => {\r\n  const darkContext = useContext(DarkContext);\r\n  const renderLoadingBars = (numRows) => {\r\n    return (\r\n      <div\r\n        style={{\r\n          display: \"block\",\r\n          width: \"90%\",\r\n          margin: \"0 auto 2rem\",\r\n        }}\r\n        className={darkContext.darkMode ? \"post-dark-loader\" : \"\"}\r\n      >\r\n        <Skeleton height={300} rows={numRows} />\r\n      </div>\r\n    );\r\n  };\r\n\r\n  return function PostLoadingComponent({ rows, isLoading, ...props }) {\r\n    if (!isLoading) {\r\n      return <Component {...props} />;\r\n    }\r\n\r\n    return <React.Fragment>{renderLoadingBars(rows)}</React.Fragment>;\r\n  };\r\n};\r\n\r\nexport default PostLoading;\r\n","import React from \"react\";\r\nimport Posts from \"./posts\";\r\nimport PostLoadingComponent from \"../actions/postLoading\";\r\nimport { useState, useEffect, useContext } from \"react\";\r\nimport DarkContext from \"./../../context/darkMode\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport axiosInstance from \"./../../baseAxios\";\r\nimport ReactPaginate from \"react-paginate\";\r\n\r\nconst Body = ({ toggleShowSearchBar }) => {\r\n  const darkContext = useContext(DarkContext);\r\n  let history = useHistory();\r\n\r\n  const PostLoading = PostLoadingComponent(Posts);\r\n  const [currentlySortedBy, setCurrentlySortedBy] = useState(\"latest\");\r\n  const [appState, setAppState] = useState({ loading: false, posts: null });\r\n\r\n  useEffect(() => {\r\n    toggleShowSearchBar(true);\r\n    getPosts();\r\n  }, [setAppState]);\r\n\r\n  const getPosts = () => {\r\n    setAppState({ loading: true });\r\n\r\n    axiosInstance\r\n      .get()\r\n      .then((res) => setAppState({ loading: false, posts: res.data }));\r\n  };\r\n\r\n  let allPosts = [];\r\n  axiosInstance.get().then((res) => (allPosts = res.data));\r\n\r\n  const getPostsByTag = (tag) => {\r\n    if (appState.posts) {\r\n      if (tag === \"Lat\") {\r\n        const filtered = allPosts.sort((p1, p2) => p2.id - p1.id);\r\n        setAppState({ posts: filtered });\r\n        setCurrentlySortedBy(\"latest\");\r\n      }\r\n\r\n      if (tag === \"Old\") {\r\n        const filtered = allPosts.sort((p1, p2) => p1.id - p2.id);\r\n        setAppState({ posts: filtered });\r\n        setCurrentlySortedBy(\"oldest\");\r\n      }\r\n\r\n      if (tag === \"MPo\") {\r\n        const filtered = allPosts.sort((p1, p2) => p2.rating - p1.rating);\r\n        setAppState({ posts: filtered });\r\n        setCurrentlySortedBy(\"most popular\");\r\n      }\r\n\r\n      if (tag === \"LPo\") {\r\n        const filtered = allPosts.sort((p1, p2) => p1.rating - p2.rating);\r\n        setAppState({ posts: filtered });\r\n        setCurrentlySortedBy(\"least popular\");\r\n      }\r\n\r\n      /*\r\n      const filteredPosts = appState.posts.filter(\r\n        (post) => post.category === tag\r\n      );\r\n\r\n      console.log(filteredPosts);\r\n\r\n      setAppState({ posts: filteredPosts });\r\n\r\n\r\n*/\r\n      return \"display posts by \" + tag;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <PostLoading\r\n      rows={3}\r\n      getPostsByTag={getPostsByTag}\r\n      isLoading={appState.loading}\r\n      posts={appState.posts}\r\n      curSorted={currentlySortedBy}\r\n    />\r\n  );\r\n};\r\n\r\nexport default Body;\r\n","import React from \"react\";\r\nimport DarkContext from \"../../context/darkMode\";\r\n\r\nconst Input = ({ name, label, value, type, error, onChange }) => {\r\n  return (\r\n    <DarkContext.Consumer>\r\n      {(darkContext) => (\r\n        <div className=\"form-group\">\r\n          <label\r\n            className={darkContext.darkMode ? \"text-light\" : \"\"}\r\n            htmlFor={name}\r\n          >\r\n            {label}\r\n          </label>\r\n          <input\r\n            className={\r\n              darkContext.darkMode\r\n                ? \"form-control me-2 bg-dark text-light\"\r\n                : \"form-control me-2\"\r\n            }\r\n            value={value}\r\n            onChange={onChange}\r\n            id={name}\r\n            type={type}\r\n            name={name}\r\n            placeholder={name}\r\n          />\r\n          {error && <div className=\"alert alert-danger\">{error}</div>}\r\n        </div>\r\n      )}\r\n    </DarkContext.Consumer>\r\n  );\r\n};\r\n\r\nexport default Input;\r\n","import React from \"react\";\r\n\r\nconst Select = ({ name, label, options, error, ...rest }) => {\r\n  return (\r\n    <div className=\"form-group\">\r\n      <label htmlFor={name}>{label}</label>\r\n      <select name={name} id={name} {...rest} className=\"form-control\">\r\n        <option value=\"\" />\r\n        {options.map((option) => (\r\n          <option key={option._id} value={option._id}>\r\n            {option.name}\r\n          </option>\r\n        ))}\r\n      </select>\r\n      {error & <div className=\"alert alert-danger\">{error}</div>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Select;\r\n","import React from \"react\";\r\nimport DarkContext from \"../../context/darkMode\";\r\n\r\nconst TextArea = ({ name, label, value, error, onChange, placeholder }) => {\r\n  return (\r\n    <DarkContext.Consumer>\r\n      {(darkContext) => (\r\n        <div className=\"form-group\">\r\n          <label\r\n            className={darkContext.darkMode ? \"text-light\" : \"\"}\r\n            htmlFor={name}\r\n          >\r\n            {label}\r\n          </label>\r\n          <textarea\r\n            className={\r\n              darkContext.darkMode\r\n                ? \"form-control me-2 bg-dark text-light\"\r\n                : \"form-control me-2\"\r\n            }\r\n            value={value}\r\n            onChange={onChange}\r\n            id={name}\r\n            name={name}\r\n            placeholder={placeholder}\r\n          />\r\n          {error && <div className=\"alert alert-danger\">{error}</div>}\r\n        </div>\r\n      )}\r\n    </DarkContext.Consumer>\r\n  );\r\n};\r\n\r\nexport default TextArea;\r\n","import React from \"react\";\r\nimport DarkContext from \"../../context/darkMode\";\r\n\r\nconst ImageField = ({ name, label, value, type, error, onChange, accept }) => {\r\n  return (\r\n    <DarkContext.Consumer>\r\n      {(darkContext) => (\r\n        <div className=\"form-group\">\r\n          <label\r\n            className={darkContext.darkMode ? \"text-light\" : \"\"}\r\n            htmlFor={name}\r\n          >\r\n            {label}\r\n          </label>\r\n          <input\r\n            className={\r\n              darkContext.darkMode\r\n                ? \"form-control me-2 bg-dark text-light\"\r\n                : \"form-control me-2\"\r\n            }\r\n            value={value}\r\n            onChange={onChange}\r\n            id={name}\r\n            type={type}\r\n            name={name}\r\n            placeholder={name}\r\n            accept={accept}\r\n          />\r\n          {error && <div className=\"alert alert-danger\">{error}</div>}\r\n        </div>\r\n      )}\r\n    </DarkContext.Consumer>\r\n  );\r\n};\r\n\r\nexport default ImageField;\r\n","import React, { Component } from \"react\";\r\nimport Joi from \"joi-browser\";\r\nimport Input from \"./input\";\r\nimport Select from \"./select\";\r\nimport TextArea from \"./textArea\";\r\nimport ImageField from \"./imageField\";\r\n\r\nexport default class Form extends Component {\r\n  state = {\r\n    data: {},\r\n    errors: {},\r\n  };\r\n\r\n  chosenImg = \"\";\r\n\r\n  validate = () => {\r\n    const options = {\r\n      abortEarly: false,\r\n    };\r\n\r\n    const { error } = Joi.validate(this.state.data, this.schema, options);\r\n\r\n    if (!error) return null;\r\n\r\n    const errors = {};\r\n\r\n    for (let item of error.details) {\r\n      errors[item.path[0]] = item.message;\r\n    }\r\n\r\n    return errors;\r\n  };\r\n\r\n  validateProperty = ({ name, value, files }) => {\r\n    if (name === \"image\") {\r\n      value = files[0].name;\r\n    }\r\n    const obj = { [name]: value };\r\n    const schema = { [name]: this.schema[name] };\r\n    const { error } = Joi.validate(obj, schema);\r\n\r\n    return error ? error.details[0].message : null;\r\n  };\r\n\r\n  handleSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    const errors = this.validate();\r\n\r\n    this.setState({ errors: errors || {} });\r\n\r\n    if (errors) {\r\n      return;\r\n    }\r\n    this.afterSubmit();\r\n  };\r\n\r\n  handleChange = ({ currentTarget: input }) => {\r\n    const errors = { ...this.state.errors };\r\n\r\n    let errorMessage = this.validateProperty(input);\r\n\r\n    if (errorMessage) {\r\n      errors[input.name] = errorMessage;\r\n    } else {\r\n      delete errors[input.name];\r\n    }\r\n\r\n    const data = { ...this.state.data };\r\n\r\n    if (input.name === \"image\") {\r\n      this.chosenImg = input.files[0];\r\n    }\r\n    data[input.name] = input.value;\r\n\r\n    this.setState({ data, errors });\r\n    this.afterChange(input);\r\n  };\r\n\r\n  renderInput(name, label, type = \"text\") {\r\n    const { data, errors } = this.state;\r\n    return (\r\n      <Input\r\n        name={name}\r\n        label={label}\r\n        value={data[name]}\r\n        onChange={this.handleChange}\r\n        error={errors[name]}\r\n        type={type}\r\n      ></Input>\r\n    );\r\n  }\r\n\r\n  renderTextArea(name, label, placeholder = name) {\r\n    const { data, errors } = this.state;\r\n    return (\r\n      <TextArea\r\n        name={name}\r\n        label={label}\r\n        value={data[name]}\r\n        onChange={this.handleChange}\r\n        error={errors[name]}\r\n        placeholder={placeholder}\r\n      ></TextArea>\r\n    );\r\n  }\r\n\r\n  renderSelect(name, label, options) {\r\n    const { data, errors } = this.state;\r\n\r\n    return (\r\n      <Select\r\n        name={name}\r\n        value={data[name]}\r\n        label={label}\r\n        options={options}\r\n        onChange={this.handleChange}\r\n        error={errors[name]}\r\n      ></Select>\r\n    );\r\n  }\r\n\r\n  renderImageField(name, label, accept, placeholder = name) {\r\n    const { data, errors } = this.state;\r\n    return (\r\n      <ImageField\r\n        name={name}\r\n        label={label}\r\n        value={data[name]}\r\n        onChange={this.handleChange}\r\n        error={errors[name]}\r\n        placeholder={placeholder}\r\n        type=\"file\"\r\n        accept={accept}\r\n      ></ImageField>\r\n    );\r\n  }\r\n\r\n  renderButton(label) {\r\n    return (\r\n      <button disabled={this.validate()} className=\"btn btn-warning\">\r\n        {label}\r\n      </button>\r\n    );\r\n  }\r\n}\r\n","const apiURL = \"http://localhost:8000/api/\";\r\n\r\nexport default apiURL;\r\n","import Form from \"../common/form\";\r\nimport Joi, { ref } from \"joi-browser\";\r\nimport React from \"react\";\r\nimport apiURL from \"../../apiUrl\";\r\nimport axiosInstance from \"axios\";\r\nimport DarkContext from \"./../../context/darkMode\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport default class RegisterForm extends Form {\r\n  state = {\r\n    data: {\r\n      email: \"\",\r\n      password: \"\",\r\n      username: \"\",\r\n      /*firstname: \"\",\r\n      lastname: \"\",*/\r\n    },\r\n    errors: {},\r\n    // joi: \"\",\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.props.toggleShowSearchBar(false);\r\n\r\n    // const BaseJoi = require(\"joi-browser\");\r\n    // const ImageExtension = require(\"joi-image-extension\");\r\n\r\n    // const Joi = BaseJoi.extend(ImageExtension);\r\n    // this.setState({ joi: Joi });\r\n  }\r\n\r\n  schema = {\r\n    email: Joi.string().required().email().label(\"Email\"),\r\n    password: Joi.string().required().min(5).label(\"Password\"),\r\n    repeatPassword: ref(\"password\"),\r\n    username: Joi.string().required().label(\"Username\"),\r\n    /*firstname: Joi.string().required().label(\"Firstname\"),\r\n    lastname: Joi.string().required().label(\"Lastname\"),*/\r\n  };\r\n\r\n  afterSubmit = () => {\r\n    axiosInstance\r\n      .post(apiURL + \"user/register/\", {\r\n        email: this.state.data.email,\r\n        username: this.state.data.username,\r\n        first_name: this.state.data.firstname,\r\n        last_name: this.state.data.lastname,\r\n        password: this.state.data.password,\r\n      })\r\n      .then((res) => {\r\n        window.location.reload();\r\n        window.location.replace(\"/\");\r\n      })\r\n      .catch((res) => {\r\n        const errorUsername = res.response.data.username\r\n          ? res.response.data.username[0]\r\n          : \"\";\r\n\r\n        const errors400 = { ...this.state.errors, username: errorUsername };\r\n        this.setState({ errors: errors400 });\r\n      });\r\n\r\n    console.log(\"Registered!\");\r\n  };\r\n\r\n  afterChange = (input) => {};\r\n\r\n  render() {\r\n    return (\r\n      <DarkContext.Consumer>\r\n        {(darkContext) => (\r\n          <div\r\n            className={\r\n              \"form-container border \" +\r\n              `${darkContext.darkMode ? \"bg-dark text-light\" : \"bg-light\"}`\r\n            }\r\n          >\r\n            <h1>Register</h1>\r\n            <form action=\"\" onSubmit={this.handleSubmit}>\r\n              {this.renderInput(\"email\", \"Email\")}\r\n              {this.renderInput(\"username\", \"Username\")}\r\n              {/*  {this.renderInput(\"firstname\", \"Firstname\")}\r\n              {this.renderInput(\"lastname\", \"Lastname\")} */}\r\n              {this.renderInput(\"password\", \"Password\", \"password\")}\r\n              {this.renderInput(\r\n                \"repeatPassword\",\r\n                \"Repeat Password\",\r\n                \"password\"\r\n              )}\r\n              {this.renderButton(\"Register\")}\r\n            </form>\r\n            <p>\r\n              Already have an account? <Link to=\"/login\">Login</Link>\r\n            </p>\r\n          </div>\r\n        )}\r\n      </DarkContext.Consumer>\r\n    );\r\n  }\r\n}\r\n","import Form from \"../common/form\";\r\nimport Joi from \"joi-browser\";\r\nimport React from \"react\";\r\nimport UserContext from \"../../context/userContext\";\r\nimport apiURL from \"../../apiUrl\";\r\nimport axiosInstance from \"../../baseAxios\";\r\nimport DarkContext from \"../../context/darkMode\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport default class LoginForm extends Form {\r\n  static contextType = UserContext;\r\n\r\n  componentDidMount() {\r\n    this.context.onLogIn(\"Guest\");\r\n    this.props.toggleShowSearchBar(false);\r\n  }\r\n\r\n  state = {\r\n    data: { username: \"\", password: \"\" },\r\n    errors: {},\r\n  };\r\n\r\n  schema = {\r\n    username: Joi.string().required().label(\"Username\"),\r\n    password: Joi.string().required().min(5).label(\"Password\"),\r\n  };\r\n\r\n  afterSubmit = () => {\r\n    axiosInstance\r\n      .post(apiURL + \"token/\", {\r\n        username: this.state.data.username,\r\n        password: this.state.data.password,\r\n      })\r\n      .then((res) => {\r\n        localStorage.setItem(\"access_token\", res.data.access);\r\n        localStorage.setItem(\"refresh_token\", res.data.refresh);\r\n        axiosInstance.defaults.headers[\"Authorization\"] =\r\n          \"JWT \" + localStorage.getItem(\"access_token\");\r\n\r\n        /*set user to current user */\r\n        this.context.onLogIn(this.state.data.username);\r\n        localStorage.setItem(\"currentUser\", this.state.data.username);\r\n        this.props.history.replace(\"/dashboard\");\r\n      })\r\n      .catch((response) => {\r\n        console.log(response.response);\r\n        const errorText = response.response.data.detail\r\n          ? \"username or password incorrect\"\r\n          : \"\";\r\n\r\n        const errors401 = { username: errorText, password: errorText };\r\n        this.setState({ errors: errors401 });\r\n      });\r\n  };\r\n\r\n  afterChange(input) {}\r\n\r\n  render() {\r\n    return (\r\n      <DarkContext.Consumer>\r\n        {(darkContext) => (\r\n          <div\r\n            className={\r\n              \"form-container border \" +\r\n              `${darkContext.darkMode ? \"bg-dark text-light\" : \"bg-light\"}`\r\n            }\r\n          >\r\n            <h1>Login</h1>\r\n            <form action=\"\" onSubmit={this.handleSubmit}>\r\n              {this.renderInput(\"username\", \"Username\")}\r\n              {this.renderInput(\"password\", \"Password\", \"password\")}\r\n              {this.renderButton(\"Login\")}\r\n            </form>\r\n            <p>\r\n              Don't have an account? <Link to=\"/register\">Register</Link>\r\n            </p>\r\n          </div>\r\n        )}\r\n      </DarkContext.Consumer>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport axiosInstance from \"../../baseAxios\";\r\nimport UserContext from \"./../../context/userContext\";\r\nimport DarkContext from \"./../../context/darkMode\";\r\n\r\nexport default class Logout extends Component {\r\n  componentDidMount() {\r\n    this.props.toggleShowSearchBar(false);\r\n  }\r\n\r\n  performLogout = () => {\r\n    const response = axiosInstance.post(\"user/logout/blacklist/\", {\r\n      refresh: localStorage.getItem(\"refresh_token\"),\r\n    });\r\n    localStorage.removeItem(\"access_token\");\r\n    localStorage.removeItem(\"refresh_token\");\r\n    localStorage.removeItem(\"currentUser\");\r\n\r\n    axiosInstance.defaults.headers[\"Authorization\"] = null;\r\n    console.log(\"logged out\", response);\r\n  };\r\n  render() {\r\n    return (\r\n      <DarkContext.Consumer>\r\n        {(darkContext) => (\r\n          <div\r\n            className={\r\n              \"logout border \" +\r\n              `${darkContext.darkMode ? \"bg-dark text-light\" : \"bg-light\"}`\r\n            }\r\n          >\r\n            <UserContext.Consumer>\r\n              {(userContext) => (\r\n                <p>\r\n                  Are you sure you want perform a logout for [\r\n                  {userContext.currentUser\r\n                    ? localStorage.getItem(\"currentUser\")\r\n                    : \"Anonymous\"}\r\n                  ] ?\r\n                </p>\r\n              )}\r\n            </UserContext.Consumer>\r\n            <div className=\"logout-action-wrapper\">\r\n              <Link\r\n                className={\r\n                  darkContext.darkMode\r\n                    ? \"btn btn-outline-light\"\r\n                    : \"btn btn-outline-dark\"\r\n                }\r\n                to=\"/dashboard\"\r\n              >\r\n                No\r\n              </Link>\r\n              <Link\r\n                className=\"btn btn-danger\"\r\n                to=\"/login\"\r\n                onClick={() => this.performLogout()}\r\n              >\r\n                Yes\r\n              </Link>\r\n            </div>\r\n          </div>\r\n        )}\r\n      </DarkContext.Consumer>\r\n    );\r\n  }\r\n}\r\n","import React, { useContext } from \"react\";\r\nimport axios from \"axios\";\r\nimport apiURL from \"../../apiUrl\";\r\nimport { useEffect, useState } from \"react\";\r\nimport DarkContext from \"../../context/darkMode\";\r\nimport UserContext from \"../../context/userContext\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst SearchPage = () => {\r\n  const [posts, setPosts] = useState([]);\r\n  const darkContext = useContext(DarkContext);\r\n  const userContext = useContext(UserContext);\r\n\r\n  useEffect(() => {\r\n    axios.get(apiURL + \"search/\" + window.location.search).then((res) => {\r\n      setPosts(res.data);\r\n      console.log(res.data);\r\n    });\r\n  }, [setPosts]);\r\n\r\n  return (\r\n    <React.Fragment>\r\n      {posts.length ? (\r\n        <div\r\n          className={\r\n            darkContext.darkMode\r\n              ? \"posts-results-section dark-page-shadow text-light\"\r\n              : \"posts-results-section border\"\r\n          }\r\n        >\r\n          {posts.map((post) => {\r\n            const { title, id, author, published, content } = post;\r\n            return (\r\n              <div className=\"post\" key={id}>\r\n                <Link to={\"/posts/\" + post.slug}>\r\n                  <h3> {title}</h3>\r\n                </Link>\r\n                <div>\r\n                  <p className=\"author\">\r\n                    {author ? userContext.getAuthor(post.author) : \"Anonymous\"}\r\n                  </p>\r\n\r\n                  <p className=\"date\">\r\n                    <span className=\"vertical-line\">&#124;</span>\r\n                    {new Intl.DateTimeFormat(\"en-GB\", {\r\n                      dateStyle: \"full\",\r\n                    }).format(new Date(published))}\r\n                  </p>\r\n                </div>\r\n                <hr />\r\n                <p>\r\n                  {content.substring(0, 150) + \"...\"}{\" \"}\r\n                  <Link to={\"/posts/\" + post.slug}>\r\n                    {\" \"}\r\n                    <i className=\"fas fa-info-circle\"></i>\r\n                  </Link>\r\n                </p>\r\n              </div>\r\n            );\r\n          })}\r\n        </div>\r\n      ) : (\r\n        <div\r\n          className={\r\n            +darkContext.darkMode\r\n              ? \"no-results dark-page-shadow text-light\"\r\n              : \"no-results border bg-light\"\r\n          }\r\n        >\r\n          <h3>\r\n            No Results <i class=\"fas fa-folder-open\"></i>!\r\n          </h3>\r\n        </div>\r\n      )}\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default SearchPage;\r\n","import React from \"react\";\r\nimport Form from \"../common/form\";\r\nimport Joi from \"joi-browser\";\r\n// import Joi from \"./../../utils/extendedJoi\";\r\nimport DarkContext from \"../../context/darkMode\";\r\nimport axiosInstance from \"./../../baseAxios\";\r\n\r\nexport default class CreatePost extends Form {\r\n  componentDidMount() {\r\n    this.props.toggleShowSearchBar(false);\r\n    axiosInstance.get().then((res) => {\r\n      const slugs = res.data.map((post) => post.slug);\r\n      this.setState({ slugs: slugs });\r\n    });\r\n\r\n    const BaseJoi = require(\"joi-browser\");\r\n    const ImageExtension = require(\"joi-image-extension\");\r\n\r\n    const Joi = BaseJoi.extend(ImageExtension);\r\n    this.setState({ joi: Joi });\r\n  }\r\n\r\n  state = {\r\n    data: { title: \"\", image: \"\", content: \"\" },\r\n    errors: {},\r\n    slugs: [],\r\n    joi: \"\",\r\n  };\r\n\r\n  schema = {\r\n    title: Joi.string().required().min(10).max(80).label(\"Title\"),\r\n    image: this.state.joi\r\n      ? this.state.joi.image().label(\"Image\")\r\n      : Joi.string().label(\"Image\"),\r\n    // image: Joi.image().label(\"Image\"),\r\n    content: Joi.string().required().min(100).label(\"Content\"),\r\n  };\r\n\r\n  afterSubmit = () => {\r\n    const { title, content } = this.state.data;\r\n\r\n    let formData = new FormData();\r\n\r\n    formData.append(\"image\", this.chosenImg, this.chosenImg.name);\r\n    formData.append(\"title\", title);\r\n    formData.append(\"content\", content);\r\n    formData.append(\r\n      \"author\",\r\n      this.props.users.filter(\r\n        (user) => user.username == localStorage.getItem(\"currentUser\")\r\n      )[0].id\r\n    );\r\n\r\n    axiosInstance\r\n      .post(\"create-post/\", formData, {\r\n        headers: {\r\n          \"Content-Type\": \"multipart/form-data\",\r\n        },\r\n      })\r\n      .then((res) => {\r\n        this.props.history.replace(\"/dashboard\");\r\n        console.log(res);\r\n      })\r\n      .catch((res) => {\r\n        const errorTitle = res.response.data.title\r\n          ? res.response.data.title[0]\r\n          : \"\";\r\n\r\n        const errors400 = { ...this.state.errors, title: errorTitle };\r\n        this.setState({ errors: errors400 });\r\n      });\r\n  };\r\n\r\n  afterChange(inp) {}\r\n\r\n  render() {\r\n    return (\r\n      <DarkContext.Consumer>\r\n        {(darkContext) => (\r\n          <div\r\n            className={\r\n              \"form-container border \" +\r\n              `${darkContext.darkMode ? \"bg-dark\" : \"bg-light\"}`\r\n            }\r\n          >\r\n            <h1 className={darkContext.darkMode ? \"text-light\" : \"\"}>\r\n              Create A Post\r\n            </h1>\r\n            <form action=\"\" onSubmit={this.handleSubmit}>\r\n              {this.renderInput(\"title\", \"Title\")}\r\n              {this.renderImageField(\"image\", \"Image\", \"image/*\")}\r\n              {this.renderTextArea(\"content\", \"Content\")}\r\n              {this.renderButton(\"Post\")}\r\n            </form>\r\n          </div>\r\n        )}\r\n      </DarkContext.Consumer>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport DarkContext from \"../../context/darkMode\";\r\nimport { Link, withRouter } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport apiURL from \"../../apiUrl\";\r\nimport axiosInstance from \"./../../baseAxios\";\r\n\r\nclass SearchBar extends Component {\r\n  state = {\r\n    searchValue: \"\",\r\n    searchResults: [],\r\n  };\r\n\r\n  componentDidMount() {}\r\n\r\n  handleChange = (e) => {\r\n    e.preventDefault();\r\n\r\n    this.setState({ searchValue: e.target.value });\r\n\r\n    if (e.target.value !== \"\") {\r\n      axiosInstance.get(\"search/?search=\" + e.target.value).then((res) => {\r\n        this.setState({ searchResults: res.data });\r\n      });\r\n    }\r\n  };\r\n\r\n  goSearch = (e) => {\r\n    e.preventDefault();\r\n    if (this.state.searchValue) {\r\n      this.props.history.push({\r\n        pathname: \"/search/\",\r\n        search: \"?search= \" + this.state.searchValue,\r\n      });\r\n\r\n      window.location.reload();\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { searchResults, searchValue } = this.state;\r\n\r\n    return (\r\n      <DarkContext.Consumer>\r\n        {(darkContext) => (\r\n          <React.Fragment>\r\n            <form className=\"form-inline searchbar\" onSubmit={this.goSearch}>\r\n              <input\r\n                className={\r\n                  darkContext.darkMode\r\n                    ? \"form-control bg-dark text-light\"\r\n                    : \"form-control\"\r\n                }\r\n                type=\"search\"\r\n                placeholder=\"Search\"\r\n                aria-label=\"Search\"\r\n                onChange={this.handleChange}\r\n              />\r\n              <button className=\"btn btn-outline-success\" type=\"submit\">\r\n                Search\r\n              </button>\r\n            </form>\r\n            <div style={{ width: \"90%\", margin: \"0rem auto\" }}>\r\n              <ul className=\"posts-results-on-change list-group list-group-flush dark-page-shadow\">\r\n                {searchResults && searchValue\r\n                  ? searchResults.map((post) => (\r\n                      <li\r\n                        className={\r\n                          darkContext.darkMode\r\n                            ? \"list-group-item bg-dark text-light\"\r\n                            : \"list-group-item\"\r\n                        }\r\n                        key={post.id}\r\n                      >\r\n                        <i className=\"fas fa-search-plus\"></i>\r\n                        <p>{post.title}</p>\r\n                      </li>\r\n                    ))\r\n                  : \"\"}\r\n              </ul>\r\n            </div>\r\n          </React.Fragment>\r\n        )}\r\n      </DarkContext.Consumer>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(SearchBar);\r\n","const BaseJoi = require(\"joi-browser\");\r\nconst ImageExtension = require(\"joi-image-extension\");\r\n\r\nconst Joi = BaseJoi.extend(ImageExtension);\r\n\r\nexport default Joi;\r\n","import React from \"react\";\r\nimport Form from \"./../common/form\";\r\nimport Joi from \"./../../utils/extendedJoi\";\r\n\r\nexport default class CommentsHeader extends Form {\r\n  state = {\r\n    showCommentForm: false,\r\n    data: { comment: \"\" },\r\n    errors: {},\r\n    currentUserId: JSON.parse(\r\n      atob(localStorage.getItem(\"access_token\").split(\".\")[1])\r\n    ).user_id,\r\n  };\r\n\r\n  schema = {\r\n    comment: Joi.string().max(1500).label(\"Comment\"),\r\n  };\r\n\r\n  toggleForm = () => {\r\n    this.setState({ showCommentForm: !this.state.showCommentForm });\r\n  };\r\n\r\n  afterSubmit = () => {\r\n    this.setState({ showCommentForm: false });\r\n\r\n    const { addComment } = this.props;\r\n    const { comment } = this.state.data;\r\n    const { currentUserId } = this.state;\r\n\r\n    addComment({ author: currentUserId, text: comment });\r\n\r\n    this.setState({ data: { comment: \"\" } });\r\n  };\r\n\r\n  afterChange(input) {}\r\n\r\n  render() {\r\n    const { showCommentForm } = this.state;\r\n    return (\r\n      <React.Fragment>\r\n        <div className=\"comments-header\">\r\n          <p>Comments Section</p>\r\n          <p>\r\n            <button\r\n              onClick={this.toggleForm}\r\n              className=\"btn btn-outline-primary\"\r\n            >\r\n              {showCommentForm ? (\r\n                \"close\"\r\n              ) : (\r\n                <React.Fragment>\r\n                  {\" \"}\r\n                  <i className=\"fas fa-plus\"></i> comment\r\n                </React.Fragment>\r\n              )}\r\n            </button>\r\n          </p>\r\n        </div>\r\n        {this.state.showCommentForm ? (\r\n          <div className=\"comment-form\">\r\n            <form action=\"\" onSubmit={this.handleSubmit}>\r\n              {this.renderTextArea(\"comment\", \"Comment\")}\r\n              {this.renderButton(\"Submit\")}\r\n            </form>\r\n          </div>\r\n        ) : (\r\n          \"\"\r\n        )}\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport UserContext from \"../../context/userContext\";\r\nimport DarkContext from \"./../../context/darkMode\";\r\nimport { Link } from \"react-router-dom\";\r\nimport axiosInstance from \"./../../baseAxios\";\r\nimport CommentsHeader from \"./../actions/commentsHeader\";\r\nimport ScrollToTopBtn from \"./../actions/scrollToTopBtn\";\r\n\r\nexport default class PostDetail extends Component {\r\n  state = {\r\n    currentUserId: JSON.parse(\r\n      atob(localStorage.getItem(\"access_token\").split(\".\")[1])\r\n    ).user_id,\r\n    postAuthorId: this.props.post.author,\r\n    currentUser: {},\r\n    comments: [],\r\n  };\r\n\r\n  componentDidMount() {\r\n    axiosInstance\r\n      .get(\"user/list/\" + this.state.currentUserId)\r\n      .then((res) => this.setState({ currentUser: res.data }));\r\n\r\n    if (this.props.post) {\r\n      axiosInstance\r\n        .get(\"comments/\" + this.props.post.id)\r\n        .then((res) => this.setState({ comments: res.data }));\r\n    }\r\n  }\r\n\r\n  renderUpDel = () => {\r\n    const { currentUserId, postAuthorId, currentUser } = this.state;\r\n    const { slug } = this.props.post;\r\n\r\n    if (currentUserId !== postAuthorId) {\r\n      if (currentUser.is_superuser) {\r\n        console.log(\"admin has right to delete post.\");\r\n        return (\r\n          <div className=\"actions\">\r\n            <Link to={\"/update-post/\" + slug}>\r\n              <i className=\"fas fa-wrench\"></i>\r\n            </Link>\r\n            <Link to={\"/delete-post/\" + slug}>\r\n              <i className=\"fas fa-trash-alt\"></i>\r\n            </Link>\r\n          </div>\r\n        );\r\n      }\r\n      return \"\";\r\n    }\r\n\r\n    return (\r\n      <div className=\"actions\">\r\n        <Link to={\"/update-post/\" + slug}>\r\n          <i className=\"fas fa-wrench\"></i>\r\n        </Link>\r\n        <Link to={\"/delete-post/\" + slug}>\r\n          <i className=\"fas fa-trash-alt\"></i>\r\n        </Link>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  addComment = (comment) => {\r\n    const { comments } = this.state;\r\n    const { post } = this.props;\r\n    let newComments = comments;\r\n    newComments.unshift(comment);\r\n    this.setState({ comments: newComments });\r\n\r\n    axiosInstance\r\n      .post(\"comments/\", { ...comment, post: post.id })\r\n      .catch((res) => console.log(res.response));\r\n  };\r\n\r\n  render() {\r\n    const { title, image, author, content, published } = this.props.post;\r\n\r\n    const { comments } = this.state;\r\n\r\n    const accessToken = localStorage.getItem(\"access_token\");\r\n\r\n    return this.props.post ? (\r\n      <DarkContext.Consumer>\r\n        {(darkContext) => (\r\n          <UserContext.Consumer>\r\n            {(userContext) => (\r\n              <article\r\n                className={\r\n                  darkContext.darkMode\r\n                    ? \"post-container text-light\"\r\n                    : \"post-container\"\r\n                }\r\n              >\r\n                <ScrollToTopBtn showOn={700} />\r\n                <div\r\n                  className={\r\n                    darkContext.darkMode\r\n                      ? \"dark-page-shadow post-img-title\"\r\n                      : \"post-img-title\"\r\n                  }\r\n                >\r\n                  <div className=\"image-overlay\">\r\n                    <h1>{title}</h1>\r\n                  </div>\r\n\r\n                  <img\r\n                    src={image}\r\n                    className=\"card-img-top\"\r\n                    alt={\"Image for: \" + title}\r\n                  />\r\n                </div>\r\n                <div\r\n                  className={\r\n                    darkContext.darkMode\r\n                      ? \"post-body dark-page-shadow border bg-dark\"\r\n                      : \"post-body border bg-light\"\r\n                  }\r\n                >\r\n                  <span>\r\n                    <p>\r\n                      <b>{userContext.getAuthor(author)}</b>{\" \"}\r\n                      <span> published on</span>\r\n                    </p>\r\n                    <p>\r\n                      {published\r\n                        ? new Intl.DateTimeFormat(\"en-GB\", {\r\n                            dateStyle: \"full\",\r\n                          }).format(new Date(published))\r\n                        : \"\"}\r\n                    </p>\r\n                  </span>\r\n                  <hr />\r\n                  <div\r\n                    style={{ whiteSpace: \"pre-wrap\" }}\r\n                    className={\r\n                      darkContext.darkMode\r\n                        ? \"post-content\"\r\n                        : \"post-content text-dark\"\r\n                    }\r\n                  >\r\n                    {content}\r\n                  </div>\r\n\r\n                  <React.Fragment>\r\n                    {/* {author === currentUserId ? (\r\n                      <div className=\"actions\">\r\n                        <Link to={\"/update-post/\" + slug}>\r\n                          <i className=\"fas fa-wrench\"></i>\r\n                        </Link>\r\n                        <Link to={\"/delete-post/\" + slug}>\r\n                          <i className=\"fas fa-trash-alt\"></i>\r\n                        </Link>\r\n                      </div>\r\n                    ) : (\r\n                      \"\"\r\n                    )} */}\r\n                    {this.renderUpDel()}\r\n                  </React.Fragment>\r\n                </div>\r\n                <div\r\n                  className={\r\n                    darkContext.darkMode\r\n                      ? \"comments dark-page-shadow border bg-dark\"\r\n                      : \"comments border bg-light\"\r\n                  }\r\n                >\r\n                  <CommentsHeader addComment={this.addComment} />\r\n                  <section>\r\n                    {comments.length ? (\r\n                      comments.map((comment, comId) => (\r\n                        <div\r\n                          key={comId}\r\n                          style={{ whiteSpace: \"pre-wrap\" }}\r\n                          className=\"singular-comment dark-page-shadow\"\r\n                          style={{ boxShadow: \"1px 3px 5px rgb(0 0 0 / 20%)\" }}\r\n                        >\r\n                          <div className=\"comment-header\">\r\n                            {author === comment.author ? (\r\n                              <p>\r\n                                {userContext.getAuthor(comment.author)}{\" \"}\r\n                                <i className=\"fas fa-user-check\"></i>\r\n                              </p>\r\n                            ) : (\r\n                              <p>{userContext.getAuthor(comment.author)}</p>\r\n                            )}\r\n                            <p>\r\n                              {comment.posted\r\n                                ? new Intl.DateTimeFormat(\"en-GB\", {\r\n                                    dateStyle: \"long\",\r\n                                    timeStyle: \"short\",\r\n                                  }).format(new Date(comment.posted))\r\n                                : \"\"}\r\n                            </p>\r\n                          </div>\r\n                          <hr />\r\n                          <p>{comment.text}</p>\r\n                        </div>\r\n                      ))\r\n                    ) : (\r\n                      <h4>\r\n                        No Comments <i className=\"fas fa-comment-dots\"></i>\r\n                      </h4>\r\n                    )}\r\n                  </section>\r\n                </div>\r\n              </article>\r\n            )}\r\n          </UserContext.Consumer>\r\n        )}\r\n      </DarkContext.Consumer>\r\n    ) : (\r\n      \"\"\r\n    );\r\n  }\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport PostDetail from \"./postDetail\";\r\nimport PostLoadingComponent from \"./../actions/postLoading\";\r\nimport axiosInstance from \"axios\";\r\nimport apiURL from \"../../apiUrl\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nconst PostDetailWrapper = ({ toggleShowSearchBar, match }) => {\r\n  const history = useHistory();\r\n\r\n  const [appState, setAppState] = useState({\r\n    postIsLoading: false,\r\n    post: {},\r\n  });\r\n  const PostLoading = PostLoadingComponent(PostDetail);\r\n\r\n  useEffect(() => {\r\n    toggleShowSearchBar(true);\r\n\r\n    setAppState({ postIsLoading: true });\r\n    axiosInstance\r\n      .get(apiURL + \"posts/\" + match.params.slug)\r\n      .then((res) => {\r\n        setAppState({ postIsLoading: false, post: res.data });\r\n      })\r\n      .catch((response) => {\r\n        console.log(response.response);\r\n        if (response.response.status === 404) {\r\n          history.push(\"/*\");\r\n        }\r\n      });\r\n  }, [setAppState]);\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <PostLoading\r\n        rows={1}\r\n        isLoading={appState.postIsLoading}\r\n        post={appState.post}\r\n      />\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default PostDetailWrapper;\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport DarkContext from \"./../../context/darkMode\";\r\n\r\nexport default class NotFoundPage extends Component {\r\n  componentDidMount() {\r\n    this.props.toggleShowSearchBar(false);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <DarkContext.Consumer>\r\n        {(darkContext) => (\r\n          <div\r\n            className={\r\n              darkContext.darkMode\r\n                ? \"container-404 bg-dark dark-page-shadow text-light\"\r\n                : \"container-404 border\"\r\n            }\r\n          >\r\n            <div className=\"error-404\">\r\n              <h1>\r\n                4<i className=\"fas fa-cog\"></i>4!\r\n              </h1>\r\n              <p>\r\n                Sorry but, the content you are trying to access doesn't exist.\r\n                We'll send you a link to go...\r\n              </p>\r\n              <Link to=\"/dashboard\">\r\n                <i className=\"fas fa-hand-point-left\"></i> Back Home\r\n              </Link>\r\n            </div>\r\n          </div>\r\n        )}\r\n      </DarkContext.Consumer>\r\n    );\r\n  }\r\n}\r\n","import { createBrowserHistory } from \"history\";\r\n\r\nexport default createBrowserHistory({\r\n  /* pass a configuration object here if needed */\r\n});\r\n","import React from \"react\";\r\nimport Form from \"../common/form\";\r\nimport Joi from \"joi-browser\";\r\nimport DarkContext from \"../../context/darkMode\";\r\nimport axios from \"axios\";\r\nimport apiURL from \"../../apiUrl\";\r\nimport axiosInstance from \"./../../baseAxios\";\r\nimport { Link } from \"react-router-dom\";\r\nimport history from \"./../../history\";\r\n\r\nexport default class UpdatePost extends Form {\r\n  componentDidMount() {\r\n    this.props.toggleShowSearchBar(false);\r\n    axiosInstance\r\n      .get(apiURL + \"posts/\" + this.props.match.params.slug)\r\n      .then((res) => {\r\n        const { title, slug, content } = res.data;\r\n        this.setState({ slug: slug });\r\n\r\n        this.setState({\r\n          data: {\r\n            title: title,\r\n\r\n            content: content,\r\n          },\r\n        });\r\n      })\r\n      .catch((res) => console.log(res.response));\r\n\r\n    const BaseJoi = require(\"joi-browser\");\r\n    const ImageExtension = require(\"joi-image-extension\");\r\n\r\n    const Joi = BaseJoi.extend(ImageExtension);\r\n    this.setState({ joi: Joi });\r\n  }\r\n\r\n  state = {\r\n    data: { title: \"\", content: \"\" },\r\n    errors: {},\r\n    slug: \"\",\r\n  };\r\n\r\n  schema = {\r\n    title: Joi.string().required().min(10).max(80).label(\"Title\"),\r\n    image: Joi.any()\r\n      .meta({ swaggerType: \"file\" })\r\n      .optional()\r\n      .description(\"Image File\"),\r\n    content: Joi.string().required().min(100).label(\"Content\"),\r\n  };\r\n\r\n  afterSubmit = () => {\r\n    const { title, content } = this.state.data;\r\n\r\n    let formData = new FormData();\r\n\r\n    if (!this.chosenImg) {\r\n      this.chosenImg = \"\";\r\n    }\r\n\r\n    console.log(this.chosenImg);\r\n    const imgName = this.chosenImg ? this.chosenImg.name : \"\";\r\n\r\n    formData.append(\"image\", this.chosenImg);\r\n    formData.append(\"title\", title);\r\n    formData.append(\"slug\", \"\");\r\n    formData.append(\"content\", content);\r\n    formData.append(\r\n      \"author\",\r\n      this.props.users.filter(\r\n        (user) => user.username == localStorage.getItem(\"currentUser\")\r\n      )[0].id\r\n    );\r\n\r\n    axiosInstance\r\n      .put(\"update-post/\" + this.props.match.params.slug, formData)\r\n      .then((res) => {\r\n        this.props.history.replace(\"/dashboard\");\r\n        console.log(res);\r\n      })\r\n      .catch((response) => console.log(response.response));\r\n  };\r\n\r\n  afterChange(input) {}\r\n\r\n  render() {\r\n    return (\r\n      <DarkContext.Consumer>\r\n        {(darkContext) => (\r\n          <div\r\n            className={\r\n              \"form-container border \" +\r\n              `${darkContext.darkMode ? \"bg-dark\" : \"bg-light\"}`\r\n            }\r\n          >\r\n            <h1 className={darkContext.darkMode ? \"text-light\" : \"\"}>\r\n              Updating Your Post..\r\n            </h1>\r\n            <form action=\"\" onSubmit={this.handleSubmit}>\r\n              {this.renderInput(\"title\", \"Title\")}\r\n              {this.renderImageField(\"image\", \"Choose Image Again\", \"image/*\")}\r\n              {this.renderTextArea(\"content\", \"Content\")}\r\n              <div className=\"update-cancel-post-container\">\r\n                {this.renderButton(\"Update Post\")}\r\n                <Link\r\n                  //to={\"/posts/\" + this.state.slug}\r\n                  onClick={history.goBack}\r\n                  className=\"btn btn-primary\"\r\n                >\r\n                  Cancel\r\n                </Link>\r\n              </div>\r\n            </form>\r\n          </div>\r\n        )}\r\n      </DarkContext.Consumer>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport axiosInstance from \"../../baseAxios\";\r\nimport UserContext from \"./../../context/userContext\";\r\nimport DarkContext from \"./../../context/darkMode\";\r\nimport history from \"./../../history\";\r\n\r\nexport default class DeletePost extends Component {\r\n  componentDidMount() {\r\n    this.props.toggleShowSearchBar(false);\r\n    axiosInstance\r\n      .get(\"posts/\" + this.props.match.params.slug)\r\n      .then((res) => this.setState({ post: res.data }));\r\n\r\n    axiosInstance\r\n      .get(\"user/list/\" + this.state.currentUserId)\r\n      .then((res) => this.setState({ currentUser: res.data }));\r\n  }\r\n\r\n  state = {\r\n    post: {},\r\n    currentUserId: JSON.parse(\r\n      atob(localStorage.getItem(\"access_token\").split(\".\")[1])\r\n    ).user_id,\r\n    currentUser: {},\r\n  };\r\n\r\n  performDelete = () => {\r\n    axiosInstance.delete(\"delete-post/\" + this.props.match.params.slug);\r\n    this.props.history.replace(\"/dashboard\");\r\n    window.location.reload();\r\n  };\r\n\r\n  renderYesBtn = () => {\r\n    const { post, currentUser, currentUserId } = this.state;\r\n\r\n    if (currentUserId !== post.author) {\r\n      if (currentUser.is_superuser) {\r\n        return (\r\n          <button\r\n            className=\"btn btn-danger\"\r\n            onClick={() => this.performDelete()}\r\n          >\r\n            Yes\r\n          </button>\r\n        );\r\n      }\r\n      return \"\";\r\n    }\r\n\r\n    return (\r\n      <button className=\"btn btn-danger\" onClick={() => this.performDelete()}>\r\n        Yes\r\n      </button>\r\n    );\r\n  };\r\n\r\n  render() {\r\n    if (\r\n      this.state.post.author ===\r\n      JSON.parse(atob(localStorage.getItem(\"refresh_token\").split(\".\")[1]))\r\n        .user_id\r\n    ) {\r\n      console.log(\"neeee mag niet!!!\");\r\n    }\r\n    return (\r\n      <DarkContext.Consumer>\r\n        {(darkContext) => (\r\n          <div\r\n            className={\r\n              \"logout border \" +\r\n              `${darkContext.darkMode ? \"bg-dark text-light\" : \"bg-light\"}`\r\n            }\r\n          >\r\n            <UserContext.Consumer>\r\n              {(userContext) => (\r\n                <p>\r\n                  Are you sure you want to delete your post: [\r\n                  {this.state.post.title}]?\r\n                </p>\r\n              )}\r\n            </UserContext.Consumer>\r\n            <div className=\"delete-post-action-wrapper\">\r\n              <button\r\n                className={\r\n                  darkContext.darkMode\r\n                    ? \"btn btn-outline-light\"\r\n                    : \"btn btn-outline-dark\"\r\n                }\r\n                //to={\"/posts/\" + this.state.post.slug}\r\n                onClick={history.goBack}\r\n              >\r\n                No\r\n              </button>\r\n              {/* {this.state.post.author ===\r\n              JSON.parse(\r\n                atob(localStorage.getItem(\"refresh_token\").split(\".\")[1])\r\n              ).user_id ? (\r\n                <button\r\n                  className=\"btn btn-danger\"\r\n                  onClick={() => this.performDelete()}\r\n                >\r\n                  Yes\r\n                </button>\r\n              ) : (\r\n                \"\"\r\n              )} */}\r\n              {this.renderYesBtn()}\r\n            </div>\r\n          </div>\r\n        )}\r\n      </DarkContext.Consumer>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { Link, Redirect } from \"react-router-dom\";\r\nimport history from \"./../../history\";\r\nimport DarkContext from \"./../../context/darkMode\";\r\nimport ReactPaginate from \"react-paginate\";\r\n\r\nexport default class UserPosts extends Component {\r\n  state = { offset: 0, data: [], perPage: 8, currentPage: 0 };\r\n  componentDidMount() {\r\n    if (this.props.posts) {\r\n      this.getUserPosts();\r\n    }\r\n  }\r\n\r\n  getUserPosts() {\r\n    const data = this.props.posts;\r\n    const slice = data.slice(\r\n      this.state.offset,\r\n      this.state.offset + this.state.perPage\r\n    );\r\n    const postData = slice.map((post) => {\r\n      return (\r\n        <DarkContext.Consumer key={post.id}>\r\n          {(darkContext) => (\r\n            <div\r\n              key={post.id}\r\n              className={\r\n                darkContext.darkMode\r\n                  ? \"user-post dark-page-shadow bg-dark\"\r\n                  : \"user-post border bg-light\"\r\n              }\r\n            >\r\n              <div className=\"title\">\r\n                <Link\r\n                  to={\"/posts/\" + post.slug}\r\n                  className={darkContext.darkMode ? \"text-light\" : \"text-dark\"}\r\n                >\r\n                  {post.title.length >= 20\r\n                    ? post.title.substring(0, 20) + \"...\"\r\n                    : post.title}\r\n                </Link>\r\n              </div>\r\n              <div className=\"published\">\r\n                {new Intl.DateTimeFormat(\"en-GB\", {\r\n                  dateStyle: \"full\",\r\n                }).format(new Date(post.published))}\r\n              </div>\r\n              <div className=\"actions\">\r\n                <Link to={\"/update-post/\" + post.slug}>\r\n                  <i className=\"fas fa-wrench\"></i>\r\n                </Link>\r\n                <Link to={\"/delete-post/\" + post.slug}>\r\n                  <i className=\"fas fa-trash-alt\"></i>\r\n                </Link>\r\n              </div>\r\n            </div>\r\n          )}\r\n        </DarkContext.Consumer>\r\n      );\r\n    });\r\n\r\n    this.setState({\r\n      pageCount: Math.ceil(data.length / this.state.perPage),\r\n\r\n      postData,\r\n    });\r\n  }\r\n\r\n  handlePageClick = (e) => {\r\n    const selectedPage = e.selected;\r\n    const offset = selectedPage * this.state.perPage;\r\n\r\n    this.setState({ currentPage: selectedPage, offset: offset }, () =>\r\n      this.getUserPosts()\r\n    );\r\n\r\n    window.scrollTo(0, 0);\r\n  };\r\n\r\n  render() {\r\n    const { posts } = this.props;\r\n\r\n    return (\r\n      <DarkContext.Consumer>\r\n        {(darkContext) => (\r\n          <React.Fragment>\r\n            {this.state.postData}\r\n            <ReactPaginate\r\n              previousLabel={\"previous\"}\r\n              nextLabel={\"next\"}\r\n              breakLabel={\"...\"}\r\n              breakClassName={\"break-me\"}\r\n              pageCount={this.state.pageCount}\r\n              marginPagesDisplayed={3}\r\n              pageRangeDisplayed={5}\r\n              onPageChange={this.handlePageClick}\r\n              containerClassName={\"pagination justify-content-center\"}\r\n              pageClassName={\"page-item\"}\r\n              pageLinkClassName={\"page-link\"}\r\n              previousClassName={\r\n                darkContext.darkMode ? \" bg-dark page-link\" : \"page-link\"\r\n              }\r\n              nextClassName={\r\n                darkContext.darkMode ? \" bg-dark page-link\" : \"page-link\"\r\n              }\r\n              activeClassName={\"active\"}\r\n            />\r\n          </React.Fragment>\r\n        )}\r\n      </DarkContext.Consumer>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport axios from \"axios\";\r\nimport UserPosts from \"./userPosts\";\r\nimport PostLoadingComponent from \"../actions/postLoading\";\r\nimport { useState, useEffect, useContext } from \"react\";\r\nimport apiURL from \"../../apiUrl\";\r\nimport DarkContext from \"./../../context/darkMode\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport axiosInstance from \"./../../baseAxios\";\r\n\r\nconst UserPostsWrapper = ({ toggleShowSearchBar }) => {\r\n  const darkContext = useContext(DarkContext);\r\n  let history = useHistory();\r\n\r\n  const PostLoading = PostLoadingComponent(UserPosts);\r\n  const [appState, setAppState] = useState({ loading: false, posts: null });\r\n\r\n  const currentUserId = JSON.parse(\r\n    atob(localStorage.getItem(\"access_token\").split(\".\")[1])\r\n  ).user_id;\r\n\r\n  useEffect(() => {\r\n    toggleShowSearchBar(false);\r\n\r\n    setAppState({ loading: true });\r\n    axiosInstance.get().then((res) => {\r\n      setAppState({\r\n        loading: false,\r\n        posts: res.data.filter((post) => post.author === currentUserId),\r\n      });\r\n    });\r\n  }, [setAppState]);\r\n\r\n  return (\r\n    <PostLoading rows={1} isLoading={appState.loading} posts={appState.posts} />\r\n  );\r\n};\r\n\r\nexport default UserPostsWrapper;\r\n","import React, { Component } from \"react\";\r\nimport Form from \"./../common/form\";\r\nimport Joi from \"./../../utils/extendedJoi\";\r\nimport axiosInstance from \"./../../baseAxios\";\r\n\r\nexport default class UserInfo extends Form {\r\n  componentDidMount() {\r\n    this.setState({ pageBio: this.props.currentUser.bio });\r\n    this.setState({ data: { bio: this.props.currentUser.bio } });\r\n  }\r\n\r\n  state = {\r\n    data: { bio: \"\" },\r\n    errors: {},\r\n\r\n    pageBio: \"\",\r\n\r\n    bioChangeActive: false,\r\n  };\r\n\r\n  schema = {\r\n    bio: Joi.string().min(10).max(300).label(\"Bio\"),\r\n  };\r\n\r\n  afterSubmit = () => {\r\n    const { bio } = this.state.data;\r\n    const { pageBio } = this.state;\r\n    const { currentUser } = this.props;\r\n\r\n    this.setState({ pageBio: bio });\r\n    axiosInstance.put(\"user/list/\" + currentUser.id, {\r\n      ...currentUser,\r\n      bio: bio,\r\n    });\r\n\r\n    this.setState({ bioChangeActive: false });\r\n  };\r\n\r\n  editBio = () => {\r\n    this.setState({ bioChangeActive: !this.state.bioChangeActive });\r\n  };\r\n\r\n  afterChange(inp) {}\r\n\r\n  render() {\r\n    const { currentUser, darkCnxt } = this.props;\r\n    const { bioChangeActive, pageBio } = this.state;\r\n\r\n    return (\r\n      <div\r\n        className={\r\n          darkCnxt.darkMode\r\n            ? \"user-info dark-page-shadow bg-dark text-light\"\r\n            : \"user-info border bg-light\"\r\n        }\r\n      >\r\n        <h4>\r\n          Your profile: <b>{localStorage.getItem(\"currentUser\")}</b>{\" \"}\r\n        </h4>\r\n        <div className=\"more-info\">\r\n          <p>\r\n            Joined on{\" \"}\r\n            <span>\r\n              {currentUser.date_joined\r\n                ? new Intl.DateTimeFormat(\"en-GB\", {\r\n                    dateStyle: \"full\",\r\n                  }).format(new Date(currentUser.date_joined))\r\n                : \"\"}\r\n            </span>\r\n          </p>\r\n          <p>{currentUser.email}</p>\r\n        </div>\r\n        <hr />\r\n        <div className=\"bio\">\r\n          <p>{pageBio}</p>\r\n          <button className=\"btn btn-outline-info\" onClick={this.editBio}>\r\n            {bioChangeActive ? \"Close\" : \"Edit Bio\"}\r\n          </button>\r\n          {bioChangeActive ? (\r\n            <form action=\"\" onSubmit={this.handleSubmit}>\r\n              {this.renderTextArea(\"bio\", \"Bio\")}\r\n              {this.renderButton(\"submit\")}\r\n            </form>\r\n          ) : (\r\n            \"\"\r\n          )}\r\n        </div>\r\n        {/* <img\r\n                src=\"https://source.unsplash.com/random/1600x800\"\r\n                alt=\"random img\"\r\n              /> */}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport DarkContext from \"../../context/darkMode\";\r\nimport UserPostsWrapper from \"./userPostsWrapper\";\r\nimport axiosInstance from \"./../../baseAxios\";\r\nimport UserInfo from \"./userInfo\";\r\n\r\nexport default class Dashboard extends Component {\r\n  state = {\r\n    currentUserId: JSON.parse(\r\n      atob(localStorage.getItem(\"access_token\").split(\".\")[1])\r\n    ).user_id,\r\n    currentUser: {},\r\n    posts: null,\r\n    dataClasses: { data1: \"data\", data2: \"data\", data3: \"data\" },\r\n  };\r\n\r\n  componentDidMount() {\r\n    axiosInstance\r\n      .get(\"user/list/\" + this.state.currentUserId)\r\n      .then((res) => this.setState({ currentUser: res.data }));\r\n    axiosInstance.get().then((res) => this.setState({ posts: res.data }));\r\n  }\r\n\r\n  renderPostById = (id) => {\r\n    if (this.state.posts) {\r\n      const post = this.state.posts.filter((post) => post.id === id)[0];\r\n      return post.title;\r\n    }\r\n  };\r\n\r\n  getPostSlug = (id) => {\r\n    if (!this.state.posts) return \"\";\r\n    const url =\r\n      \"posts/\" + this.state.posts.filter((post) => post.id === id)[0].slug;\r\n    if (url) return url;\r\n    return \"\";\r\n  };\r\n\r\n  toggleAccordion = (cl) => {\r\n    const { dataClasses } = this.state;\r\n    let newClasses = dataClasses;\r\n\r\n    if (newClasses[cl] === cl) {\r\n      newClasses[cl] = \"data\";\r\n    } else {\r\n      newClasses = { data1: \"data\", data2: \"data\", data3: \"data\" };\r\n      newClasses[cl] = cl;\r\n    }\r\n\r\n    this.setState({ dataClasses: newClasses });\r\n  };\r\n\r\n  renderChevron = (dcl) => {\r\n    const { dataClasses } = this.state;\r\n    if (dataClasses[dcl] === dcl) {\r\n      return <i className=\"fas fa-chevron-up\"></i>;\r\n    }\r\n\r\n    return <i className=\"fas fa-chevron-down\"></i>;\r\n  };\r\n\r\n  render() {\r\n    const { currentUser, posts, dataClasses } = this.state;\r\n\r\n    let currentUserPosts;\r\n    let topPost = {};\r\n    if (posts) {\r\n      currentUserPosts = posts.filter(\r\n        (post) => post.author === this.state.currentUserId\r\n      );\r\n\r\n      topPost = currentUserPosts.sort((p1, p2) => p1.rating - p2.rating)[0];\r\n    }\r\n\r\n    return (\r\n      <DarkContext.Consumer>\r\n        {(darkContext) => (\r\n          <div className=\"dashboard\">\r\n            {currentUser[\"id\"] && (\r\n              <UserInfo\r\n                darkCnxt={darkContext}\r\n                currentUser={currentUser}\r\n                topPost={topPost}\r\n              />\r\n            )}\r\n            <div\r\n              className={\r\n                darkContext.darkMode\r\n                  ? \"posts-reacted dark-page-shadow bg-dark text-light\"\r\n                  : \"posts-reacted border bg-light\"\r\n              }\r\n            >\r\n              <div className=\"accordion\">\r\n                <button\r\n                  className=\"btn btn-dark\"\r\n                  onClick={() => this.toggleAccordion(\"data1\")}\r\n                >\r\n                  <span>posts liked</span>\r\n                  {this.renderChevron(\"data1\")}\r\n                </button>\r\n                <div className={dataClasses.data1}>\r\n                  {currentUser.liked ? (\r\n                    <React.Fragment>\r\n                      {currentUser.liked.map((i, id) => (\r\n                        <p key={id}>\r\n                          <i className=\"fas fa-thumbs-up\"></i> <span>|</span>\r\n                          <Link to={this.getPostSlug(i)}>\r\n                            {\" \"}\r\n                            {this.renderPostById(i)}\r\n                          </Link>\r\n                        </p>\r\n                      ))}\r\n                    </React.Fragment>\r\n                  ) : (\r\n                    \"\"\r\n                  )}\r\n                </div>\r\n              </div>\r\n              <div className=\"accordion\">\r\n                <button\r\n                  className=\"btn btn-dark\"\r\n                  onClick={() => this.toggleAccordion(\"data2\")}\r\n                >\r\n                  <span>posts disliked</span>\r\n                  {this.renderChevron(\"data2\")}\r\n                </button>\r\n                <div className={dataClasses.data2}>\r\n                  {currentUser.disliked ? (\r\n                    <React.Fragment>\r\n                      {currentUser.disliked.map((i, id) => (\r\n                        <p key={id}>\r\n                          <i className=\"fas fa-thumbs-down\"></i> <span>|</span>\r\n                          <Link to={this.getPostSlug(i)}>\r\n                            {\" \"}\r\n                            {this.renderPostById(i)}\r\n                          </Link>\r\n                        </p>\r\n                      ))}\r\n                    </React.Fragment>\r\n                  ) : (\r\n                    \"\"\r\n                  )}\r\n                </div>\r\n              </div>\r\n              <div className=\"accordion\">\r\n                <button\r\n                  className=\"btn btn-dark\"\r\n                  onClick={() => this.toggleAccordion(\"data3\")}\r\n                >\r\n                  <span>posts bookmarked</span>\r\n                  {this.renderChevron(\"data3\")}\r\n                </button>\r\n                <div className={dataClasses.data3}>\r\n                  {currentUser.bookmarked ? (\r\n                    <React.Fragment>\r\n                      {currentUser.bookmarked.map((i, id) => (\r\n                        <p key={id}>\r\n                          <i className=\"fas fa-bookmark\"></i> <span>|</span>\r\n                          <Link to={this.getPostSlug(i)}>\r\n                            {\" \"}\r\n                            {this.renderPostById(i)}\r\n                          </Link>\r\n                        </p>\r\n                      ))}\r\n                    </React.Fragment>\r\n                  ) : (\r\n                    \"\"\r\n                  )}\r\n                </div>\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"user-posts\">\r\n              <div className=\"manage-user-posts\">\r\n                <Link to=\"/create-post\">\r\n                  Post <i className=\"fas fa-plus-square\"></i> <span>|</span>\r\n                </Link>\r\n              </div>\r\n              <UserPostsWrapper\r\n                toggleShowSearchBar={this.props.toggleShowSearchBar}\r\n                userPosts={currentUserPosts}\r\n              ></UserPostsWrapper>\r\n            </div>\r\n          </div>\r\n        )}\r\n      </DarkContext.Consumer>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\n\r\nexport default class AdminPage extends Component {\r\n  render() {\r\n    return <div>adminpage</div>;\r\n  }\r\n}\r\n","import Header from \"./components/content/header\";\r\nimport Footer from \"./components/content/footer\";\r\nimport Body from \"./components/content/body\";\r\nimport {\r\n  Route,\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Redirect,\r\n} from \"react-router-dom\";\r\n\r\nimport React, { Component } from \"react\";\r\nimport RegisterForm from \"./components/actions/registerForm\";\r\nimport LoginForm from \"./components/actions/loginForm\";\r\nimport Logout from \"./components/actions/logout\";\r\nimport SearchPage from \"./components/content/searchPage\";\r\nimport CreatePost from \"./components/actions/createPost\";\r\n\r\nimport UserContext from \"./context/userContext\";\r\nimport DarkContext from \"./context/darkMode\";\r\n\r\nimport apiURL from \"./apiUrl\";\r\nimport axios from \"axios\";\r\nimport SearchBar from \"./components/actions/searchBar\";\r\nimport PostDetailWrapper from \"./components/content/postDetailWrapper\";\r\nimport NotFoundPage from \"./components/content/notFoundPage\";\r\nimport UpdatePost from \"./components/actions/updatePost\";\r\nimport DeletePost from \"./components/actions/deletePost\";\r\nimport Dashboard from \"./components/content/dashboard\";\r\nimport axiosInstance from \"./baseAxios\";\r\nimport AdminPage from \"./components/admin/adminPage\";\r\n\r\nexport default class App extends Component {\r\n  state = {\r\n    currentUser: { name: \"\" },\r\n    users: [],\r\n    darkMode: false,\r\n    showSearchBar: true,\r\n  };\r\n\r\n  handleLoggedIn = (username) => {\r\n    const user = { name: username };\r\n    this.setState({ currentUser: user });\r\n  };\r\n\r\n  componentDidMount() {\r\n    console.log(axiosInstance.defaults.headers[\"Authorization\"]);\r\n    const refreshToken = localStorage.getItem(\"refresh_token\");\r\n    if (refreshToken === \"undefined\" || refreshToken === null) {\r\n      localStorage.removeItem(\"currentUser\");\r\n    }\r\n\r\n    axios\r\n      .get(apiURL + \"user/list/\")\r\n      .then((res) => this.setState({ users: res.data }));\r\n\r\n    if (18.5 < new Date().getHours() || new Date().getHours() < 7) {\r\n      console.log(\"Going Dark\");\r\n      this.setState({ darkMode: true });\r\n      this.makePageDark();\r\n    }\r\n  }\r\n\r\n  getAuthorById = (pk) => {\r\n    if (pk) {\r\n      const userName = this.state.users.find((user) => user.id === pk)\r\n        ? this.state.users.find((user) => user.id === pk).username\r\n        : \"Anonymous\";\r\n      return userName;\r\n    }\r\n  };\r\n\r\n  toggleDarkMode = () => {\r\n    this.setState({ darkMode: !this.state.darkMode });\r\n    this.makePageDark();\r\n  };\r\n\r\n  toggleShowSearchBar = (boolInp) => {\r\n    this.setState({ showSearchBar: boolInp });\r\n  };\r\n\r\n  makePageDark = () => {\r\n    document.querySelector(\"html\").className = !this.state.darkMode\r\n      ? \"dark-page-bg\"\r\n      : \"\";\r\n\r\n    document.querySelector(\"body\").className = !this.state.darkMode\r\n      ? \"dark-page-bg\"\r\n      : \"\";\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <DarkContext.Provider\r\n        value={{\r\n          darkMode: this.state.darkMode,\r\n          toggleDarkMode: this.toggleDarkMode,\r\n          background: \"dark-bg\",\r\n        }}\r\n      >\r\n        <UserContext.Provider\r\n          value={{\r\n            currentUser: this.state.currentUser,\r\n            onLogIn: this.handleLoggedIn,\r\n            getAuthor: this.getAuthorById,\r\n          }}\r\n        >\r\n          <Router>\r\n            <Header />\r\n            {this.state.showSearchBar ? <SearchBar /> : \"\"}\r\n            <Switch>\r\n              <PrivateAdminRoute\r\n                path=\"/admin\"\r\n                toggleShowSearchBar={this.toggleShowSearchBar}\r\n                users={this.state.users}\r\n                component={AdminPage}\r\n              />\r\n\r\n              <IsAuthenticatedRoute path=\"/search\" component={SearchPage} />\r\n              <IsAuthenticatedRoute\r\n                path=\"/posts/:slug\"\r\n                toggleShowSearchBar={this.toggleShowSearchBar}\r\n                component={PostDetailWrapper}\r\n              />\r\n              <IsAuthenticatedRoute\r\n                path=\"/update-post/:slug\"\r\n                toggleShowSearchBar={this.toggleShowSearchBar}\r\n                users={this.state.users}\r\n                component={UpdatePost}\r\n              />\r\n              <IsAuthenticatedRoute\r\n                path=\"/delete-post/:slug\"\r\n                toggleShowSearchBar={this.toggleShowSearchBar}\r\n                users={this.state.users}\r\n                component={DeletePost}\r\n              />\r\n              <IsAuthenticatedRoute\r\n                path=\"/create-post\"\r\n                toggleShowSearchBar={this.toggleShowSearchBar}\r\n                users={this.state.users}\r\n                component={CreatePost}\r\n              />\r\n              <Route\r\n                path=\"/login\"\r\n                render={(props) => (\r\n                  <LoginForm\r\n                    toggleShowSearchBar={this.toggleShowSearchBar}\r\n                    {...props}\r\n                  />\r\n                )}\r\n              />\r\n              <Route\r\n                path=\"/register\"\r\n                render={(props) => (\r\n                  <RegisterForm\r\n                    toggleShowSearchBar={this.toggleShowSearchBar}\r\n                    {...props}\r\n                  />\r\n                )}\r\n              />\r\n              <IsAuthenticatedRoute\r\n                path=\"/logout\"\r\n                toggleShowSearchBar={this.toggleShowSearchBar}\r\n                component={Logout}\r\n              />\r\n              <IsAuthenticatedRoute\r\n                exact\r\n                path=\"/dashboard\"\r\n                toggleShowSearchBar={this.toggleShowSearchBar}\r\n                component={Dashboard}\r\n              />\r\n              <IsAuthenticatedRoute\r\n                exact\r\n                path=\"/\"\r\n                toggleShowSearchBar={this.toggleShowSearchBar}\r\n                component={Body}\r\n              />\r\n              <Route path=\"*\">\r\n                <NotFoundPage toggleShowSearchBar={this.toggleShowSearchBar} />\r\n              </Route>\r\n            </Switch>\r\n            <Footer />\r\n          </Router>\r\n        </UserContext.Provider>\r\n      </DarkContext.Provider>\r\n    );\r\n  }\r\n}\r\n\r\nconst IsAuthenticatedRoute = ({\r\n  component: Component,\r\n  toggleShowSearchBar,\r\n  users,\r\n  ...rest\r\n}) => {\r\n  // Add your own authentication on the below line.\r\n\r\n  const refreshToken =\r\n    localStorage.getItem(\"refresh_token\") === \"undefined\" ||\r\n    localStorage.getItem(\"refresh_token\") === null\r\n      ? false\r\n      : true;\r\n\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={(props) =>\r\n        refreshToken ? (\r\n          <Component\r\n            {...props}\r\n            users={users}\r\n            toggleShowSearchBar={toggleShowSearchBar}\r\n          />\r\n        ) : (\r\n          <Redirect\r\n            to={{ pathname: \"/login\", state: { from: props.location } }}\r\n          />\r\n        )\r\n      }\r\n    />\r\n  );\r\n};\r\n\r\nconst PrivateAdminRoute = ({\r\n  component: Component,\r\n  toggleShowSearchBar,\r\n  users,\r\n  ...rest\r\n}) => {\r\n  // Add your own authentication on the below line.\r\n\r\n  const refreshToken =\r\n    localStorage.getItem(\"refresh_token\") === \"undefined\" ||\r\n    localStorage.getItem(\"refresh_token\") === null\r\n      ? false\r\n      : true;\r\n  const accessToken = localStorage.getItem(\"access_token\");\r\n\r\n  if (!accessToken) return <Redirect to={\"/\"} />;\r\n\r\n  const currentUserId = JSON.parse(atob(accessToken.split(\".\")[1])).user_id;\r\n\r\n  const user = users.filter((user) => user.id === currentUserId)[0];\r\n\r\n  if (user) {\r\n    return (\r\n      <Route\r\n        {...rest}\r\n        render={(props) =>\r\n          refreshToken && user.is_superuser ? (\r\n            <Component\r\n              {...props}\r\n              users={users}\r\n              toggleShowSearchBar={toggleShowSearchBar}\r\n            />\r\n          ) : (\r\n            <Redirect\r\n              to={{ pathname: \"/not-allowed\", state: { from: props.location } }}\r\n            />\r\n          )\r\n        }\r\n      />\r\n    );\r\n  }\r\n  return null;\r\n};\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport reportWebVitals from \"./reportWebVitals\";\r\nimport { Router } from \"react-router-dom\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}