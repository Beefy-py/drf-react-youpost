{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\kenny\\\\Projects\\\\djangotutorials\\\\drf_react_project\\\\react_frontend\\\\blogapi\\\\src\\\\components\\\\content\\\\userPostsWrapper.jsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport axios from \"axios\";\nimport UserPosts from \"./userPosts\";\nimport PostLoadingComponent from \"../actions/postLoading\";\nimport { useState, useEffect, useContext } from \"react\";\nimport apiURL from \"../../apiUrl\";\nimport DarkContext from \"./../../context/darkMode\";\nimport { useHistory } from \"react-router-dom\";\nimport axiosInstance from \"./../../baseAxios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst UserPostsWrapper = ({\n  toggleShowSearchBar\n}) => {\n  _s();\n\n  const darkContext = useContext(DarkContext);\n  let history = useHistory();\n  const PostLoading = PostLoadingComponent(UserPosts);\n  const [appState, setAppState] = useState({\n    loading: false,\n    posts: null\n  });\n  const currentUserId = JSON.parse(atob(localStorage.getItem(\"access_token\").split(\".\")[1])).user_id;\n  useEffect(() => {\n    toggleShowSearchBar(false);\n    setAppState({\n      loading: true\n    });\n    axiosInstance.get().then(res => {\n      setAppState({\n        loading: false,\n        posts: res.data.filter(post => post.author === currentUserId)\n      });\n    });\n  }, [setAppState]);\n  return /*#__PURE__*/_jsxDEV(PostLoading, {\n    rows: 1,\n    isLoading: appState.loading,\n    posts: appState.posts\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n};\n\n_s(UserPostsWrapper, \"h+u9UCMn6c7YEg3AJyQ0N5Cr+vw=\", false, function () {\n  return [useHistory];\n});\n\n_c = UserPostsWrapper;\nexport default UserPostsWrapper;\n\nvar _c;\n\n$RefreshReg$(_c, \"UserPostsWrapper\");","map":{"version":3,"sources":["C:/Users/kenny/Projects/djangotutorials/drf_react_project/react_frontend/blogapi/src/components/content/userPostsWrapper.jsx"],"names":["React","axios","UserPosts","PostLoadingComponent","useState","useEffect","useContext","apiURL","DarkContext","useHistory","axiosInstance","UserPostsWrapper","toggleShowSearchBar","darkContext","history","PostLoading","appState","setAppState","loading","posts","currentUserId","JSON","parse","atob","localStorage","getItem","split","user_id","get","then","res","data","filter","post","author"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,OAAOC,oBAAP,MAAiC,wBAAjC;AACA,SAASC,QAAT,EAAmBC,SAAnB,EAA8BC,UAA9B,QAAgD,OAAhD;AACA,OAAOC,MAAP,MAAmB,cAAnB;AACA,OAAOC,WAAP,MAAwB,0BAAxB;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,OAAOC,aAAP,MAA0B,mBAA1B;;;AAEA,MAAMC,gBAAgB,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAA6B;AAAA;;AACpD,QAAMC,WAAW,GAAGP,UAAU,CAACE,WAAD,CAA9B;AACA,MAAIM,OAAO,GAAGL,UAAU,EAAxB;AAEA,QAAMM,WAAW,GAAGZ,oBAAoB,CAACD,SAAD,CAAxC;AACA,QAAM,CAACc,QAAD,EAAWC,WAAX,IAA0Bb,QAAQ,CAAC;AAAEc,IAAAA,OAAO,EAAE,KAAX;AAAkBC,IAAAA,KAAK,EAAE;AAAzB,GAAD,CAAxC;AAEA,QAAMC,aAAa,GAAGC,IAAI,CAACC,KAAL,CACpBC,IAAI,CAACC,YAAY,CAACC,OAAb,CAAqB,cAArB,EAAqCC,KAArC,CAA2C,GAA3C,EAAgD,CAAhD,CAAD,CADgB,EAEpBC,OAFF;AAIAtB,EAAAA,SAAS,CAAC,MAAM;AACdO,IAAAA,mBAAmB,CAAC,KAAD,CAAnB;AAEAK,IAAAA,WAAW,CAAC;AAAEC,MAAAA,OAAO,EAAE;AAAX,KAAD,CAAX;AACAR,IAAAA,aAAa,CAACkB,GAAd,GAAoBC,IAApB,CAA0BC,GAAD,IAAS;AAChCb,MAAAA,WAAW,CAAC;AACVC,QAAAA,OAAO,EAAE,KADC;AAEVC,QAAAA,KAAK,EAAEW,GAAG,CAACC,IAAJ,CAASC,MAAT,CAAiBC,IAAD,IAAUA,IAAI,CAACC,MAAL,KAAgBd,aAA1C;AAFG,OAAD,CAAX;AAID,KALD;AAMD,GAVQ,EAUN,CAACH,WAAD,CAVM,CAAT;AAYA,sBACE,QAAC,WAAD;AAAa,IAAA,IAAI,EAAE,CAAnB;AAAsB,IAAA,SAAS,EAAED,QAAQ,CAACE,OAA1C;AAAmD,IAAA,KAAK,EAAEF,QAAQ,CAACG;AAAnE;AAAA;AAAA;AAAA;AAAA,UADF;AAGD,CA1BD;;GAAMR,gB;UAEUF,U;;;KAFVE,gB;AA4BN,eAAeA,gBAAf","sourcesContent":["import React from \"react\";\r\nimport axios from \"axios\";\r\nimport UserPosts from \"./userPosts\";\r\nimport PostLoadingComponent from \"../actions/postLoading\";\r\nimport { useState, useEffect, useContext } from \"react\";\r\nimport apiURL from \"../../apiUrl\";\r\nimport DarkContext from \"./../../context/darkMode\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport axiosInstance from \"./../../baseAxios\";\r\n\r\nconst UserPostsWrapper = ({ toggleShowSearchBar }) => {\r\n  const darkContext = useContext(DarkContext);\r\n  let history = useHistory();\r\n\r\n  const PostLoading = PostLoadingComponent(UserPosts);\r\n  const [appState, setAppState] = useState({ loading: false, posts: null });\r\n\r\n  const currentUserId = JSON.parse(\r\n    atob(localStorage.getItem(\"access_token\").split(\".\")[1])\r\n  ).user_id;\r\n\r\n  useEffect(() => {\r\n    toggleShowSearchBar(false);\r\n\r\n    setAppState({ loading: true });\r\n    axiosInstance.get().then((res) => {\r\n      setAppState({\r\n        loading: false,\r\n        posts: res.data.filter((post) => post.author === currentUserId),\r\n      });\r\n    });\r\n  }, [setAppState]);\r\n\r\n  return (\r\n    <PostLoading rows={1} isLoading={appState.loading} posts={appState.posts} />\r\n  );\r\n};\r\n\r\nexport default UserPostsWrapper;\r\n"]},"metadata":{},"sourceType":"module"}