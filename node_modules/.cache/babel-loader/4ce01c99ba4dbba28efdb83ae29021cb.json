{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\kenny\\\\Projects\\\\drf_react_youpost\\\\src\\\\components\\\\content\\\\dashboard.jsx\";\nimport React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport DarkContext from \"../../context/darkMode\";\nimport UserPostsWrapper from \"./userPostsWrapper\";\nimport axiosInstance from \"./../../baseAxios\";\nimport UserInfo from \"./userInfo\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class Dashboard extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      currentUserId: JSON.parse(atob(localStorage.getItem(\"access_token\").split(\".\")[1])).user_id,\n      currentUser: {},\n      posts: null,\n      dataClasses: {\n        data1: \"data\",\n        data2: \"data\",\n        data3: \"data\"\n      }\n    };\n\n    this.renderPostById = id => {\n      if (this.state.posts) {\n        const post = this.state.posts.filter(post => post.id === id)[0];\n        return post.title;\n      }\n    };\n\n    this.getPostSlug = id => {\n      if (!this.state.posts) return \"\";\n      const url = \"posts/\" + this.state.posts.filter(post => post.id === id)[0].slug;\n      if (url) return url;\n      return \"\";\n    };\n\n    this.toggleAccordion = cl => {\n      const {\n        dataClasses\n      } = this.state;\n      let newClasses = dataClasses;\n\n      if (newClasses[cl] === cl) {\n        newClasses[cl] = \"data\";\n      } else {\n        newClasses = {\n          data1: \"data\",\n          data2: \"data\",\n          data3: \"data\"\n        };\n        newClasses[cl] = cl;\n      }\n\n      this.setState({\n        dataClasses: newClasses\n      });\n    };\n\n    this.renderChevron = dcl => {\n      const {\n        dataClasses\n      } = this.state;\n\n      if (dataClasses[dcl] === dcl) {\n        return /*#__PURE__*/_jsxDEV(\"i\", {\n          className: \"fas fa-chevron-up\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 14\n        }, this);\n      }\n\n      return /*#__PURE__*/_jsxDEV(\"i\", {\n        className: \"fas fa-chevron-down\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 12\n      }, this);\n    };\n  }\n\n  componentDidMount() {\n    axiosInstance.get(\"user/list/\" + this.state.currentUserId).then(res => this.setState({\n      currentUser: res.data\n    }));\n    axiosInstance.get().then(res => this.setState({\n      posts: res.data\n    }));\n  }\n\n  render() {\n    const {\n      currentUser,\n      posts,\n      dataClasses\n    } = this.state;\n    let currentUserPosts;\n    let topPost = {};\n\n    if (posts) {\n      currentUserPosts = posts.filter(post => post.author === this.state.currentUserId);\n      topPost = currentUserPosts.sort((p1, p2) => p1.rating - p2.rating)[0];\n    }\n\n    return /*#__PURE__*/_jsxDEV(DarkContext.Consumer, {\n      children: darkContext => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"dashboard\",\n        children: [currentUser[\"id\"] && /*#__PURE__*/_jsxDEV(UserInfo, {\n          darkCnxt: darkContext,\n          currentUser: currentUser,\n          topPost: topPost\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: darkContext.darkMode ? \"posts-reacted dark-page-shadow bg-dark text-light\" : \"posts-reacted border bg-light\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"accordion\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"btn btn-dark\",\n              onClick: () => this.toggleAccordion(\"data1\"),\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                children: \"posts liked\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 99,\n                columnNumber: 19\n              }, this), this.renderChevron(\"data1\")]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 95,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: dataClasses.data1,\n              children: currentUser.liked ? /*#__PURE__*/_jsxDEV(React.Fragment, {\n                children: currentUser.liked.map((i, id) => /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                    className: \"fas fa-thumbs-up\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 107,\n                    columnNumber: 27\n                  }, this), \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n                    children: \"|\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 107,\n                    columnNumber: 64\n                  }, this), /*#__PURE__*/_jsxDEV(Link, {\n                    to: this.getPostSlug(i),\n                    children: [\" \", this.renderPostById(i)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 108,\n                    columnNumber: 27\n                  }, this)]\n                }, id, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 106,\n                  columnNumber: 25\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 104,\n                columnNumber: 21\n              }, this) : \"\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 102,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"accordion\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"btn btn-dark\",\n              onClick: () => this.toggleAccordion(\"data2\"),\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                children: \"posts disliked\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 125,\n                columnNumber: 19\n              }, this), this.renderChevron(\"data2\")]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 121,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: dataClasses.data2,\n              children: currentUser.disliked ? /*#__PURE__*/_jsxDEV(React.Fragment, {\n                children: currentUser.disliked.map((i, id) => /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                    className: \"fas fa-thumbs-down\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 133,\n                    columnNumber: 27\n                  }, this), \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n                    children: \"|\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 133,\n                    columnNumber: 66\n                  }, this), /*#__PURE__*/_jsxDEV(Link, {\n                    to: this.getPostSlug(i),\n                    children: [\" \", this.renderPostById(i)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 134,\n                    columnNumber: 27\n                  }, this)]\n                }, id, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 132,\n                  columnNumber: 25\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 130,\n                columnNumber: 21\n              }, this) : \"\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 128,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"accordion\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"btn btn-dark\",\n              onClick: () => this.toggleAccordion(\"data3\"),\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                children: \"posts bookmarked\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 151,\n                columnNumber: 19\n              }, this), this.renderChevron(\"data3\")]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 147,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: dataClasses.data3,\n              children: currentUser.bookmarked ? /*#__PURE__*/_jsxDEV(React.Fragment, {\n                children: currentUser.bookmarked.map((i, id) => /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                    className: \"fas fa-bookmark\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 159,\n                    columnNumber: 27\n                  }, this), \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n                    children: \"|\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 159,\n                    columnNumber: 63\n                  }, this), /*#__PURE__*/_jsxDEV(Link, {\n                    to: this.getPostSlug(i),\n                    children: [\" \", this.renderPostById(i)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 160,\n                    columnNumber: 27\n                  }, this)]\n                }, id, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 158,\n                  columnNumber: 25\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 156,\n                columnNumber: 21\n              }, this) : \"\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 154,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 146,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"user-posts\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"manage-user-posts\",\n            children: /*#__PURE__*/_jsxDEV(Link, {\n              to: \"/create-post\",\n              children: [\"Post \", /*#__PURE__*/_jsxDEV(\"i\", {\n                className: \"fas fa-plus-square\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 177,\n                columnNumber: 24\n              }, this), \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n                children: \"|\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 177,\n                columnNumber: 63\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 176,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 175,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(UserPostsWrapper, {\n            toggleShowSearchBar: this.props.toggleShowSearchBar,\n            userPosts: currentUserPosts\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 180,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["C:/Users/kenny/Projects/drf_react_youpost/src/components/content/dashboard.jsx"],"names":["React","Component","Link","DarkContext","UserPostsWrapper","axiosInstance","UserInfo","Dashboard","state","currentUserId","JSON","parse","atob","localStorage","getItem","split","user_id","currentUser","posts","dataClasses","data1","data2","data3","renderPostById","id","post","filter","title","getPostSlug","url","slug","toggleAccordion","cl","newClasses","setState","renderChevron","dcl","componentDidMount","get","then","res","data","render","currentUserPosts","topPost","author","sort","p1","p2","rating","darkContext","darkMode","liked","map","i","disliked","bookmarked","props","toggleShowSearchBar"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport DarkContext from \"../../context/darkMode\";\r\nimport UserPostsWrapper from \"./userPostsWrapper\";\r\nimport axiosInstance from \"./../../baseAxios\";\r\nimport UserInfo from \"./userInfo\";\r\n\r\nexport default class Dashboard extends Component {\r\n  state = {\r\n    currentUserId: JSON.parse(\r\n      atob(localStorage.getItem(\"access_token\").split(\".\")[1])\r\n    ).user_id,\r\n    currentUser: {},\r\n    posts: null,\r\n    dataClasses: { data1: \"data\", data2: \"data\", data3: \"data\" },\r\n  };\r\n\r\n  componentDidMount() {\r\n    axiosInstance\r\n      .get(\"user/list/\" + this.state.currentUserId)\r\n      .then((res) => this.setState({ currentUser: res.data }));\r\n    axiosInstance.get().then((res) => this.setState({ posts: res.data }));\r\n  }\r\n\r\n  renderPostById = (id) => {\r\n    if (this.state.posts) {\r\n      const post = this.state.posts.filter((post) => post.id === id)[0];\r\n      return post.title;\r\n    }\r\n  };\r\n\r\n  getPostSlug = (id) => {\r\n    if (!this.state.posts) return \"\";\r\n    const url =\r\n      \"posts/\" + this.state.posts.filter((post) => post.id === id)[0].slug;\r\n    if (url) return url;\r\n    return \"\";\r\n  };\r\n\r\n  toggleAccordion = (cl) => {\r\n    const { dataClasses } = this.state;\r\n    let newClasses = dataClasses;\r\n\r\n    if (newClasses[cl] === cl) {\r\n      newClasses[cl] = \"data\";\r\n    } else {\r\n      newClasses = { data1: \"data\", data2: \"data\", data3: \"data\" };\r\n      newClasses[cl] = cl;\r\n    }\r\n\r\n    this.setState({ dataClasses: newClasses });\r\n  };\r\n\r\n  renderChevron = (dcl) => {\r\n    const { dataClasses } = this.state;\r\n    if (dataClasses[dcl] === dcl) {\r\n      return <i className=\"fas fa-chevron-up\"></i>;\r\n    }\r\n\r\n    return <i className=\"fas fa-chevron-down\"></i>;\r\n  };\r\n\r\n  render() {\r\n    const { currentUser, posts, dataClasses } = this.state;\r\n\r\n    let currentUserPosts;\r\n    let topPost = {};\r\n    if (posts) {\r\n      currentUserPosts = posts.filter(\r\n        (post) => post.author === this.state.currentUserId\r\n      );\r\n\r\n      topPost = currentUserPosts.sort((p1, p2) => p1.rating - p2.rating)[0];\r\n    }\r\n\r\n    return (\r\n      <DarkContext.Consumer>\r\n        {(darkContext) => (\r\n          <div className=\"dashboard\">\r\n            {currentUser[\"id\"] && (\r\n              <UserInfo\r\n                darkCnxt={darkContext}\r\n                currentUser={currentUser}\r\n                topPost={topPost}\r\n              />\r\n            )}\r\n            <div\r\n              className={\r\n                darkContext.darkMode\r\n                  ? \"posts-reacted dark-page-shadow bg-dark text-light\"\r\n                  : \"posts-reacted border bg-light\"\r\n              }\r\n            >\r\n              <div className=\"accordion\">\r\n                <button\r\n                  className=\"btn btn-dark\"\r\n                  onClick={() => this.toggleAccordion(\"data1\")}\r\n                >\r\n                  <span>posts liked</span>\r\n                  {this.renderChevron(\"data1\")}\r\n                </button>\r\n                <div className={dataClasses.data1}>\r\n                  {currentUser.liked ? (\r\n                    <React.Fragment>\r\n                      {currentUser.liked.map((i, id) => (\r\n                        <p key={id}>\r\n                          <i className=\"fas fa-thumbs-up\"></i> <span>|</span>\r\n                          <Link to={this.getPostSlug(i)}>\r\n                            {\" \"}\r\n                            {this.renderPostById(i)}\r\n                          </Link>\r\n                        </p>\r\n                      ))}\r\n                    </React.Fragment>\r\n                  ) : (\r\n                    \"\"\r\n                  )}\r\n                </div>\r\n              </div>\r\n              <div className=\"accordion\">\r\n                <button\r\n                  className=\"btn btn-dark\"\r\n                  onClick={() => this.toggleAccordion(\"data2\")}\r\n                >\r\n                  <span>posts disliked</span>\r\n                  {this.renderChevron(\"data2\")}\r\n                </button>\r\n                <div className={dataClasses.data2}>\r\n                  {currentUser.disliked ? (\r\n                    <React.Fragment>\r\n                      {currentUser.disliked.map((i, id) => (\r\n                        <p key={id}>\r\n                          <i className=\"fas fa-thumbs-down\"></i> <span>|</span>\r\n                          <Link to={this.getPostSlug(i)}>\r\n                            {\" \"}\r\n                            {this.renderPostById(i)}\r\n                          </Link>\r\n                        </p>\r\n                      ))}\r\n                    </React.Fragment>\r\n                  ) : (\r\n                    \"\"\r\n                  )}\r\n                </div>\r\n              </div>\r\n              <div className=\"accordion\">\r\n                <button\r\n                  className=\"btn btn-dark\"\r\n                  onClick={() => this.toggleAccordion(\"data3\")}\r\n                >\r\n                  <span>posts bookmarked</span>\r\n                  {this.renderChevron(\"data3\")}\r\n                </button>\r\n                <div className={dataClasses.data3}>\r\n                  {currentUser.bookmarked ? (\r\n                    <React.Fragment>\r\n                      {currentUser.bookmarked.map((i, id) => (\r\n                        <p key={id}>\r\n                          <i className=\"fas fa-bookmark\"></i> <span>|</span>\r\n                          <Link to={this.getPostSlug(i)}>\r\n                            {\" \"}\r\n                            {this.renderPostById(i)}\r\n                          </Link>\r\n                        </p>\r\n                      ))}\r\n                    </React.Fragment>\r\n                  ) : (\r\n                    \"\"\r\n                  )}\r\n                </div>\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"user-posts\">\r\n              <div className=\"manage-user-posts\">\r\n                <Link to=\"/create-post\">\r\n                  Post <i className=\"fas fa-plus-square\"></i> <span>|</span>\r\n                </Link>\r\n              </div>\r\n              <UserPostsWrapper\r\n                toggleShowSearchBar={this.props.toggleShowSearchBar}\r\n                userPosts={currentUserPosts}\r\n              ></UserPostsWrapper>\r\n            </div>\r\n          </div>\r\n        )}\r\n      </DarkContext.Consumer>\r\n    );\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}