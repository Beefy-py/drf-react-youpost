{"ast":null,"code":"import _regeneratorRuntime from\"C:/Users/kenny/Projects/DRF_React_YouPost/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"C:/Users/kenny/Projects/DRF_React_YouPost/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import axios from\"axios\";axios.defaults.xsrfCookieName='csrftoken';axios.defaults.xsrfHeaderName='X-CSRFToken';var baseURL=\"http://localhost:8000/api/\";var axiosInstance=axios.create({baseURL:baseURL,timeout:5000,headers:{Authorization:localStorage.getItem(\"access_token\")?\"JWT \"+localStorage.getItem(\"access_token\"):null,\"Content-Type\":\"application/json\",accept:\"application/json\"}});axiosInstance.interceptors.response.use(function(response){return response;},/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(error){var originalRequest,refreshToken,tokenParts,now;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:originalRequest=error.config;if(!(typeof error.response===\"undefined\")){_context.next=4;break;}alert(\"A server/network error occurred. \"+\"Looks like CORS might be the problem. \"+\"Sorry about this - we will get it fixed shortly.\");return _context.abrupt(\"return\",Promise.reject(error));case 4:if(!(error.response.status===401&&originalRequest.url===baseURL+\"token/refresh/\")){_context.next=7;break;}window.location.href=\"/login/\";return _context.abrupt(\"return\",Promise.reject(error));case 7:if(!(error.response.data.code===\"token_not_valid\"&&error.response.status===401&&error.response.statusText===\"Unauthorized\")){_context.next=23;break;}refreshToken=localStorage.getItem(\"refresh_token\");if(!(refreshToken!==\"undefined\")){_context.next=21;break;}if(refreshToken===null)window.location.reload();tokenParts=JSON.parse(atob(refreshToken.split(\".\")[1]));// exp date in token is expressed in seconds, while now() returns milliseconds:\nnow=Math.ceil(Date.now()/1000);// console.log(tokenParts.exp);\n// console.log(tokenParts);\nif(!(tokenParts.exp>now)){_context.next=17;break;}return _context.abrupt(\"return\",axiosInstance.post(\"/token/refresh\",{refresh:refreshToken}).then(function(response){//console.log(response.data);\nlocalStorage.setItem(\"access_token\",response.data.access);localStorage.setItem(\"refresh_token\",response.data.refresh);axiosInstance.defaults.headers[\"Authorization\"]=\"JWT \"+response.data.access;originalRequest.headers[\"Authorization\"]=\"JWT \"+response.data.access;//console.log(\"create new token\");\n//console.log(\"create new token\");\nreturn axiosInstance(originalRequest);}));case 17:console.log(\"Refresh token is expired\",tokenParts.exp,now);window.location.href=\"/login/\";case 19:_context.next=23;break;case 21:window.location.href=\"/login/\";console.log(\"Refresh token not available.\");case 23:return _context.abrupt(\"return\",Promise.reject(error));case 24:case\"end\":return _context.stop();}}},_callee);}));return function(_x){return _ref.apply(this,arguments);};}());export default axiosInstance;","map":{"version":3,"sources":["C:/Users/kenny/Projects/drf_react_youpost/src/baseAxios.js"],"names":["axios","defaults","xsrfCookieName","xsrfHeaderName","baseURL","axiosInstance","create","timeout","headers","Authorization","localStorage","getItem","accept","interceptors","response","use","error","originalRequest","config","alert","Promise","reject","status","url","window","location","href","data","code","statusText","refreshToken","reload","tokenParts","JSON","parse","atob","split","now","Math","ceil","Date","exp","post","refresh","then","setItem","access","console","log"],"mappings":"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","sourcesContent":["import axios from \"axios\";\r\n\r\naxios.defaults.xsrfCookieName = 'csrftoken';\r\naxios.defaults.xsrfHeaderName = 'X-CSRFToken';\r\n\r\nconst baseURL = \"http://localhost:8000/api/\";\r\n\r\nconst axiosInstance = axios.create({\r\n  baseURL: baseURL,\r\n  timeout: 5000,\r\n  headers: {\r\n    Authorization: localStorage.getItem(\"access_token\")\r\n      ? \"JWT \" + localStorage.getItem(\"access_token\")\r\n      : null,\r\n    \"Content-Type\": \"application/json\",\r\n    accept: \"application/json\",\r\n  },\r\n});\r\n\r\naxiosInstance.interceptors.response.use(\r\n  (response) => {\r\n    return response;\r\n  },\r\n  async function (error) {\r\n    const originalRequest = error.config;\r\n\r\n    if (typeof error.response === \"undefined\") {\r\n      alert(\r\n        \"A server/network error occurred. \" +\r\n          \"Looks like CORS might be the problem. \" +\r\n          \"Sorry about this - we will get it fixed shortly.\"\r\n      );\r\n      return Promise.reject(error);\r\n    }\r\n\r\n    if (\r\n      error.response.status === 401 &&\r\n      originalRequest.url === baseURL + \"token/refresh/\"\r\n    ) {\r\n      window.location.href = \"/login/\";\r\n      return Promise.reject(error);\r\n    }\r\n\r\n    if (\r\n      error.response.data.code === \"token_not_valid\" &&\r\n      error.response.status === 401 &&\r\n      error.response.statusText === \"Unauthorized\"\r\n    ) {\r\n      const refreshToken = localStorage.getItem(\"refresh_token\");\r\n\r\n      if (refreshToken !== \"undefined\") {\r\n        if (refreshToken === null) window.location.reload();\r\n        const tokenParts = JSON.parse(atob(refreshToken.split(\".\")[1]));\r\n        // exp date in token is expressed in seconds, while now() returns milliseconds:\r\n        const now = Math.ceil(Date.now() / 1000);\r\n        // console.log(tokenParts.exp);\r\n        // console.log(tokenParts);\r\n\r\n        if (tokenParts.exp > now) {\r\n          return axiosInstance\r\n            .post(\"/token/refresh\", { refresh: refreshToken })\r\n            .then((response) => {\r\n              //console.log(response.data);\r\n\r\n              localStorage.setItem(\"access_token\", response.data.access);\r\n              localStorage.setItem(\"refresh_token\", response.data.refresh);\r\n\r\n              axiosInstance.defaults.headers[\"Authorization\"] =\r\n                \"JWT \" + response.data.access;\r\n              originalRequest.headers[\"Authorization\"] =\r\n                \"JWT \" + response.data.access;\r\n\r\n              //console.log(\"create new token\");\r\n\r\n              return axiosInstance(originalRequest);\r\n            });\r\n        } else {\r\n          console.log(\"Refresh token is expired\", tokenParts.exp, now);\r\n          window.location.href = \"/login/\";\r\n        }\r\n      } else {\r\n        window.location.href = \"/login/\";\r\n        console.log(\"Refresh token not available.\");\r\n      }\r\n    }\r\n\r\n    // specific error handling done elsewhere\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\nexport default axiosInstance;\r\n"]},"metadata":{},"sourceType":"module"}