{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\kenny\\\\Projects\\\\djangotutorials\\\\drf_react_project\\\\react_frontend\\\\blogapi\\\\src\\\\components\\\\content\\\\userPosts.jsx\";\nimport React, { Component } from \"react\";\nimport { Link, Redirect } from \"react-router-dom\";\nimport history from \"./../../history\";\nimport DarkContext from \"./../../context/darkMode\";\nimport ReactPaginate from \"react-paginate\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class UserPosts extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      offset: 0,\n      data: [],\n      perPage: 12,\n      currentPage: 0\n    };\n\n    this.handlePageClick = e => {\n      const selectedPage = e.selected;\n      const offset = selectedPage * this.state.perPage;\n      this.setState({\n        currentPage: selectedPage,\n        offset: offset\n      }, () => this.getUserPosts());\n      window.scrollTo(0, 0);\n    };\n  }\n\n  componentDidMount() {\n    if (this.props.posts) {\n      this.getUserPosts();\n    }\n  }\n\n  getUserPosts() {\n    const data = this.props.posts;\n    const slice = data.slice(this.state.offset, this.state.offset + this.state.perPage);\n    const postData = slice.map(post => {\n      return /*#__PURE__*/_jsxDEV(DarkContext.Consumer, {\n        children: darkContext => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: darkContext.darkMode ? \"user-post dark-page-shadow bg-dark\" : \"user-post border bg-light\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"title\",\n            children: /*#__PURE__*/_jsxDEV(Link, {\n              to: \"/posts/\" + post.slug,\n              className: darkContext.darkMode ? \"text-light\" : \"text-dark\",\n              children: post.title.length >= 20 ? post.title.substring(0, 20) + \"...\" : post.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 34,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"published\",\n            children: new Intl.DateTimeFormat(\"en-GB\", {\n              dateStyle: \"full\"\n            }).format(new Date(post.published))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"actions\",\n            children: [/*#__PURE__*/_jsxDEV(Link, {\n              to: \"/update-post/\" + post.slug,\n              children: /*#__PURE__*/_jsxDEV(\"i\", {\n                className: \"fas fa-wrench\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 50,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 49,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Link, {\n              to: \"/delete-post/\" + post.slug,\n              children: /*#__PURE__*/_jsxDEV(\"i\", {\n                className: \"fas fa-trash-alt\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 53,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 52,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 15\n          }, this)]\n        }, post.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 13\n        }, this)\n      }, post.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 9\n      }, this);\n    });\n    this.setState({\n      pageCount: Math.ceil(data.length / this.state.perPage),\n      postData\n    });\n  }\n\n  render() {\n    const {\n      posts\n    } = this.props;\n    return /*#__PURE__*/_jsxDEV(React.Fragment, {\n      children: [this.state.postData, \" \", /*#__PURE__*/_jsxDEV(ReactPaginate, {\n        previousLabel: \"previous\",\n        nextLabel: \"next\",\n        breakLabel: \"...\",\n        breakClassName: \"break-me\",\n        pageCount: this.state.pageCount,\n        marginPagesDisplayed: 3,\n        pageRangeDisplayed: 5,\n        onPageChange: this.handlePageClick,\n        containerClassName: \"pagination justify-content-center\",\n        pageClassName: \"page-item\",\n        pageLinkClassName: \"page-link\",\n        previousClassName: \"page-link\",\n        nextClassName: \"page-link\",\n        activeClassName: \"active\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["C:/Users/kenny/Projects/djangotutorials/drf_react_project/react_frontend/blogapi/src/components/content/userPosts.jsx"],"names":["React","Component","Link","Redirect","history","DarkContext","ReactPaginate","UserPosts","state","offset","data","perPage","currentPage","handlePageClick","e","selectedPage","selected","setState","getUserPosts","window","scrollTo","componentDidMount","props","posts","slice","postData","map","post","darkContext","darkMode","slug","title","length","substring","Intl","DateTimeFormat","dateStyle","format","Date","published","id","pageCount","Math","ceil","render"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport { Link, Redirect } from \"react-router-dom\";\r\nimport history from \"./../../history\";\r\nimport DarkContext from \"./../../context/darkMode\";\r\nimport ReactPaginate from \"react-paginate\";\r\n\r\nexport default class UserPosts extends Component {\r\n  state = { offset: 0, data: [], perPage: 12, currentPage: 0 };\r\n  componentDidMount() {\r\n    if (this.props.posts) {\r\n      this.getUserPosts();\r\n    }\r\n  }\r\n\r\n  getUserPosts() {\r\n    const data = this.props.posts;\r\n    const slice = data.slice(\r\n      this.state.offset,\r\n      this.state.offset + this.state.perPage\r\n    );\r\n    const postData = slice.map((post) => {\r\n      return (\r\n        <DarkContext.Consumer key={post.id}>\r\n          {(darkContext) => (\r\n            <div\r\n              key={post.id}\r\n              className={\r\n                darkContext.darkMode\r\n                  ? \"user-post dark-page-shadow bg-dark\"\r\n                  : \"user-post border bg-light\"\r\n              }\r\n            >\r\n              <div className=\"title\">\r\n                <Link\r\n                  to={\"/posts/\" + post.slug}\r\n                  className={darkContext.darkMode ? \"text-light\" : \"text-dark\"}\r\n                >\r\n                  {post.title.length >= 20\r\n                    ? post.title.substring(0, 20) + \"...\"\r\n                    : post.title}\r\n                </Link>\r\n              </div>\r\n              <div className=\"published\">\r\n                {new Intl.DateTimeFormat(\"en-GB\", {\r\n                  dateStyle: \"full\",\r\n                }).format(new Date(post.published))}\r\n              </div>\r\n              <div className=\"actions\">\r\n                <Link to={\"/update-post/\" + post.slug}>\r\n                  <i className=\"fas fa-wrench\"></i>\r\n                </Link>\r\n                <Link to={\"/delete-post/\" + post.slug}>\r\n                  <i className=\"fas fa-trash-alt\"></i>\r\n                </Link>\r\n              </div>\r\n            </div>\r\n          )}\r\n        </DarkContext.Consumer>\r\n      );\r\n    });\r\n\r\n    this.setState({\r\n      pageCount: Math.ceil(data.length / this.state.perPage),\r\n\r\n      postData,\r\n    });\r\n  }\r\n\r\n  handlePageClick = (e) => {\r\n    const selectedPage = e.selected;\r\n    const offset = selectedPage * this.state.perPage;\r\n\r\n    this.setState({ currentPage: selectedPage, offset: offset }, () =>\r\n      this.getUserPosts()\r\n    );\r\n\r\n    window.scrollTo(0, 0);\r\n  };\r\n\r\n  render() {\r\n    const { posts } = this.props;\r\n\r\n    return (\r\n      <React.Fragment>\r\n        {this.state.postData}{\" \"}\r\n        <ReactPaginate\r\n          previousLabel={\"previous\"}\r\n          nextLabel={\"next\"}\r\n          breakLabel={\"...\"}\r\n          breakClassName={\"break-me\"}\r\n          pageCount={this.state.pageCount}\r\n          marginPagesDisplayed={3}\r\n          pageRangeDisplayed={5}\r\n          onPageChange={this.handlePageClick}\r\n          containerClassName={\"pagination justify-content-center\"}\r\n          pageClassName={\"page-item\"}\r\n          pageLinkClassName={\"page-link\"}\r\n          previousClassName={\"page-link\"}\r\n          nextClassName={\"page-link\"}\r\n          activeClassName={\"active\"}\r\n        />\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}