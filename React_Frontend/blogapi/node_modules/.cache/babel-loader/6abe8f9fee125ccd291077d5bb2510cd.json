{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\kenny\\\\Projects\\\\djangotutorials\\\\drf_react_project\\\\react_frontend\\\\blogapi\\\\src\\\\components\\\\content\\\\body.jsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport axios from \"axios\";\nimport Posts from \"./posts\";\nimport SearchBar from \"../common/searchBar\";\nimport PostLoadingComponent from \"../actions/postLoading\";\nimport { useState, useEffect, useContext } from \"react\";\nimport apiURL from \"../../apiUrl\";\nimport UserContext from \"../../context/userContext\";\nimport DarkContext from \"./../../context/darkMode\";\nimport { useHistory } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Body = () => {\n  _s();\n\n  const darkContext = useContext(DarkContext);\n  let history = useHistory();\n  const PostLoading = PostLoadingComponent(Posts);\n  const [appState, setAppState] = useState({\n    loading: false,\n    posts: null\n  });\n  const [searchValue, setSearchValue] = useState({\n    search: \"\"\n  });\n  useEffect(() => {\n    setAppState({\n      loading: true\n    });\n    axios.get(apiURL).then(res => setAppState({\n      loading: false,\n      posts: res.data\n    }));\n  }, [setAppState]);\n  /*<SearchBar\r\n        handleChange={handleChange}\r\n        placeholder=\"search by title\"\r\n        searchQuery={searchValue.search}\r\n        setAppState={setAppState}\r\n        onRequestSearch={() => goSearch(searchValue.search)}\r\n      /> */\n\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    className: darkContext.darkMode ? \"bg-dark rm-box-shadow\" : \"bg-light border\",\n    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n      className: darkContext.darkMode ? \"badge badge-light\" : \"badge badge-dark\",\n      children: \"latest\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(PostLoading, {\n      isLoading: appState.loading,\n      posts: appState.posts\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Body, \"6IvpcLX3nfp+oOgLt4n7+v9P72Q=\", false, function () {\n  return [useHistory];\n});\n\n_c = Body;\nexport default Body;\n\nvar _c;\n\n$RefreshReg$(_c, \"Body\");","map":{"version":3,"sources":["C:/Users/kenny/Projects/djangotutorials/drf_react_project/react_frontend/blogapi/src/components/content/body.jsx"],"names":["React","axios","Posts","SearchBar","PostLoadingComponent","useState","useEffect","useContext","apiURL","UserContext","DarkContext","useHistory","Body","darkContext","history","PostLoading","appState","setAppState","loading","posts","searchValue","setSearchValue","search","get","then","res","data","darkMode"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,OAAOC,SAAP,MAAsB,qBAAtB;AACA,OAAOC,oBAAP,MAAiC,wBAAjC;AACA,SAASC,QAAT,EAAmBC,SAAnB,EAA8BC,UAA9B,QAAgD,OAAhD;AACA,OAAOC,MAAP,MAAmB,cAAnB;AACA,OAAOC,WAAP,MAAwB,2BAAxB;AACA,OAAOC,WAAP,MAAwB,0BAAxB;AACA,SAASC,UAAT,QAA2B,kBAA3B;;;AAEA,MAAMC,IAAI,GAAG,MAAM;AAAA;;AACjB,QAAMC,WAAW,GAAGN,UAAU,CAACG,WAAD,CAA9B;AACA,MAAII,OAAO,GAAGH,UAAU,EAAxB;AAEA,QAAMI,WAAW,GAAGX,oBAAoB,CAACF,KAAD,CAAxC;AACA,QAAM,CAACc,QAAD,EAAWC,WAAX,IAA0BZ,QAAQ,CAAC;AAAEa,IAAAA,OAAO,EAAE,KAAX;AAAkBC,IAAAA,KAAK,EAAE;AAAzB,GAAD,CAAxC;AACA,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgChB,QAAQ,CAAC;AAAEiB,IAAAA,MAAM,EAAE;AAAV,GAAD,CAA9C;AAEAhB,EAAAA,SAAS,CAAC,MAAM;AACdW,IAAAA,WAAW,CAAC;AAAEC,MAAAA,OAAO,EAAE;AAAX,KAAD,CAAX;AACAjB,IAAAA,KAAK,CACFsB,GADH,CACOf,MADP,EAEGgB,IAFH,CAESC,GAAD,IAASR,WAAW,CAAC;AAAEC,MAAAA,OAAO,EAAE,KAAX;AAAkBC,MAAAA,KAAK,EAAEM,GAAG,CAACC;AAA7B,KAAD,CAF5B;AAGD,GALQ,EAKN,CAACT,WAAD,CALM,CAAT;AAOA;AACF;AACA;AACA;AACA;AACA;AACA;;AAEE,sBACE;AACE,IAAA,SAAS,EACPJ,WAAW,CAACc,QAAZ,GAAuB,uBAAvB,GAAiD,iBAFrD;AAAA,4BAKE;AACE,MAAA,SAAS,EACPd,WAAW,CAACc,QAAZ,GAAuB,mBAAvB,GAA6C,kBAFjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YALF,eAaE,QAAC,WAAD;AAAa,MAAA,SAAS,EAAEX,QAAQ,CAACE,OAAjC;AAA0C,MAAA,KAAK,EAAEF,QAAQ,CAACG;AAA1D;AAAA;AAAA;AAAA;AAAA,YAbF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAiBD,CAxCD;;GAAMP,I;UAEUD,U;;;KAFVC,I;AA0CN,eAAeA,IAAf","sourcesContent":["import React from \"react\";\r\nimport axios from \"axios\";\r\nimport Posts from \"./posts\";\r\nimport SearchBar from \"../common/searchBar\";\r\nimport PostLoadingComponent from \"../actions/postLoading\";\r\nimport { useState, useEffect, useContext } from \"react\";\r\nimport apiURL from \"../../apiUrl\";\r\nimport UserContext from \"../../context/userContext\";\r\nimport DarkContext from \"./../../context/darkMode\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nconst Body = () => {\r\n  const darkContext = useContext(DarkContext);\r\n  let history = useHistory();\r\n\r\n  const PostLoading = PostLoadingComponent(Posts);\r\n  const [appState, setAppState] = useState({ loading: false, posts: null });\r\n  const [searchValue, setSearchValue] = useState({ search: \"\" });\r\n\r\n  useEffect(() => {\r\n    setAppState({ loading: true });\r\n    axios\r\n      .get(apiURL)\r\n      .then((res) => setAppState({ loading: false, posts: res.data }));\r\n  }, [setAppState]);\r\n\r\n  /*<SearchBar\r\n        handleChange={handleChange}\r\n        placeholder=\"search by title\"\r\n        searchQuery={searchValue.search}\r\n        setAppState={setAppState}\r\n        onRequestSearch={() => goSearch(searchValue.search)}\r\n      /> */\r\n\r\n  return (\r\n    <main\r\n      className={\r\n        darkContext.darkMode ? \"bg-dark rm-box-shadow\" : \"bg-light border\"\r\n      }\r\n    >\r\n      <span\r\n        className={\r\n          darkContext.darkMode ? \"badge badge-light\" : \"badge badge-dark\"\r\n        }\r\n      >\r\n        latest\r\n      </span>\r\n\r\n      <PostLoading isLoading={appState.loading} posts={appState.posts} />\r\n    </main>\r\n  );\r\n};\r\n\r\nexport default Body;\r\n"]},"metadata":{},"sourceType":"module"}