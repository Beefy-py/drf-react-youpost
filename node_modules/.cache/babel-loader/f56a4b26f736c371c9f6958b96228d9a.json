{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\kenny\\\\Projects\\\\djangotutorials\\\\drf_react_project\\\\react_frontend\\\\blogapi\\\\src\\\\components\\\\content\\\\body.jsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport axios from \"axios\";\nimport Posts from \"./posts\";\nimport PostLoadingComponent from \"../actions/postLoading\";\nimport { useState, useEffect, useContext } from \"react\";\nimport apiURL from \"../../apiUrl\";\nimport DarkContext from \"./../../context/darkMode\";\nimport { useHistory } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Body = ({\n  toggleShowSearchBar\n}) => {\n  _s();\n\n  const darkContext = useContext(DarkContext);\n  let history = useHistory();\n  const PostLoading = PostLoadingComponent(Posts);\n  const [appState, setAppState] = useState({\n    loading: false,\n    posts: null\n  });\n  useEffect(() => {\n    toggleShowSearchBar(true);\n    setAppState({\n      loading: true\n    });\n    axios.get(apiURL + \"e\").then(res => setAppState({\n      loading: false,\n      posts: res.data\n    }));\n  }, [setAppState]);\n  return /*#__PURE__*/_jsxDEV(PostLoading, {\n    rows: 3,\n    isLoading: appState.loading,\n    posts: appState.posts\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Body, \"h+u9UCMn6c7YEg3AJyQ0N5Cr+vw=\", false, function () {\n  return [useHistory];\n});\n\n_c = Body;\nexport default Body;\n\nvar _c;\n\n$RefreshReg$(_c, \"Body\");","map":{"version":3,"sources":["C:/Users/kenny/Projects/djangotutorials/drf_react_project/react_frontend/blogapi/src/components/content/body.jsx"],"names":["React","axios","Posts","PostLoadingComponent","useState","useEffect","useContext","apiURL","DarkContext","useHistory","Body","toggleShowSearchBar","darkContext","history","PostLoading","appState","setAppState","loading","posts","get","then","res","data"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,OAAOC,oBAAP,MAAiC,wBAAjC;AACA,SAASC,QAAT,EAAmBC,SAAnB,EAA8BC,UAA9B,QAAgD,OAAhD;AACA,OAAOC,MAAP,MAAmB,cAAnB;AACA,OAAOC,WAAP,MAAwB,0BAAxB;AACA,SAASC,UAAT,QAA2B,kBAA3B;;;AAEA,MAAMC,IAAI,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAA6B;AAAA;;AACxC,QAAMC,WAAW,GAAGN,UAAU,CAACE,WAAD,CAA9B;AACA,MAAIK,OAAO,GAAGJ,UAAU,EAAxB;AAEA,QAAMK,WAAW,GAAGX,oBAAoB,CAACD,KAAD,CAAxC;AACA,QAAM,CAACa,QAAD,EAAWC,WAAX,IAA0BZ,QAAQ,CAAC;AAAEa,IAAAA,OAAO,EAAE,KAAX;AAAkBC,IAAAA,KAAK,EAAE;AAAzB,GAAD,CAAxC;AAEAb,EAAAA,SAAS,CAAC,MAAM;AACdM,IAAAA,mBAAmB,CAAC,IAAD,CAAnB;AAEAK,IAAAA,WAAW,CAAC;AAAEC,MAAAA,OAAO,EAAE;AAAX,KAAD,CAAX;AACAhB,IAAAA,KAAK,CACFkB,GADH,CACOZ,MAAM,GAAG,GADhB,EAEGa,IAFH,CAESC,GAAD,IAASL,WAAW,CAAC;AAAEC,MAAAA,OAAO,EAAE,KAAX;AAAkBC,MAAAA,KAAK,EAAEG,GAAG,CAACC;AAA7B,KAAD,CAF5B;AAGD,GAPQ,EAON,CAACN,WAAD,CAPM,CAAT;AASA,sBACE,QAAC,WAAD;AAAa,IAAA,IAAI,EAAE,CAAnB;AAAsB,IAAA,SAAS,EAAED,QAAQ,CAACE,OAA1C;AAAmD,IAAA,KAAK,EAAEF,QAAQ,CAACG;AAAnE;AAAA;AAAA;AAAA;AAAA,UADF;AAGD,CAnBD;;GAAMR,I;UAEUD,U;;;KAFVC,I;AAqBN,eAAeA,IAAf","sourcesContent":["import React from \"react\";\r\nimport axios from \"axios\";\r\nimport Posts from \"./posts\";\r\nimport PostLoadingComponent from \"../actions/postLoading\";\r\nimport { useState, useEffect, useContext } from \"react\";\r\nimport apiURL from \"../../apiUrl\";\r\nimport DarkContext from \"./../../context/darkMode\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nconst Body = ({ toggleShowSearchBar }) => {\r\n  const darkContext = useContext(DarkContext);\r\n  let history = useHistory();\r\n\r\n  const PostLoading = PostLoadingComponent(Posts);\r\n  const [appState, setAppState] = useState({ loading: false, posts: null });\r\n\r\n  useEffect(() => {\r\n    toggleShowSearchBar(true);\r\n\r\n    setAppState({ loading: true });\r\n    axios\r\n      .get(apiURL + \"e\")\r\n      .then((res) => setAppState({ loading: false, posts: res.data }));\r\n  }, [setAppState]);\r\n\r\n  return (\r\n    <PostLoading rows={3} isLoading={appState.loading} posts={appState.posts} />\r\n  );\r\n};\r\n\r\nexport default Body;\r\n"]},"metadata":{},"sourceType":"module"}