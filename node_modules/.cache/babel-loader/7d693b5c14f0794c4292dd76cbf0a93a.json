{"ast":null,"code":"import _slicedToArray from\"C:/Users/kenny/Projects/DRF_React_YouPost/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React from\"react\";import axios from\"axios\";import UserPosts from\"./userPosts\";import PostLoadingComponent from\"../actions/postLoading\";import{useState,useEffect,useContext}from\"react\";import apiURL from\"../../apiUrl\";import DarkContext from\"./../../context/darkMode\";import{useHistory}from\"react-router-dom\";import axiosInstance from\"./../../baseAxios\";import{jsx as _jsx}from\"react/jsx-runtime\";var UserPostsWrapper=function UserPostsWrapper(_ref){var toggleShowSearchBar=_ref.toggleShowSearchBar;var darkContext=useContext(DarkContext);var history=useHistory();var PostLoading=PostLoadingComponent(UserPosts);var _useState=useState({loading:false,posts:null}),_useState2=_slicedToArray(_useState,2),appState=_useState2[0],setAppState=_useState2[1];var currentUserId=JSON.parse(atob(localStorage.getItem(\"access_token\").split(\".\")[1])).user_id;useEffect(function(){toggleShowSearchBar(false);setAppState({loading:true});axiosInstance.get().then(function(res){setAppState({loading:false,posts:res.data.filter(function(post){return post.author===currentUserId;})});});},[setAppState]);return/*#__PURE__*/_jsx(PostLoading,{rows:1,isLoading:appState.loading,posts:appState.posts});};export default UserPostsWrapper;","map":{"version":3,"sources":["C:/Users/kenny/Projects/drf_react_youpost/src/components/content/userPostsWrapper.jsx"],"names":["React","axios","UserPosts","PostLoadingComponent","useState","useEffect","useContext","apiURL","DarkContext","useHistory","axiosInstance","UserPostsWrapper","toggleShowSearchBar","darkContext","history","PostLoading","loading","posts","appState","setAppState","currentUserId","JSON","parse","atob","localStorage","getItem","split","user_id","get","then","res","data","filter","post","author"],"mappings":"gKAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,MAAOC,CAAAA,KAAP,KAAkB,OAAlB,CACA,MAAOC,CAAAA,SAAP,KAAsB,aAAtB,CACA,MAAOC,CAAAA,oBAAP,KAAiC,wBAAjC,CACA,OAASC,QAAT,CAAmBC,SAAnB,CAA8BC,UAA9B,KAAgD,OAAhD,CACA,MAAOC,CAAAA,MAAP,KAAmB,cAAnB,CACA,MAAOC,CAAAA,WAAP,KAAwB,0BAAxB,CACA,OAASC,UAAT,KAA2B,kBAA3B,CACA,MAAOC,CAAAA,aAAP,KAA0B,mBAA1B,C,2CAEA,GAAMC,CAAAA,gBAAgB,CAAG,QAAnBA,CAAAA,gBAAmB,MAA6B,IAA1BC,CAAAA,mBAA0B,MAA1BA,mBAA0B,CACpD,GAAMC,CAAAA,WAAW,CAAGP,UAAU,CAACE,WAAD,CAA9B,CACA,GAAIM,CAAAA,OAAO,CAAGL,UAAU,EAAxB,CAEA,GAAMM,CAAAA,WAAW,CAAGZ,oBAAoB,CAACD,SAAD,CAAxC,CACA,cAAgCE,QAAQ,CAAC,CAAEY,OAAO,CAAE,KAAX,CAAkBC,KAAK,CAAE,IAAzB,CAAD,CAAxC,wCAAOC,QAAP,eAAiBC,WAAjB,eAEA,GAAMC,CAAAA,aAAa,CAAGC,IAAI,CAACC,KAAL,CACpBC,IAAI,CAACC,YAAY,CAACC,OAAb,CAAqB,cAArB,EAAqCC,KAArC,CAA2C,GAA3C,EAAgD,CAAhD,CAAD,CADgB,EAEpBC,OAFF,CAIAtB,SAAS,CAAC,UAAM,CACdO,mBAAmB,CAAC,KAAD,CAAnB,CAEAO,WAAW,CAAC,CAAEH,OAAO,CAAE,IAAX,CAAD,CAAX,CACAN,aAAa,CAACkB,GAAd,GAAoBC,IAApB,CAAyB,SAACC,GAAD,CAAS,CAChCX,WAAW,CAAC,CACVH,OAAO,CAAE,KADC,CAEVC,KAAK,CAAEa,GAAG,CAACC,IAAJ,CAASC,MAAT,CAAgB,SAACC,IAAD,QAAUA,CAAAA,IAAI,CAACC,MAAL,GAAgBd,aAA1B,EAAhB,CAFG,CAAD,CAAX,CAID,CALD,EAMD,CAVQ,CAUN,CAACD,WAAD,CAVM,CAAT,CAYA,mBACE,KAAC,WAAD,EAAa,IAAI,CAAE,CAAnB,CAAsB,SAAS,CAAED,QAAQ,CAACF,OAA1C,CAAmD,KAAK,CAAEE,QAAQ,CAACD,KAAnE,EADF,CAGD,CA1BD,CA4BA,cAAeN,CAAAA,gBAAf","sourcesContent":["import React from \"react\";\r\nimport axios from \"axios\";\r\nimport UserPosts from \"./userPosts\";\r\nimport PostLoadingComponent from \"../actions/postLoading\";\r\nimport { useState, useEffect, useContext } from \"react\";\r\nimport apiURL from \"../../apiUrl\";\r\nimport DarkContext from \"./../../context/darkMode\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport axiosInstance from \"./../../baseAxios\";\r\n\r\nconst UserPostsWrapper = ({ toggleShowSearchBar }) => {\r\n  const darkContext = useContext(DarkContext);\r\n  let history = useHistory();\r\n\r\n  const PostLoading = PostLoadingComponent(UserPosts);\r\n  const [appState, setAppState] = useState({ loading: false, posts: null });\r\n\r\n  const currentUserId = JSON.parse(\r\n    atob(localStorage.getItem(\"access_token\").split(\".\")[1])\r\n  ).user_id;\r\n\r\n  useEffect(() => {\r\n    toggleShowSearchBar(false);\r\n\r\n    setAppState({ loading: true });\r\n    axiosInstance.get().then((res) => {\r\n      setAppState({\r\n        loading: false,\r\n        posts: res.data.filter((post) => post.author === currentUserId),\r\n      });\r\n    });\r\n  }, [setAppState]);\r\n\r\n  return (\r\n    <PostLoading rows={1} isLoading={appState.loading} posts={appState.posts} />\r\n  );\r\n};\r\n\r\nexport default UserPostsWrapper;\r\n"]},"metadata":{},"sourceType":"module"}