{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\kenny\\\\Projects\\\\djangotutorials\\\\drf_react_project\\\\react_frontend\\\\blogapi\\\\src\\\\components\\\\content\\\\searchPage.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useContext } from \"react\";\nimport axios from \"axios\";\nimport apiURL from \"../../apiUrl\";\nimport { useEffect, useState } from \"react\";\nimport DarkContext from \"../../context/darkMode\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst SearchPage = () => {\n  _s();\n\n  const [posts, setPosts] = useState([]);\n  const darkContext = useContext(DarkContext);\n  useEffect(() => {\n    axios.get(apiURL + \"search/\" + window.location.search).then(res => {\n      setPosts(res.data);\n      console.log(res.data);\n    });\n  }, [setPosts]);\n  /*<React.Fragment>\r\n      {posts.length ? (\r\n        <div className=\"posts-section\">\r\n          {posts.map((post) => {\r\n            const { title, id } = post;\r\n            return <div key={id}>{title}</div>;\r\n          })}\r\n        </div>\r\n      ) : (\r\n        <div className=\"no-results border\">\r\n          <h3>No Results</h3>\r\n        </div>\r\n      )}\r\n    </React.Fragment> */\n\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: posts.length ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"posts-results-section\",\n      children: posts.map(post => {\n        const {\n          title,\n          id,\n          author,\n          published\n        } = post;\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"post\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: [\" \", title]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: author\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 17\n          }, this), \" |\", \" \", /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\" \", new Intl.DateTimeFormat(\"en-GB\", {\n              dateStyle: \"full\"\n            }).format(new Date(published))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: body\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 17\n          }, this)]\n        }, id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 15\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: +darkContext.darkMode ? \"no-results border bg-dark text-light\" : \"no-results border bg-light\",\n      children: /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"No Results\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n};\n\n_s(SearchPage, \"pAklgxFbyTDiMnEVlvkkAM4xF0c=\");\n\n_c = SearchPage;\nexport default SearchPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"SearchPage\");","map":{"version":3,"sources":["C:/Users/kenny/Projects/djangotutorials/drf_react_project/react_frontend/blogapi/src/components/content/searchPage.jsx"],"names":["React","useContext","axios","apiURL","useEffect","useState","DarkContext","SearchPage","posts","setPosts","darkContext","get","window","location","search","then","res","data","console","log","length","map","post","title","id","author","published","Intl","DateTimeFormat","dateStyle","format","Date","body","darkMode"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,cAAnB;AACA,SAASC,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,OAAOC,WAAP,MAAwB,wBAAxB;;;AAEA,MAAMC,UAAU,GAAG,MAAM;AAAA;;AACvB,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBJ,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAMK,WAAW,GAAGT,UAAU,CAACK,WAAD,CAA9B;AAEAF,EAAAA,SAAS,CAAC,MAAM;AACdF,IAAAA,KAAK,CAACS,GAAN,CAAUR,MAAM,GAAG,SAAT,GAAqBS,MAAM,CAACC,QAAP,CAAgBC,MAA/C,EAAuDC,IAAvD,CAA6DC,GAAD,IAAS;AACnEP,MAAAA,QAAQ,CAACO,GAAG,CAACC,IAAL,CAAR;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYH,GAAG,CAACC,IAAhB;AACD,KAHD;AAID,GALQ,EAKN,CAACR,QAAD,CALM,CAAT;AAOA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEE,sBACE,QAAC,KAAD,CAAO,QAAP;AAAA,cACGD,KAAK,CAACY,MAAN,gBACC;AAAK,MAAA,SAAS,EAAC,uBAAf;AAAA,gBACGZ,KAAK,CAACa,GAAN,CAAWC,IAAD,IAAU;AACnB,cAAM;AAAEC,UAAAA,KAAF;AAASC,UAAAA,EAAT;AAAaC,UAAAA,MAAb;AAAqBC,UAAAA;AAArB,YAAmCJ,IAAzC;AACA,4BACE;AAAK,UAAA,SAAS,EAAC,MAAf;AAAA,kCACE;AAAA,4BAAMC,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE;AAAA,sBAAIE;AAAJ;AAAA;AAAA;AAAA;AAAA,kBAFF,QAEoB,GAFpB,eAGE;AAAA,uBACG,GADH,EAEG,IAAIE,IAAI,CAACC,cAAT,CAAwB,OAAxB,EAAiC;AAChCC,cAAAA,SAAS,EAAE;AADqB,aAAjC,EAEEC,MAFF,CAES,IAAIC,IAAJ,CAASL,SAAT,CAFT,CAFH;AAAA;AAAA;AAAA;AAAA;AAAA,kBAHF,eASE;AAAA;AAAA;AAAA;AAAA,kBATF,eAUE;AAAA,sBAAIM;AAAJ;AAAA;AAAA;AAAA;AAAA,kBAVF;AAAA,WAA2BR,EAA3B;AAAA;AAAA;AAAA;AAAA,gBADF;AAcD,OAhBA;AADH;AAAA;AAAA;AAAA;AAAA,YADD,gBAqBC;AACE,MAAA,SAAS,EACP,CAACd,WAAW,CAACuB,QAAb,GACI,sCADJ,GAEI,4BAJR;AAAA,6BAOE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAPF;AAAA;AAAA;AAAA;AAAA;AAtBJ;AAAA;AAAA;AAAA;AAAA,UADF;AAmCD,CA7DD;;GAAM1B,U;;KAAAA,U;AA+DN,eAAeA,UAAf","sourcesContent":["import React, { useContext } from \"react\";\r\nimport axios from \"axios\";\r\nimport apiURL from \"../../apiUrl\";\r\nimport { useEffect, useState } from \"react\";\r\nimport DarkContext from \"../../context/darkMode\";\r\n\r\nconst SearchPage = () => {\r\n  const [posts, setPosts] = useState([]);\r\n  const darkContext = useContext(DarkContext);\r\n\r\n  useEffect(() => {\r\n    axios.get(apiURL + \"search/\" + window.location.search).then((res) => {\r\n      setPosts(res.data);\r\n      console.log(res.data);\r\n    });\r\n  }, [setPosts]);\r\n\r\n  /*<React.Fragment>\r\n      {posts.length ? (\r\n        <div className=\"posts-section\">\r\n          {posts.map((post) => {\r\n            const { title, id } = post;\r\n            return <div key={id}>{title}</div>;\r\n          })}\r\n        </div>\r\n      ) : (\r\n        <div className=\"no-results border\">\r\n          <h3>No Results</h3>\r\n        </div>\r\n      )}\r\n    </React.Fragment> */\r\n\r\n  return (\r\n    <React.Fragment>\r\n      {posts.length ? (\r\n        <div className=\"posts-results-section\">\r\n          {posts.map((post) => {\r\n            const { title, id, author, published } = post;\r\n            return (\r\n              <div className=\"post\" key={id}>\r\n                <h3> {title}</h3>\r\n                <p>{author}</p> |{\" \"}\r\n                <p>\r\n                  {\" \"}\r\n                  {new Intl.DateTimeFormat(\"en-GB\", {\r\n                    dateStyle: \"full\",\r\n                  }).format(new Date(published))}\r\n                </p>\r\n                <hr />\r\n                <p>{body}</p>\r\n              </div>\r\n            );\r\n          })}\r\n        </div>\r\n      ) : (\r\n        <div\r\n          className={\r\n            +darkContext.darkMode\r\n              ? \"no-results border bg-dark text-light\"\r\n              : \"no-results border bg-light\"\r\n          }\r\n        >\r\n          <h3>No Results</h3>\r\n        </div>\r\n      )}\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default SearchPage;\r\n"]},"metadata":{},"sourceType":"module"}