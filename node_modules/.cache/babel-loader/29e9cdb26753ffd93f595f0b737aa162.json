{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\kenny\\\\Projects\\\\djangotutorials\\\\drf_react_project\\\\react_frontend\\\\blogapi\\\\src\\\\components\\\\content\\\\posts.jsx\";\nimport React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport DarkContext from \"./../../context/darkMode\";\nimport ReactPaginate from \"react-paginate\";\nimport UserContext from \"./../../context/userContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      offset: 0,\n      data: [],\n      perPage: 6,\n      currentPage: 0\n    };\n\n    this.renderTags = tagList => {\n      /* <button\r\n            onClick={getPostsByTag(\"latest\")}\r\n            className={\r\n              darkContext.darkMode ? \"badge badge-light\" : \"badge badge-dark\"\r\n            }\r\n          >\r\n            latest\r\n          </button>\r\n        */\n      return tagList.map(tag => /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => this.props.getPostsByTag(tag.id),\n        className: \"badge \" + tag.styling,\n        children: tag.name\n      }, tag.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 7\n      }, this));\n    };\n\n    this.reactToPost = (postId, vote) => {\n      console.log(\"reacted to \" + postId + \" with \" + vote);\n    };\n\n    this.handlePageClick = e => {\n      const selectedPage = e.selected;\n      const offset = selectedPage * this.state.perPage;\n      this.setState({\n        currentPage: selectedPage,\n        offset: offset\n      }, () => this.receivedData());\n      window.scrollTo(0, 0);\n    };\n  }\n\n  componentDidMount() {\n    if (this.props.posts) {\n      this.receivedData();\n    }\n  }\n\n  receivedData() {\n    const data = this.props.posts;\n    const slice = data.slice(this.state.offset, this.state.offset + this.state.perPage);\n    const postData = slice.map(post => {\n      const {\n        title,\n        content,\n        slug,\n        author,\n        image,\n        rating\n      } = post;\n      const postDate = new Intl.DateTimeFormat(\"en-GB\", {\n        month: \"long\",\n        year: \"numeric\",\n        day: \"numeric\"\n      }).format(new Date(post.published));\n      const day = new Date(postDate).toLocaleString(\"en-us\", {\n        weekday: \"long\"\n      });\n      console.log(image);\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: this.context.darkMode ? \"blog-post text-light border bg-dark\" : \"blog-post border\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"blog-post-img border\",\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: image,\n            alt: \"Image for: \" + post.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"blog-post-info\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"blog-post-date\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              children: day\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 77,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: postDate\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 78,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"blog-post-author\",\n            children: /*#__PURE__*/_jsxDEV(UserContext.Consumer, {\n              children: userContext => {\n                return /*#__PURE__*/_jsxDEV(React.Fragment, {\n                  children: [\"by \", /*#__PURE__*/_jsxDEV(\"span\", {\n                    children: userContext.getAuthor(author)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 85,\n                    columnNumber: 26\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 84,\n                  columnNumber: 21\n                }, this);\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 81,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n            className: \"blog-post-title\",\n            children: title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"blog-post-text\",\n            children: content.length >= 500 ? content.substring(0, 500) + \"...\" : content\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Link, {\n            to: \"posts/\" + slug,\n            className: \"blog-post-cta\",\n            children: \"Read More\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"blog-post-options\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"react\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"upvote\",\n              children: /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"btn btn-success\",\n                children: /*#__PURE__*/_jsxDEV(\"i\", {\n                  className: \"fas fa-thumbs-up\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 106,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 105,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 104,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"rating\",\n              children: rating ? rating : 0\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 109,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"downvote\",\n              children: /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"btn btn-danger\",\n                children: /*#__PURE__*/_jsxDEV(\"i\", {\n                  className: \"fas fa-thumbs-down\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 112,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 111,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 110,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"bookmark\",\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              children: /*#__PURE__*/_jsxDEV(\"i\", {\n                className: \"far fa-bookmark\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 118,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 117,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 11\n        }, this)]\n      }, post.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this);\n    });\n    this.setState({\n      pageCount: Math.ceil(data.length / this.state.perPage),\n      postData\n    });\n  }\n\n  render() {\n    const {\n      posts\n    } = this.props;\n    const {\n      renderTags,\n      reactToPost\n    } = this;\n    const pageLinkClassName = this.context.darkMode ? \" bg-dark page-link text-light\" : \"page-link\";\n    return /*#__PURE__*/_jsxDEV(DarkContext.Consumer, {\n      children: darkContext => /*#__PURE__*/_jsxDEV(React.Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"main\", {\n          className: darkContext.darkMode ? \"bg-dark dark-page-shadow \" : \"bg-light border\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"post-tags\",\n            children: renderTags([{\n              name: \"latest\",\n              styling: \"btn-primary\",\n              id: \"Lat\"\n            }, {\n              name: \"most popular\",\n              styling: \"btn-success\",\n              id: \"MPo\"\n            }, {\n              name: \"least popular\",\n              styling: \"btn-danger\",\n              id: \"LPo\"\n            }, {\n              name: \"oldest\",\n              styling: \"btn-warning\",\n              id: \"Old\"\n            }])\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 163,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: darkContext.darkMode ? \"sorted-by text-light\" : \"sorted-by\",\n            children: [\"Sorted By:\", \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n              children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                className: \"fas fa-filter\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 179,\n                columnNumber: 19\n              }, this), \" \", this.props.curSorted]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 178,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 172,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n            className: darkContext.darkMode ? \"posts-section-dark posts-section\" : \"posts-section\",\n            children: this.state.postData\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 183,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 13\n        }, this), \" \", /*#__PURE__*/_jsxDEV(ReactPaginate, {\n          previousLabel: \"previous\",\n          nextLabel: \"next\",\n          breakLabel: \"...\",\n          breakClassName: \"break-me\",\n          pageCount: this.state.pageCount,\n          marginPagesDisplayed: 3,\n          pageRangeDisplayed: 5,\n          onPageChange: this.handlePageClick,\n          containerClassName: \"pagination justify-content-center\",\n          pageClassName: \"page-item\",\n          pageLinkClassName: pageLinkClassName,\n          previousClassName: pageLinkClassName,\n          nextClassName: pageLinkClassName,\n          activeClassName: \"active\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 193,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 7\n    }, this);\n  }\n\n}\nApp.contextType = DarkContext;","map":{"version":3,"sources":["C:/Users/kenny/Projects/djangotutorials/drf_react_project/react_frontend/blogapi/src/components/content/posts.jsx"],"names":["React","Component","Link","DarkContext","ReactPaginate","UserContext","App","state","offset","data","perPage","currentPage","renderTags","tagList","map","tag","props","getPostsByTag","id","styling","name","reactToPost","postId","vote","console","log","handlePageClick","e","selectedPage","selected","setState","receivedData","window","scrollTo","componentDidMount","posts","slice","postData","post","title","content","slug","author","image","rating","postDate","Intl","DateTimeFormat","month","year","day","format","Date","published","toLocaleString","weekday","context","darkMode","userContext","getAuthor","length","substring","pageCount","Math","ceil","render","pageLinkClassName","darkContext","curSorted","contextType"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport DarkContext from \"./../../context/darkMode\";\r\nimport ReactPaginate from \"react-paginate\";\r\nimport UserContext from \"./../../context/userContext\";\r\n\r\nexport default class App extends Component {\r\n  state = { offset: 0, data: [], perPage: 6, currentPage: 0 };\r\n\r\n  static contextType = DarkContext;\r\n\r\n  componentDidMount() {\r\n    if (this.props.posts) {\r\n      this.receivedData();\r\n    }\r\n  }\r\n\r\n  renderTags = (tagList) => {\r\n    /* <button\r\n          onClick={getPostsByTag(\"latest\")}\r\n          className={\r\n            darkContext.darkMode ? \"badge badge-light\" : \"badge badge-dark\"\r\n          }\r\n        >\r\n          latest\r\n        </button>\r\n      */\r\n    return tagList.map((tag) => (\r\n      <button\r\n        key={tag.id}\r\n        onClick={() => this.props.getPostsByTag(tag.id)}\r\n        className={\"badge \" + tag.styling}\r\n      >\r\n        {tag.name}\r\n      </button>\r\n    ));\r\n  };\r\n\r\n  reactToPost = (postId, vote) => {\r\n    console.log(\"reacted to \" + postId + \" with \" + vote);\r\n  };\r\n\r\n  receivedData() {\r\n    const data = this.props.posts;\r\n    const slice = data.slice(\r\n      this.state.offset,\r\n      this.state.offset + this.state.perPage\r\n    );\r\n    const postData = slice.map((post) => {\r\n      const { title, content, slug, author, image, rating } = post;\r\n      const postDate = new Intl.DateTimeFormat(\"en-GB\", {\r\n        month: \"long\",\r\n        year: \"numeric\",\r\n        day: \"numeric\",\r\n      }).format(new Date(post.published));\r\n\r\n      const day = new Date(postDate).toLocaleString(\"en-us\", {\r\n        weekday: \"long\",\r\n      });\r\n\r\n      console.log(image);\r\n\r\n      return (\r\n        <div\r\n          className={\r\n            this.context.darkMode\r\n              ? \"blog-post text-light border bg-dark\"\r\n              : \"blog-post border\"\r\n          }\r\n          key={post.id}\r\n        >\r\n          <div className=\"blog-post-img border\">\r\n            <img src={image} alt={\"Image for: \" + post.title} />\r\n          </div>\r\n          <div className=\"blog-post-info\">\r\n            <div className=\"blog-post-date\">\r\n              <span>{day}</span>\r\n              <span>{postDate}</span>\r\n            </div>\r\n            <div className=\"blog-post-author\">\r\n              <UserContext.Consumer>\r\n                {(userContext) => {\r\n                  return (\r\n                    <React.Fragment>\r\n                      by <span>{userContext.getAuthor(author)}</span>\r\n                    </React.Fragment>\r\n                  );\r\n                }}\r\n              </UserContext.Consumer>\r\n            </div>\r\n\r\n            <h1 className=\"blog-post-title\">{title}</h1>\r\n            <p className=\"blog-post-text\">\r\n              {content.length >= 500\r\n                ? content.substring(0, 500) + \"...\"\r\n                : content}\r\n            </p>\r\n            <Link to={\"posts/\" + slug} className=\"blog-post-cta\">\r\n              Read More\r\n            </Link>\r\n          </div>\r\n          <div className=\"blog-post-options\">\r\n            <div className=\"react\">\r\n              <div className=\"upvote\">\r\n                <button className=\"btn btn-success\">\r\n                  <i className=\"fas fa-thumbs-up\"></i>\r\n                </button>\r\n              </div>\r\n              <div className=\"rating\">{rating ? rating : 0}</div>\r\n              <div className=\"downvote\">\r\n                <button className=\"btn btn-danger\">\r\n                  <i className=\"fas fa-thumbs-down\"></i>\r\n                </button>\r\n              </div>\r\n            </div>\r\n            <div className=\"bookmark\">\r\n              <button>\r\n                <i className=\"far fa-bookmark\"></i>\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      );\r\n    });\r\n\r\n    this.setState({\r\n      pageCount: Math.ceil(data.length / this.state.perPage),\r\n\r\n      postData,\r\n    });\r\n  }\r\n\r\n  handlePageClick = (e) => {\r\n    const selectedPage = e.selected;\r\n    const offset = selectedPage * this.state.perPage;\r\n\r\n    this.setState({ currentPage: selectedPage, offset: offset }, () =>\r\n      this.receivedData()\r\n    );\r\n\r\n    window.scrollTo(0, 0);\r\n  };\r\n\r\n  render() {\r\n    const { posts } = this.props;\r\n    const { renderTags, reactToPost } = this;\r\n\r\n    const pageLinkClassName = this.context.darkMode\r\n      ? \" bg-dark page-link text-light\"\r\n      : \"page-link\";\r\n\r\n    return (\r\n      <DarkContext.Consumer>\r\n        {(darkContext) => (\r\n          <React.Fragment>\r\n            <main\r\n              className={\r\n                darkContext.darkMode\r\n                  ? \"bg-dark dark-page-shadow \"\r\n                  : \"bg-light border\"\r\n              }\r\n            >\r\n              <div className=\"post-tags\">\r\n                {renderTags([\r\n                  { name: \"latest\", styling: \"btn-primary\", id: \"Lat\" },\r\n                  { name: \"most popular\", styling: \"btn-success\", id: \"MPo\" },\r\n                  { name: \"least popular\", styling: \"btn-danger\", id: \"LPo\" },\r\n                  { name: \"oldest\", styling: \"btn-warning\", id: \"Old\" },\r\n                ])}\r\n              </div>\r\n\r\n              <p\r\n                className={\r\n                  darkContext.darkMode ? \"sorted-by text-light\" : \"sorted-by\"\r\n                }\r\n              >\r\n                Sorted By:{\" \"}\r\n                <span>\r\n                  <i className=\"fas fa-filter\"></i> {this.props.curSorted}\r\n                </span>\r\n              </p>\r\n\r\n              <section\r\n                className={\r\n                  darkContext.darkMode\r\n                    ? \"posts-section-dark posts-section\"\r\n                    : \"posts-section\"\r\n                }\r\n              >\r\n                {this.state.postData}\r\n              </section>\r\n            </main>{\" \"}\r\n            <ReactPaginate\r\n              previousLabel={\"previous\"}\r\n              nextLabel={\"next\"}\r\n              breakLabel={\"...\"}\r\n              breakClassName={\"break-me\"}\r\n              pageCount={this.state.pageCount}\r\n              marginPagesDisplayed={3}\r\n              pageRangeDisplayed={5}\r\n              onPageChange={this.handlePageClick}\r\n              containerClassName={\"pagination justify-content-center\"}\r\n              pageClassName={\"page-item\"}\r\n              pageLinkClassName={pageLinkClassName}\r\n              previousClassName={pageLinkClassName}\r\n              nextClassName={pageLinkClassName}\r\n              activeClassName={\"active\"}\r\n            />\r\n          </React.Fragment>\r\n        )}\r\n      </DarkContext.Consumer>\r\n    );\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}