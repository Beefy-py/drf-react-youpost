{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\kenny\\\\Projects\\\\djangotutorials\\\\drf_react_project\\\\react_frontend\\\\blogapi\\\\src\\\\components\\\\actions\\\\loginForm.jsx\";\nimport Form from \"../common/form\";\nimport Joi from \"joi-browser\";\nimport React from \"react\";\nimport UserContext from \"../../context/userContext\";\nimport apiURL from \"../../apiUrl\";\nimport axiosInstance from \"../../baseAxios\";\nimport DarkContext from \"../../context/darkMode\";\nimport { Link } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class LoginForm extends Form {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      data: {\n        username: \"\",\n        password: \"\"\n      },\n      errors: {}\n    };\n    this.schema = {\n      username: Joi.string().required().label(\"Username\"),\n      password: Joi.string().required().min(5).label(\"Password\")\n    };\n\n    this.afterSubmit = () => {\n      axiosInstance.post(apiURL + \"token/\", {\n        username: this.state.data.username,\n        password: this.state.data.password\n      }).then(res => {\n        localStorage.setItem(\"access_token\", res.data.access);\n        localStorage.setItem(\"refresh_token\", res.data.refresh);\n        axiosInstance.defaults.headers[\"Authorization\"] = \"JWT \" + localStorage.getItem(\"access_token\");\n        /*set user to current user */\n\n        localStorage.setItem(\"currentUser\", this.state.data);\n        this.props.history.replace(\"/dashboard\");\n      }).catch(response => {\n        console.log(response.response);\n        const errorText = response.response.data.detail ? \"username or password incorrect\" : \"\";\n        const errors401 = {\n          username: errorText,\n          password: errorText\n        };\n        this.setState({\n          errors: errors401\n        });\n      });\n    };\n  }\n\n  componentDidMount() {\n    this.context.onLogIn(\"Guest\");\n    this.props.toggleShowSearchBar(false);\n  }\n\n  afterChange(input) {}\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(DarkContext.Consumer, {\n      children: darkContext => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-container border \" + `${darkContext.darkMode ? \"bg-dark text-light\" : \"bg-light\"}`,\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          action: \"\",\n          onSubmit: this.handleSubmit,\n          children: [this.renderInput(\"username\", \"Username\"), this.renderInput(\"password\", \"Password\", \"password\"), this.renderButton(\"Login\")]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Don't have an account? \", /*#__PURE__*/_jsxDEV(Link, {\n            to: \"/register\",\n            children: \"Register\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 38\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this);\n  }\n\n}\nLoginForm.contextType = UserContext;","map":{"version":3,"sources":["C:/Users/kenny/Projects/djangotutorials/drf_react_project/react_frontend/blogapi/src/components/actions/loginForm.jsx"],"names":["Form","Joi","React","UserContext","apiURL","axiosInstance","DarkContext","Link","LoginForm","state","data","username","password","errors","schema","string","required","label","min","afterSubmit","post","then","res","localStorage","setItem","access","refresh","defaults","headers","getItem","props","history","replace","catch","response","console","log","errorText","detail","errors401","setState","componentDidMount","context","onLogIn","toggleShowSearchBar","afterChange","input","render","darkContext","darkMode","handleSubmit","renderInput","renderButton","contextType"],"mappings":"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","sourcesContent":["import Form from \"../common/form\";\r\nimport Joi from \"joi-browser\";\r\nimport React from \"react\";\r\nimport UserContext from \"../../context/userContext\";\r\nimport apiURL from \"../../apiUrl\";\r\nimport axiosInstance from \"../../baseAxios\";\r\nimport DarkContext from \"../../context/darkMode\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport default class LoginForm extends Form {\r\n  static contextType = UserContext;\r\n\r\n  componentDidMount() {\r\n    this.context.onLogIn(\"Guest\");\r\n    this.props.toggleShowSearchBar(false);\r\n  }\r\n\r\n  state = {\r\n    data: { username: \"\", password: \"\" },\r\n    errors: {},\r\n  };\r\n\r\n  schema = {\r\n    username: Joi.string().required().label(\"Username\"),\r\n    password: Joi.string().required().min(5).label(\"Password\"),\r\n  };\r\n\r\n  afterSubmit = () => {\r\n    axiosInstance\r\n      .post(apiURL + \"token/\", {\r\n        username: this.state.data.username,\r\n        password: this.state.data.password,\r\n      })\r\n      .then((res) => {\r\n        localStorage.setItem(\"access_token\", res.data.access);\r\n        localStorage.setItem(\"refresh_token\", res.data.refresh);\r\n        axiosInstance.defaults.headers[\"Authorization\"] =\r\n          \"JWT \" + localStorage.getItem(\"access_token\");\r\n\r\n        /*set user to current user */\r\n        localStorage.setItem(\"currentUser\", this.state.data);\r\n        this.props.history.replace(\"/dashboard\");\r\n      })\r\n      .catch((response) => {\r\n        console.log(response.response);\r\n        const errorText = response.response.data.detail\r\n          ? \"username or password incorrect\"\r\n          : \"\";\r\n\r\n        const errors401 = { username: errorText, password: errorText };\r\n        this.setState({ errors: errors401 });\r\n      });\r\n  };\r\n\r\n  afterChange(input) {}\r\n\r\n  render() {\r\n    return (\r\n      <DarkContext.Consumer>\r\n        {(darkContext) => (\r\n          <div\r\n            className={\r\n              \"form-container border \" +\r\n              `${darkContext.darkMode ? \"bg-dark text-light\" : \"bg-light\"}`\r\n            }\r\n          >\r\n            <h1>Login</h1>\r\n            <form action=\"\" onSubmit={this.handleSubmit}>\r\n              {this.renderInput(\"username\", \"Username\")}\r\n              {this.renderInput(\"password\", \"Password\", \"password\")}\r\n              {this.renderButton(\"Login\")}\r\n            </form>\r\n            <p>\r\n              Don't have an account? <Link to=\"/register\">Register</Link>\r\n            </p>\r\n          </div>\r\n        )}\r\n      </DarkContext.Consumer>\r\n    );\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}