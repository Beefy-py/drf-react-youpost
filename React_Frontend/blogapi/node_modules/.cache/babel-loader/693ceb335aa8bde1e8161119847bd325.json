{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\kenny\\\\Projects\\\\djangotutorials\\\\drf_react_project\\\\react_frontend\\\\blogapi\\\\src\\\\components\\\\actions\\\\searchBar.jsx\";\nimport React, { Component } from \"react\";\nimport DarkContext from \"../../context/darkMode\";\nimport { Link, withRouter } from \"react-router-dom\";\nimport axios from \"axios\";\nimport apiURL from \"../../apiUrl\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass SearchBar extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      searchValue: \"\",\n      searchResults: [],\n      showSearchRes: true\n    };\n\n    this.handleChange = e => {\n      e.preventDefault();\n      this.setState({\n        searchValue: e.target.value\n      });\n\n      if (e.target.value !== \"\") {\n        axios.get(apiURL + \"search/?search=\" + e.target.value).then(res => {\n          console.log(res.data);\n          this.setState({\n            searchResults: res.data\n          });\n        });\n      }\n    };\n\n    this.goSearch = e => {\n      e.preventDefault();\n      this.props.history.push({\n        pathname: \"/search/\",\n        search: \"?search= \" + this.state.searchValue\n      });\n      window.location.reload();\n    };\n\n    this.toggleShowSearchRes = () => {\n      this.setState({\n        showSearchRes: !this.state.showSearchRes\n      });\n    };\n  }\n\n  componentDidMount() {}\n\n  render() {\n    const {\n      searchResults,\n      showSearchRes\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(DarkContext.Consumer, {\n      children: darkContext => /*#__PURE__*/_jsxDEV(React.Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"form\", {\n          className: \"form-inline searchbar\",\n          onSubmit: this.goSearch,\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            className: darkContext.darkMode ? \"form-control bg-dark text-light\" : \"form-control\",\n            type: \"search\",\n            placeholder: \"Search\",\n            \"aria-label\": \"Search\",\n            onChange: this.handleChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn btn-outline-success\",\n            type: \"submit\",\n            children: \"Search\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          className: \"search-results-on-change\",\n          children: searchResults ? searchResults.map(post => /*#__PURE__*/_jsxDEV(\"li\", {\n            children: /*#__PURE__*/_jsxDEV(Link, {\n              onClick: () => this.toggleShowSearchRes(!showSearchRes),\n              to: \"/posts/\" + post.slug,\n              children: post.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 70,\n              columnNumber: 23\n            }, this)\n          }, post.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 21\n          }, this)) : \"\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default _c = withRouter(SearchBar);\n\nvar _c;\n\n$RefreshReg$(_c, \"%default%\");","map":{"version":3,"sources":["C:/Users/kenny/Projects/djangotutorials/drf_react_project/react_frontend/blogapi/src/components/actions/searchBar.jsx"],"names":["React","Component","DarkContext","Link","withRouter","axios","apiURL","SearchBar","state","searchValue","searchResults","showSearchRes","handleChange","e","preventDefault","setState","target","value","get","then","res","console","log","data","goSearch","props","history","push","pathname","search","window","location","reload","toggleShowSearchRes","componentDidMount","render","darkContext","darkMode","map","post","slug","title","id"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport DarkContext from \"../../context/darkMode\";\r\nimport { Link, withRouter } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport apiURL from \"../../apiUrl\";\r\n\r\nclass SearchBar extends Component {\r\n  state = {\r\n    searchValue: \"\",\r\n    searchResults: [],\r\n    showSearchRes: true,\r\n  };\r\n\r\n  componentDidMount() {}\r\n\r\n  handleChange = (e) => {\r\n    e.preventDefault();\r\n\r\n    this.setState({ searchValue: e.target.value });\r\n\r\n    if (e.target.value !== \"\") {\r\n      axios.get(apiURL + \"search/?search=\" + e.target.value).then((res) => {\r\n        console.log(res.data);\r\n        this.setState({ searchResults: res.data });\r\n      });\r\n    }\r\n  };\r\n\r\n  goSearch = (e) => {\r\n    e.preventDefault();\r\n    this.props.history.push({\r\n      pathname: \"/search/\",\r\n      search: \"?search= \" + this.state.searchValue,\r\n    });\r\n\r\n    window.location.reload();\r\n  };\r\n\r\n  toggleShowSearchRes = () => {\r\n    this.setState({ showSearchRes: !this.state.showSearchRes });\r\n  };\r\n\r\n  render() {\r\n    const { searchResults, showSearchRes } = this.state;\r\n\r\n    return (\r\n      <DarkContext.Consumer>\r\n        {(darkContext) => (\r\n          <React.Fragment>\r\n            <form className=\"form-inline searchbar\" onSubmit={this.goSearch}>\r\n              <input\r\n                className={\r\n                  darkContext.darkMode\r\n                    ? \"form-control bg-dark text-light\"\r\n                    : \"form-control\"\r\n                }\r\n                type=\"search\"\r\n                placeholder=\"Search\"\r\n                aria-label=\"Search\"\r\n                onChange={this.handleChange}\r\n              />\r\n              <button className=\"btn btn-outline-success\" type=\"submit\">\r\n                Search\r\n              </button>\r\n            </form>\r\n            <ul className=\"search-results-on-change\">\r\n              {searchResults\r\n                ? searchResults.map((post) => (\r\n                    <li key={post.id}>\r\n                      <Link\r\n                        onClick={() => this.toggleShowSearchRes(!showSearchRes)}\r\n                        to={\"/posts/\" + post.slug}\r\n                      >\r\n                        {post.title}\r\n                      </Link>\r\n                    </li>\r\n                  ))\r\n                : \"\"}\r\n            </ul>\r\n          </React.Fragment>\r\n        )}\r\n      </DarkContext.Consumer>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(SearchBar);\r\n"]},"metadata":{},"sourceType":"module"}