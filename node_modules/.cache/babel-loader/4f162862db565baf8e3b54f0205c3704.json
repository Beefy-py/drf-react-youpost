{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\kenny\\\\Projects\\\\djangotutorials\\\\drf_react_project\\\\react_frontend\\\\blogapi\\\\src\\\\App.js\";\nimport Header from \"./components/content/header\";\nimport Footer from \"./components/content/footer\";\nimport Body from \"./components/content/body\";\nimport { Route, BrowserRouter as Router, Switch, Redirect } from \"react-router-dom\";\nimport React, { Component } from \"react\";\nimport RegisterForm from \"./components/actions/registerForm\";\nimport LoginForm from \"./components/actions/loginForm\";\nimport Logout from \"./components/actions/logout\";\nimport SearchPage from \"./components/content/searchPage\";\nimport CreatePost from \"./components/actions/createPost\";\nimport UserContext from \"./context/userContext\";\nimport DarkContext from \"./context/darkMode\";\nimport apiURL from \"./apiUrl\";\nimport axios from \"axios\";\nimport SearchBar from \"./components/actions/searchBar\";\nimport PostDetailWrapper from \"./components/content/postDetailWrapper\";\nimport NotFoundPage from \"./components/content/notFoundPage\";\nimport UpdatePost from \"./components/actions/updatePost\";\nimport DeletePost from \"./components/actions/deletePost\";\nimport Dashboard from \"./components/content/dashboard\";\nimport AdminPage from \"./components/admin/adminPage\";\nimport axiosInstance from \"./baseAxios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      currentUserId: JSON.parse(atob(localStorage.getItem(\"access_token\").split(\".\")[1])).user_id,\n      currentUser: {},\n      users: [],\n      darkMode: false,\n      showSearchBar: true\n    };\n\n    this.getAuthorById = pk => {\n      if (pk) {\n        const userName = this.state.users.find(user => user.id === pk) ? this.state.users.find(user => user.id === pk).username : \"Anonymous\";\n        return userName;\n      }\n    };\n\n    this.toggleDarkMode = () => {\n      this.setState({\n        darkMode: !this.state.darkMode\n      });\n      this.makePageDark();\n    };\n\n    this.toggleShowSearchBar = boolInp => {\n      this.setState({\n        showSearchBar: boolInp\n      });\n    };\n\n    this.makePageDark = () => {\n      document.querySelector(\"html\").className = !this.state.darkMode ? \"dark-page-bg\" : \"\";\n      document.querySelector(\"body\").className = !this.state.darkMode ? \"dark-page-bg\" : \"\";\n    };\n  }\n\n  componentDidMount() {\n    console.log(axiosInstance.defaults.headers[\"Authorization\"]);\n    const refreshToken = localStorage.getItem(\"refresh_token\");\n\n    if (refreshToken === \"undefined\" || refreshToken === null) {\n      localStorage.removeItem(\"currentUserName\");\n    }\n\n    axios.get(apiURL + \"user/list/\").then(res => this.setState({\n      users: res.data\n    }));\n\n    if (18.5 < new Date().getHours() || new Date().getHours() < 7) {\n      console.log(\"Going Dark\");\n      this.setState({\n        darkMode: true\n      });\n      this.makePageDark();\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(DarkContext.Provider, {\n      value: {\n        darkMode: this.state.darkMode,\n        toggleDarkMode: this.toggleDarkMode,\n        background: \"dark-bg\"\n      },\n      children: /*#__PURE__*/_jsxDEV(UserContext.Provider, {\n        value: {\n          currentUser: this.state.currentUser,\n          currentUserId: this.state.currentUserId,\n          onLogIn: this.handleLoggedIn,\n          getAuthor: this.getAuthorById\n        },\n        children: /*#__PURE__*/_jsxDEV(Router, {\n          children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 13\n          }, this), this.state.showSearchBar ? /*#__PURE__*/_jsxDEV(SearchBar, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 41\n          }, this) : \"\", /*#__PURE__*/_jsxDEV(Switch, {\n            children: [/*#__PURE__*/_jsxDEV(PrivateAdminRoute, {\n              path: \"/admin\",\n              toggleShowSearchBar: this.toggleShowSearchBar,\n              users: this.state.users,\n              component: AdminPage\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 110,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(IsAuthenticatedRoute, {\n              path: \"/search\",\n              component: SearchPage\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 117,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(IsAuthenticatedRoute, {\n              path: \"/posts/:slug\",\n              toggleShowSearchBar: this.toggleShowSearchBar,\n              component: PostDetailWrapper\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 118,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(IsAuthenticatedRoute, {\n              path: \"/update-post/:slug\",\n              toggleShowSearchBar: this.toggleShowSearchBar,\n              users: this.state.users,\n              component: UpdatePost\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 123,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(IsAuthenticatedRoute, {\n              path: \"/delete-post/:slug\",\n              toggleShowSearchBar: this.toggleShowSearchBar,\n              users: this.state.users,\n              component: DeletePost\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 129,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(IsAuthenticatedRoute, {\n              path: \"/create-post\",\n              toggleShowSearchBar: this.toggleShowSearchBar,\n              users: this.state.users,\n              component: CreatePost\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 135,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Route, {\n              path: \"/login\",\n              render: props => /*#__PURE__*/_jsxDEV(LoginForm, {\n                toggleShowSearchBar: this.toggleShowSearchBar,\n                ...props\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 144,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 141,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Route, {\n              path: \"/register\",\n              render: props => /*#__PURE__*/_jsxDEV(RegisterForm, {\n                toggleShowSearchBar: this.toggleShowSearchBar,\n                ...props\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 153,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 150,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(IsAuthenticatedRoute, {\n              path: \"/logout\",\n              toggleShowSearchBar: this.toggleShowSearchBar,\n              component: Logout\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 159,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(IsAuthenticatedRoute, {\n              exact: true,\n              path: \"/dashboard\",\n              toggleShowSearchBar: this.toggleShowSearchBar,\n              component: Dashboard\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 164,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(IsAuthenticatedRoute, {\n              exact: true,\n              path: \"/\",\n              toggleShowSearchBar: this.toggleShowSearchBar,\n              component: Body\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 170,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Route, {\n              path: \"*\",\n              children: /*#__PURE__*/_jsxDEV(NotFoundPage, {\n                toggleShowSearchBar: this.toggleShowSearchBar\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 177,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 176,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 180,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nconst IsAuthenticatedRoute = ({\n  component: Component,\n  toggleShowSearchBar,\n  users,\n  ...rest\n}) => {\n  // Add your own authentication on the below line.\n  const refreshToken = localStorage.getItem(\"refresh_token\") === \"undefined\" || localStorage.getItem(\"refresh_token\") === null ? false : true;\n  return /*#__PURE__*/_jsxDEV(Route, { ...rest,\n    render: props => refreshToken ? /*#__PURE__*/_jsxDEV(Component, { ...props,\n      users: users,\n      toggleShowSearchBar: toggleShowSearchBar\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 207,\n      columnNumber: 11\n    }, this) : /*#__PURE__*/_jsxDEV(Redirect, {\n      to: {\n        pathname: \"/login\",\n        state: {\n          from: props.location\n        }\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 213,\n      columnNumber: 11\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 203,\n    columnNumber: 5\n  }, this);\n};\n\n_c = IsAuthenticatedRoute;\n\nconst PrivateAdminRoute = ({\n  component: Component,\n  toggleShowSearchBar,\n  users,\n  ...rest\n}) => {\n  // Add your own authentication on the below line.\n  const refreshToken = localStorage.getItem(\"refresh_token\") === \"undefined\" || localStorage.getItem(\"refresh_token\") === null ? false : true;\n  const accessToken = localStorage.getItem(\"access_token\");\n  if (!accessToken) return /*#__PURE__*/_jsxDEV(Redirect, {\n    to: \"/\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 237,\n    columnNumber: 28\n  }, this);\n  const currentUserId = JSON.parse(atob(accessToken.split(\".\")[1])).user_id;\n  const user = users.filter(user => user.id === currentUserId)[0];\n\n  if (user) {\n    return /*#__PURE__*/_jsxDEV(Route, { ...rest,\n      render: props => refreshToken && user.is_superuser ? /*#__PURE__*/_jsxDEV(Component, { ...props,\n        users: users,\n        toggleShowSearchBar: toggleShowSearchBar\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 249,\n        columnNumber: 13\n      }, this) : /*#__PURE__*/_jsxDEV(Redirect, {\n        to: {\n          pathname: \"/not-allowed\",\n          state: {\n            from: props.location\n          }\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 255,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 245,\n      columnNumber: 7\n    }, this);\n  }\n\n  return null;\n};\n\n_c2 = PrivateAdminRoute;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"IsAuthenticatedRoute\");\n$RefreshReg$(_c2, \"PrivateAdminRoute\");","map":{"version":3,"sources":["C:/Users/kenny/Projects/djangotutorials/drf_react_project/react_frontend/blogapi/src/App.js"],"names":["Header","Footer","Body","Route","BrowserRouter","Router","Switch","Redirect","React","Component","RegisterForm","LoginForm","Logout","SearchPage","CreatePost","UserContext","DarkContext","apiURL","axios","SearchBar","PostDetailWrapper","NotFoundPage","UpdatePost","DeletePost","Dashboard","AdminPage","axiosInstance","App","state","currentUserId","JSON","parse","atob","localStorage","getItem","split","user_id","currentUser","users","darkMode","showSearchBar","getAuthorById","pk","userName","find","user","id","username","toggleDarkMode","setState","makePageDark","toggleShowSearchBar","boolInp","document","querySelector","className","componentDidMount","console","log","defaults","headers","refreshToken","removeItem","get","then","res","data","Date","getHours","render","background","onLogIn","handleLoggedIn","getAuthor","props","IsAuthenticatedRoute","component","rest","pathname","from","location","PrivateAdminRoute","accessToken","filter","is_superuser"],"mappings":"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","sourcesContent":["import Header from \"./components/content/header\";\r\nimport Footer from \"./components/content/footer\";\r\nimport Body from \"./components/content/body\";\r\nimport {\r\n  Route,\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Redirect,\r\n} from \"react-router-dom\";\r\n\r\nimport React, { Component } from \"react\";\r\nimport RegisterForm from \"./components/actions/registerForm\";\r\nimport LoginForm from \"./components/actions/loginForm\";\r\nimport Logout from \"./components/actions/logout\";\r\nimport SearchPage from \"./components/content/searchPage\";\r\nimport CreatePost from \"./components/actions/createPost\";\r\n\r\nimport UserContext from \"./context/userContext\";\r\nimport DarkContext from \"./context/darkMode\";\r\n\r\nimport apiURL from \"./apiUrl\";\r\nimport axios from \"axios\";\r\nimport SearchBar from \"./components/actions/searchBar\";\r\nimport PostDetailWrapper from \"./components/content/postDetailWrapper\";\r\nimport NotFoundPage from \"./components/content/notFoundPage\";\r\nimport UpdatePost from \"./components/actions/updatePost\";\r\nimport DeletePost from \"./components/actions/deletePost\";\r\nimport Dashboard from \"./components/content/dashboard\";\r\nimport AdminPage from \"./components/admin/adminPage\";\r\nimport axiosInstance from \"./baseAxios\";\r\n\r\nexport default class App extends Component {\r\n  state = {\r\n    currentUserId: JSON.parse(\r\n      atob(localStorage.getItem(\"access_token\").split(\".\")[1])\r\n    ).user_id,\r\n    currentUser: {},\r\n    users: [],\r\n    darkMode: false,\r\n    showSearchBar: true,\r\n  };\r\n\r\n  componentDidMount() {\r\n    console.log(axiosInstance.defaults.headers[\"Authorization\"]);\r\n    const refreshToken = localStorage.getItem(\"refresh_token\");\r\n    if (refreshToken === \"undefined\" || refreshToken === null) {\r\n      localStorage.removeItem(\"currentUserName\");\r\n    }\r\n\r\n    axios\r\n      .get(apiURL + \"user/list/\")\r\n      .then((res) => this.setState({ users: res.data }));\r\n\r\n    if (18.5 < new Date().getHours() || new Date().getHours() < 7) {\r\n      console.log(\"Going Dark\");\r\n      this.setState({ darkMode: true });\r\n      this.makePageDark();\r\n    }\r\n  }\r\n\r\n  getAuthorById = (pk) => {\r\n    if (pk) {\r\n      const userName = this.state.users.find((user) => user.id === pk)\r\n        ? this.state.users.find((user) => user.id === pk).username\r\n        : \"Anonymous\";\r\n      return userName;\r\n    }\r\n  };\r\n\r\n  toggleDarkMode = () => {\r\n    this.setState({ darkMode: !this.state.darkMode });\r\n    this.makePageDark();\r\n  };\r\n\r\n  toggleShowSearchBar = (boolInp) => {\r\n    this.setState({ showSearchBar: boolInp });\r\n  };\r\n\r\n  makePageDark = () => {\r\n    document.querySelector(\"html\").className = !this.state.darkMode\r\n      ? \"dark-page-bg\"\r\n      : \"\";\r\n\r\n    document.querySelector(\"body\").className = !this.state.darkMode\r\n      ? \"dark-page-bg\"\r\n      : \"\";\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <DarkContext.Provider\r\n        value={{\r\n          darkMode: this.state.darkMode,\r\n          toggleDarkMode: this.toggleDarkMode,\r\n          background: \"dark-bg\",\r\n        }}\r\n      >\r\n        <UserContext.Provider\r\n          value={{\r\n            currentUser: this.state.currentUser,\r\n            currentUserId: this.state.currentUserId,\r\n            onLogIn: this.handleLoggedIn,\r\n            getAuthor: this.getAuthorById,\r\n          }}\r\n        >\r\n          <Router>\r\n            <Header />\r\n            {this.state.showSearchBar ? <SearchBar /> : \"\"}\r\n            <Switch>\r\n              <PrivateAdminRoute\r\n                path=\"/admin\"\r\n                toggleShowSearchBar={this.toggleShowSearchBar}\r\n                users={this.state.users}\r\n                component={AdminPage}\r\n              />\r\n\r\n              <IsAuthenticatedRoute path=\"/search\" component={SearchPage} />\r\n              <IsAuthenticatedRoute\r\n                path=\"/posts/:slug\"\r\n                toggleShowSearchBar={this.toggleShowSearchBar}\r\n                component={PostDetailWrapper}\r\n              />\r\n              <IsAuthenticatedRoute\r\n                path=\"/update-post/:slug\"\r\n                toggleShowSearchBar={this.toggleShowSearchBar}\r\n                users={this.state.users}\r\n                component={UpdatePost}\r\n              />\r\n              <IsAuthenticatedRoute\r\n                path=\"/delete-post/:slug\"\r\n                toggleShowSearchBar={this.toggleShowSearchBar}\r\n                users={this.state.users}\r\n                component={DeletePost}\r\n              />\r\n              <IsAuthenticatedRoute\r\n                path=\"/create-post\"\r\n                toggleShowSearchBar={this.toggleShowSearchBar}\r\n                users={this.state.users}\r\n                component={CreatePost}\r\n              />\r\n              <Route\r\n                path=\"/login\"\r\n                render={(props) => (\r\n                  <LoginForm\r\n                    toggleShowSearchBar={this.toggleShowSearchBar}\r\n                    {...props}\r\n                  />\r\n                )}\r\n              />\r\n              <Route\r\n                path=\"/register\"\r\n                render={(props) => (\r\n                  <RegisterForm\r\n                    toggleShowSearchBar={this.toggleShowSearchBar}\r\n                    {...props}\r\n                  />\r\n                )}\r\n              />\r\n              <IsAuthenticatedRoute\r\n                path=\"/logout\"\r\n                toggleShowSearchBar={this.toggleShowSearchBar}\r\n                component={Logout}\r\n              />\r\n              <IsAuthenticatedRoute\r\n                exact\r\n                path=\"/dashboard\"\r\n                toggleShowSearchBar={this.toggleShowSearchBar}\r\n                component={Dashboard}\r\n              />\r\n              <IsAuthenticatedRoute\r\n                exact\r\n                path=\"/\"\r\n                toggleShowSearchBar={this.toggleShowSearchBar}\r\n                component={Body}\r\n              />\r\n              <Route path=\"*\">\r\n                <NotFoundPage toggleShowSearchBar={this.toggleShowSearchBar} />\r\n              </Route>\r\n            </Switch>\r\n            <Footer />\r\n          </Router>\r\n        </UserContext.Provider>\r\n      </DarkContext.Provider>\r\n    );\r\n  }\r\n}\r\n\r\nconst IsAuthenticatedRoute = ({\r\n  component: Component,\r\n  toggleShowSearchBar,\r\n  users,\r\n  ...rest\r\n}) => {\r\n  // Add your own authentication on the below line.\r\n\r\n  const refreshToken =\r\n    localStorage.getItem(\"refresh_token\") === \"undefined\" ||\r\n    localStorage.getItem(\"refresh_token\") === null\r\n      ? false\r\n      : true;\r\n\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={(props) =>\r\n        refreshToken ? (\r\n          <Component\r\n            {...props}\r\n            users={users}\r\n            toggleShowSearchBar={toggleShowSearchBar}\r\n          />\r\n        ) : (\r\n          <Redirect\r\n            to={{ pathname: \"/login\", state: { from: props.location } }}\r\n          />\r\n        )\r\n      }\r\n    />\r\n  );\r\n};\r\n\r\nconst PrivateAdminRoute = ({\r\n  component: Component,\r\n  toggleShowSearchBar,\r\n  users,\r\n  ...rest\r\n}) => {\r\n  // Add your own authentication on the below line.\r\n\r\n  const refreshToken =\r\n    localStorage.getItem(\"refresh_token\") === \"undefined\" ||\r\n    localStorage.getItem(\"refresh_token\") === null\r\n      ? false\r\n      : true;\r\n  const accessToken = localStorage.getItem(\"access_token\");\r\n\r\n  if (!accessToken) return <Redirect to={\"/\"} />;\r\n\r\n  const currentUserId = JSON.parse(atob(accessToken.split(\".\")[1])).user_id;\r\n\r\n  const user = users.filter((user) => user.id === currentUserId)[0];\r\n\r\n  if (user) {\r\n    return (\r\n      <Route\r\n        {...rest}\r\n        render={(props) =>\r\n          refreshToken && user.is_superuser ? (\r\n            <Component\r\n              {...props}\r\n              users={users}\r\n              toggleShowSearchBar={toggleShowSearchBar}\r\n            />\r\n          ) : (\r\n            <Redirect\r\n              to={{ pathname: \"/not-allowed\", state: { from: props.location } }}\r\n            />\r\n          )\r\n        }\r\n      />\r\n    );\r\n  }\r\n  return null;\r\n};\r\n"]},"metadata":{},"sourceType":"module"}