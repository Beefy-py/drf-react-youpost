{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\kenny\\\\Projects\\\\DjangoTutorials\\\\DRF_React_Project\\\\React_Frontend\\\\blogapi\\\\src\\\\App.js\";\nimport Header from \"./components/content/header\";\nimport Footer from \"./components/content/footer\";\nimport Body from \"./components/content/body\";\nimport { Route, BrowserRouter as Router, Switch } from \"react-router-dom\";\nimport React, { Component } from \"react\";\nimport RegisterForm from \"./components/actions/registerForm\";\nimport LoginForm from \"./components/actions/loginForm\";\nimport Logout from \"./components/actions/logout\";\nimport UserContext from \"./context/userContext\";\nimport DarkContext from \"./context/darkMode\";\nimport PostDetail from \"./components/content/postDetail\";\nimport apiURL from \"./apiUrl\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      currentUser: {\n        name: \"\"\n      },\n      users: [],\n      darkMode: false\n    };\n\n    this.handleLoggedIn = username => {\n      const user = {\n        name: username\n      };\n      this.setState({\n        currentUser: user\n      });\n    };\n\n    this.getAuthorById = pk => {\n      console.log(\"Got user for \" + pk);\n      return this.state.users.find(user => user.id === pk).username;\n    };\n\n    this.toggleDarkMode = () => {\n      this.setState({\n        darkMode: !this.state.darkMode\n      });\n      console.log(this.state.darkMode);\n      document.querySelector(\"html\").className = !this.state.darkMode ? \"dark-page-bg\" : \"\";\n      document.querySelector(\"body\").className = !this.state.darkMode ? \"dark-page-bg\" : \"\";\n    };\n  }\n\n  componentDidMount() {\n    axios.get(apiURL + \"user/list/\").then(res => this.setState({\n      users: res.data\n    }));\n    if (19 < new Date().getHours() || new Date().getHours() < 7) ;\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(DarkContext.Provider, {\n      value: {\n        darkMode: this.state.darkMode,\n        toggleDarkMode: this.toggleDarkMode,\n        background: \"dark-bg\"\n      },\n      children: /*#__PURE__*/_jsxDEV(UserContext.Provider, {\n        value: {\n          currentUser: this.state.currentUser,\n          onLogIn: this.handleLoggedIn,\n          getAuthor: this.getAuthorById\n        },\n        children: /*#__PURE__*/_jsxDEV(Router, {\n          children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Switch, {\n            children: [/*#__PURE__*/_jsxDEV(Route, {\n              path: \"/post/:pk\",\n              render: props => /*#__PURE__*/_jsxDEV(PostDetail, { ...props\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 76,\n                columnNumber: 36\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 74,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Route, {\n              path: \"/login\",\n              render: props => /*#__PURE__*/_jsxDEV(LoginForm, { ...props\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 81,\n                columnNumber: 36\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 79,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Route, {\n              path: \"/register\",\n              render: props => /*#__PURE__*/_jsxDEV(RegisterForm, { ...props\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 85,\n                columnNumber: 36\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 83,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Route, {\n              path: \"/logout\",\n              render: props => /*#__PURE__*/_jsxDEV(Logout, { ...props\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 87,\n                columnNumber: 56\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 87,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Route, {\n              exact: true,\n              path: \"/\",\n              component: Body\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 89,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["C:/Users/kenny/Projects/DjangoTutorials/DRF_React_Project/React_Frontend/blogapi/src/App.js"],"names":["Header","Footer","Body","Route","BrowserRouter","Router","Switch","React","Component","RegisterForm","LoginForm","Logout","UserContext","DarkContext","PostDetail","apiURL","axios","App","state","currentUser","name","users","darkMode","handleLoggedIn","username","user","setState","getAuthorById","pk","console","log","find","id","toggleDarkMode","document","querySelector","className","componentDidMount","get","then","res","data","Date","getHours","render","background","onLogIn","getAuthor","props"],"mappings":";AAAA,OAAOA,MAAP,MAAmB,6BAAnB;AACA,OAAOC,MAAP,MAAmB,6BAAnB;AACA,OAAOC,IAAP,MAAiB,2BAAjB;AACA,SAASC,KAAT,EAAgBC,aAAa,IAAIC,MAAjC,EAAyCC,MAAzC,QAAuD,kBAAvD;AAEA,OAAOC,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,YAAP,MAAyB,mCAAzB;AACA,OAAOC,SAAP,MAAsB,gCAAtB;AACA,OAAOC,MAAP,MAAmB,6BAAnB;AAEA,OAAOC,WAAP,MAAwB,uBAAxB;AACA,OAAOC,WAAP,MAAwB,oBAAxB;AACA,OAAOC,UAAP,MAAuB,iCAAvB;AAEA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,eAAe,MAAMC,GAAN,SAAkBT,SAAlB,CAA4B;AAAA;AAAA;AAAA,SACzCU,KADyC,GACjC;AACNC,MAAAA,WAAW,EAAE;AAAEC,QAAAA,IAAI,EAAE;AAAR,OADP;AAENC,MAAAA,KAAK,EAAE,EAFD;AAGNC,MAAAA,QAAQ,EAAE;AAHJ,KADiC;;AAAA,SAOzCC,cAPyC,GAOvBC,QAAD,IAAc;AAC7B,YAAMC,IAAI,GAAG;AAAEL,QAAAA,IAAI,EAAEI;AAAR,OAAb;AACA,WAAKE,QAAL,CAAc;AAAEP,QAAAA,WAAW,EAAEM;AAAf,OAAd;AACD,KAVwC;;AAAA,SAoBzCE,aApByC,GAoBxBC,EAAD,IAAQ;AACtBC,MAAAA,OAAO,CAACC,GAAR,CAAY,kBAAkBF,EAA9B;AACA,aAAO,KAAKV,KAAL,CAAWG,KAAX,CAAiBU,IAAjB,CAAuBN,IAAD,IAAUA,IAAI,CAACO,EAAL,KAAYJ,EAA5C,EAAgDJ,QAAvD;AACD,KAvBwC;;AAAA,SAyBzCS,cAzByC,GAyBxB,MAAM;AACrB,WAAKP,QAAL,CAAc;AAAEJ,QAAAA,QAAQ,EAAE,CAAC,KAAKJ,KAAL,CAAWI;AAAxB,OAAd;AACAO,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKZ,KAAL,CAAWI,QAAvB;AACAY,MAAAA,QAAQ,CAACC,aAAT,CAAuB,MAAvB,EAA+BC,SAA/B,GAA2C,CAAC,KAAKlB,KAAL,CAAWI,QAAZ,GACvC,cADuC,GAEvC,EAFJ;AAIAY,MAAAA,QAAQ,CAACC,aAAT,CAAuB,MAAvB,EAA+BC,SAA/B,GAA2C,CAAC,KAAKlB,KAAL,CAAWI,QAAZ,GACvC,cADuC,GAEvC,EAFJ;AAGD,KAnCwC;AAAA;;AAYzCe,EAAAA,iBAAiB,GAAG;AAClBrB,IAAAA,KAAK,CACFsB,GADH,CACOvB,MAAM,GAAG,YADhB,EAEGwB,IAFH,CAESC,GAAD,IAAS,KAAKd,QAAL,CAAc;AAAEL,MAAAA,KAAK,EAAEmB,GAAG,CAACC;AAAb,KAAd,CAFjB;AAIA,QAAI,KAAK,IAAIC,IAAJ,GAAWC,QAAX,EAAL,IAA8B,IAAID,IAAJ,GAAWC,QAAX,KAAwB,CAA1D,EAA4D;AAC7D;;AAmBDC,EAAAA,MAAM,GAAG;AACP,wBACE,QAAC,WAAD,CAAa,QAAb;AACE,MAAA,KAAK,EAAE;AACLtB,QAAAA,QAAQ,EAAE,KAAKJ,KAAL,CAAWI,QADhB;AAELW,QAAAA,cAAc,EAAE,KAAKA,cAFhB;AAGLY,QAAAA,UAAU,EAAE;AAHP,OADT;AAAA,6BAOE,QAAC,WAAD,CAAa,QAAb;AACE,QAAA,KAAK,EAAE;AACL1B,UAAAA,WAAW,EAAE,KAAKD,KAAL,CAAWC,WADnB;AAEL2B,UAAAA,OAAO,EAAE,KAAKvB,cAFT;AAGLwB,UAAAA,SAAS,EAAE,KAAKpB;AAHX,SADT;AAAA,+BAOE,QAAC,MAAD;AAAA,kCACE,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE,QAAC,MAAD;AAAA,oCACE,QAAC,KAAD;AACE,cAAA,IAAI,EAAC,WADP;AAEE,cAAA,MAAM,EAAGqB,KAAD,iBAAW,QAAC,UAAD,OAAgBA;AAAhB;AAAA;AAAA;AAAA;AAAA;AAFrB;AAAA;AAAA;AAAA;AAAA,oBADF,eAME,QAAC,KAAD;AACE,cAAA,IAAI,EAAC,QADP;AAEE,cAAA,MAAM,EAAGA,KAAD,iBAAW,QAAC,SAAD,OAAeA;AAAf;AAAA;AAAA;AAAA;AAAA;AAFrB;AAAA;AAAA;AAAA;AAAA,oBANF,eAUE,QAAC,KAAD;AACE,cAAA,IAAI,EAAC,WADP;AAEE,cAAA,MAAM,EAAGA,KAAD,iBAAW,QAAC,YAAD,OAAkBA;AAAlB;AAAA;AAAA;AAAA;AAAA;AAFrB;AAAA;AAAA;AAAA;AAAA,oBAVF,eAcE,QAAC,KAAD;AAAO,cAAA,IAAI,EAAC,SAAZ;AAAsB,cAAA,MAAM,EAAGA,KAAD,iBAAW,QAAC,MAAD,OAAYA;AAAZ;AAAA;AAAA;AAAA;AAAA;AAAzC;AAAA;AAAA;AAAA;AAAA,oBAdF,eAgBE,QAAC,KAAD;AAAO,cAAA,KAAK,MAAZ;AAAa,cAAA,IAAI,EAAC,GAAlB;AAAsB,cAAA,SAAS,EAAE9C;AAAjC;AAAA;AAAA;AAAA;AAAA,oBAhBF;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFF,eAoBE,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,kBApBF;AAAA;AAAA;AAAA;AAAA;AAAA;AAPF;AAAA;AAAA;AAAA;AAAA;AAPF;AAAA;AAAA;AAAA;AAAA,YADF;AAwCD;;AA9EwC","sourcesContent":["import Header from \"./components/content/header\";\r\nimport Footer from \"./components/content/footer\";\r\nimport Body from \"./components/content/body\";\r\nimport { Route, BrowserRouter as Router, Switch } from \"react-router-dom\";\r\n\r\nimport React, { Component } from \"react\";\r\nimport RegisterForm from \"./components/actions/registerForm\";\r\nimport LoginForm from \"./components/actions/loginForm\";\r\nimport Logout from \"./components/actions/logout\";\r\n\r\nimport UserContext from \"./context/userContext\";\r\nimport DarkContext from \"./context/darkMode\";\r\nimport PostDetail from \"./components/content/postDetail\";\r\n\r\nimport apiURL from \"./apiUrl\";\r\nimport axios from \"axios\";\r\n\r\nexport default class App extends Component {\r\n  state = {\r\n    currentUser: { name: \"\" },\r\n    users: [],\r\n    darkMode: false,\r\n  };\r\n\r\n  handleLoggedIn = (username) => {\r\n    const user = { name: username };\r\n    this.setState({ currentUser: user });\r\n  };\r\n\r\n  componentDidMount() {\r\n    axios\r\n      .get(apiURL + \"user/list/\")\r\n      .then((res) => this.setState({ users: res.data }));\r\n\r\n    if (19 < new Date().getHours() || new Date().getHours() < 7);\r\n  }\r\n\r\n  getAuthorById = (pk) => {\r\n    console.log(\"Got user for \" + pk);\r\n    return this.state.users.find((user) => user.id === pk).username;\r\n  };\r\n\r\n  toggleDarkMode = () => {\r\n    this.setState({ darkMode: !this.state.darkMode });\r\n    console.log(this.state.darkMode);\r\n    document.querySelector(\"html\").className = !this.state.darkMode\r\n      ? \"dark-page-bg\"\r\n      : \"\";\r\n\r\n    document.querySelector(\"body\").className = !this.state.darkMode\r\n      ? \"dark-page-bg\"\r\n      : \"\";\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <DarkContext.Provider\r\n        value={{\r\n          darkMode: this.state.darkMode,\r\n          toggleDarkMode: this.toggleDarkMode,\r\n          background: \"dark-bg\",\r\n        }}\r\n      >\r\n        <UserContext.Provider\r\n          value={{\r\n            currentUser: this.state.currentUser,\r\n            onLogIn: this.handleLoggedIn,\r\n            getAuthor: this.getAuthorById,\r\n          }}\r\n        >\r\n          <Router>\r\n            <Header />\r\n            <Switch>\r\n              <Route\r\n                path=\"/post/:pk\"\r\n                render={(props) => <PostDetail {...props} />}\r\n              />\r\n\r\n              <Route\r\n                path=\"/login\"\r\n                render={(props) => <LoginForm {...props} />}\r\n              />\r\n              <Route\r\n                path=\"/register\"\r\n                render={(props) => <RegisterForm {...props} />}\r\n              />\r\n              <Route path=\"/logout\" render={(props) => <Logout {...props} />} />\r\n\r\n              <Route exact path=\"/\" component={Body} />\r\n            </Switch>\r\n            <Footer />\r\n          </Router>\r\n        </UserContext.Provider>\r\n      </DarkContext.Provider>\r\n    );\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}