{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\kenny\\\\Projects\\\\djangotutorials\\\\drf_react_project\\\\react_frontend\\\\blogapi\\\\src\\\\components\\\\content\\\\searchPage.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useContext } from \"react\";\nimport axios from \"axios\";\nimport apiURL from \"../../apiUrl\";\nimport { useEffect, useState } from \"react\";\nimport DarkContext from \"../../context/darkMode\";\nimport UserContext from \"../../context/userContext\";\nimport { Link } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst SearchPage = () => {\n  _s();\n\n  const [posts, setPosts] = useState([]);\n  const darkContext = useContext(DarkContext);\n  const userContext = useContext(UserContext);\n  useEffect(() => {\n    axios.get(apiURL + \"search/\" + window.location.search).then(res => {\n      setPosts(res.data);\n      console.log(res.data);\n    });\n  }, [setPosts]);\n  /*<React.Fragment>\r\n      {posts.length ? (\r\n        <div className=\"posts-section\">\r\n          {posts.map((post) => {\r\n            const { title, id } = post;\r\n            return <div key={id}>{title}</div>;\r\n          })}\r\n        </div>\r\n      ) : (\r\n        <div className=\"no-results border\">\r\n          <h3>No Results</h3>\r\n        </div>\r\n      )}\r\n    </React.Fragment> */\n\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: posts.length ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: darkContext.darkMode ? \"posts-results-section dark-page-shadow text-light\" : \"posts-results-section border\",\n      children: posts.map(post => {\n        const {\n          title,\n          id,\n          author,\n          published,\n          excerpt\n        } = post;\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"post\",\n          children: [/*#__PURE__*/_jsxDEV(Link, {\n            to: \"/posts/\" + post.slug,\n            children: /*#__PURE__*/_jsxDEV(\"h3\", {\n              children: [\" \", title]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 51,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"author\",\n              children: author ? userContext.getAuthor(post.author) : \"Anonymous\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 54,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"date\",\n              children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                class: \"fas fa-grip-lines-vertical\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 59,\n                columnNumber: 21\n              }, this), new Intl.DateTimeFormat(\"en-GB\", {\n                dateStyle: \"full\"\n              }).format(new Date(published))]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 58,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [excerpt.substring(0, 150) + \"...\", \" \", /*#__PURE__*/_jsxDEV(Link, {\n              to: \"/posts/\" + post.slug,\n              children: \"i\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 68,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 17\n          }, this)]\n        }, id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 15\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: +darkContext.darkMode ? \"no-results border bg-dark text-light\" : \"no-results border bg-light\",\n      children: /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"No Results\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n};\n\n_s(SearchPage, \"J9fCADa9cKaXTvZo5Cjeuni16YA=\");\n\n_c = SearchPage;\nexport default SearchPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"SearchPage\");","map":{"version":3,"sources":["C:/Users/kenny/Projects/djangotutorials/drf_react_project/react_frontend/blogapi/src/components/content/searchPage.jsx"],"names":["React","useContext","axios","apiURL","useEffect","useState","DarkContext","UserContext","Link","SearchPage","posts","setPosts","darkContext","userContext","get","window","location","search","then","res","data","console","log","length","darkMode","map","post","title","id","author","published","excerpt","slug","getAuthor","Intl","DateTimeFormat","dateStyle","format","Date","substring"],"mappings":"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","sourcesContent":["import React, { useContext } from \"react\";\r\nimport axios from \"axios\";\r\nimport apiURL from \"../../apiUrl\";\r\nimport { useEffect, useState } from \"react\";\r\nimport DarkContext from \"../../context/darkMode\";\r\nimport UserContext from \"../../context/userContext\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst SearchPage = () => {\r\n  const [posts, setPosts] = useState([]);\r\n  const darkContext = useContext(DarkContext);\r\n  const userContext = useContext(UserContext);\r\n\r\n  useEffect(() => {\r\n    axios.get(apiURL + \"search/\" + window.location.search).then((res) => {\r\n      setPosts(res.data);\r\n      console.log(res.data);\r\n    });\r\n  }, [setPosts]);\r\n\r\n  /*<React.Fragment>\r\n      {posts.length ? (\r\n        <div className=\"posts-section\">\r\n          {posts.map((post) => {\r\n            const { title, id } = post;\r\n            return <div key={id}>{title}</div>;\r\n          })}\r\n        </div>\r\n      ) : (\r\n        <div className=\"no-results border\">\r\n          <h3>No Results</h3>\r\n        </div>\r\n      )}\r\n    </React.Fragment> */\r\n\r\n  return (\r\n    <React.Fragment>\r\n      {posts.length ? (\r\n        <div\r\n          className={\r\n            darkContext.darkMode\r\n              ? \"posts-results-section dark-page-shadow text-light\"\r\n              : \"posts-results-section border\"\r\n          }\r\n        >\r\n          {posts.map((post) => {\r\n            const { title, id, author, published, excerpt } = post;\r\n            return (\r\n              <div className=\"post\" key={id}>\r\n                <Link to={\"/posts/\" + post.slug}>\r\n                  <h3> {title}</h3>\r\n                </Link>\r\n                <div>\r\n                  <p className=\"author\">\r\n                    {author ? userContext.getAuthor(post.author) : \"Anonymous\"}\r\n                  </p>\r\n\r\n                  <p className=\"date\">\r\n                    <i class=\"fas fa-grip-lines-vertical\"></i>\r\n                    {new Intl.DateTimeFormat(\"en-GB\", {\r\n                      dateStyle: \"full\",\r\n                    }).format(new Date(published))}\r\n                  </p>\r\n                </div>\r\n                <hr />\r\n                <p>\r\n                  {excerpt.substring(0, 150) + \"...\"}{\" \"}\r\n                  <Link to={\"/posts/\" + post.slug}>i</Link>\r\n                </p>\r\n              </div>\r\n            );\r\n          })}\r\n        </div>\r\n      ) : (\r\n        <div\r\n          className={\r\n            +darkContext.darkMode\r\n              ? \"no-results border bg-dark text-light\"\r\n              : \"no-results border bg-light\"\r\n          }\r\n        >\r\n          <h3>No Results</h3>\r\n        </div>\r\n      )}\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default SearchPage;\r\n"]},"metadata":{},"sourceType":"module"}