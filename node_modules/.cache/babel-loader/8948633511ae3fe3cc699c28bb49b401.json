{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\kenny\\\\Projects\\\\drf_react_youpost\\\\src\\\\components\\\\content\\\\singularPost.jsx\";\nimport React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport UserContext from \"./../../context/userContext\";\nimport ReactTooltip from \"react-tooltip\";\nimport axiosInstance from \"./../../baseAxios\";\nimport DarkContext from \"./../../context/darkMode\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class SingularPost extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      rating: 0,\n      users: [],\n      currentUserId: JSON.parse(atob(localStorage.getItem(\"access_token\").split(\".\")[1])).user_id,\n      currentUser: {},\n      likeClass: \"btn btn-outline-dark\",\n      dislikeClass: \"btn btn-outline-dark\",\n      bookmarkClass: \"btn btn-outline-dark\",\n      bookmarkDataTip: \"add to bookmarks\"\n    };\n\n    this.addBookmark = post => {\n      const {\n        currentUser,\n        currentUserId\n      } = this.state;\n      let bookmarked;\n      bookmarked = currentUser.bookmarked;\n      console.log(\"\\n before\", currentUser.bookmarked);\n\n      if (currentUser.bookmarked.includes(post.id)) {\n        bookmarked.splice(bookmarked.indexOf(post.id), 1);\n        this.setState({\n          bookmarkClass: \"btn btn-outline-dark\"\n        });\n        this.setState({\n          bookmarkDataTip: \"add to bookmarks\"\n        });\n      } else {\n        bookmarked.push(post.id);\n        this.setState({\n          bookmarkClass: \"btn btn-info\"\n        });\n        this.setState({\n          bookmarkDataTip: \"remove from bookmarks\"\n        });\n      }\n\n      currentUser.bookmarked = bookmarked;\n      console.log(\"\\n after\", currentUser.bookmarked);\n      axiosInstance.put(\"user/list/\" + currentUserId, { ...currentUser,\n        bookmarked: bookmarked\n      });\n      window.location.replace(\"/dashboard\");\n    };\n\n    this.getRatingColor = rate => {\n      const prefix = \"rate badge \";\n      if (rate > 999999999) return prefix + \"rate1b\";\n      if (rate > 999999) return prefix + \"rate1m\";\n      if (rate > 99999) return prefix + \"rate100k\";\n      if (rate > 999) return prefix + \"rate1k\";\n      if (rate > 0) return prefix + \"before1k\";\n      if (rate === 0) return prefix + \"rate0\";\n      if (rate < -999999999) return prefix + \"rate-1b\";\n      if (rate < -999999) return prefix + \"rate-1m\";\n      if (rate < -99999) return prefix + \"rate-100k\";\n      if (rate < -999) return prefix + \"rate-1k\";\n      if (rate < 0) return prefix + \"before-1k\";\n      return prefix + \"badge-primary\";\n    };\n  }\n\n  componentDidMount() {\n    axiosInstance.get(\"user/list/\").then(res => {\n      this.setState({\n        users: res.data\n      });\n    });\n    axiosInstance.get(\"posts/\" + this.props.post.slug).then(res => this.setState({\n      rating: res.data.rating\n    }));\n    axiosInstance.get(\"user/list/\" + this.state.currentUserId).then(res => {\n      this.setState({\n        currentUser: res.data\n      });\n      const {\n        post\n      } = this.props;\n\n      if (res.data.liked.includes(post.id)) {\n        this.setState({\n          likeClass: \"btn btn-success disabled\"\n        });\n        this.setState({\n          dislikeClass: \"btn btn-outline-dark disabled\"\n        });\n      }\n\n      if (res.data.disliked.includes(post.id)) {\n        // console.log(`${res.data.username} has already disliked  ${post.title}`);\n        this.setState({\n          dislikeClass: \"btn btn-danger disabled\"\n        });\n        this.setState({\n          likeClass: \"btn btn-outline-dark disabled\"\n        });\n      }\n\n      if (res.data.bookmarked.includes(post.id)) {\n        this.setState({\n          bookmarkClass: \"btn btn-info\"\n        });\n        this.setState({\n          bookmarkDataTip: \"remove from bookmarks\"\n        });\n      }\n    });\n  }\n\n  changeRating(post, value) {\n    const {\n      rating,\n      currentUser,\n      currentUserId\n    } = this.state;\n    const restPost = {\n      title: post.title,\n      slug: post.slug,\n      content: post.content,\n      author: post.author,\n      published: post.published\n    };\n    let likedPosts = currentUser.liked;\n    let dislikedPosts = currentUser.disliked;\n\n    if (value === 1) {\n      likedPosts.push(post.id);\n      console.log(currentUser.username + \" liked \" + post.title + \" with id \" + post.id);\n    } else {\n      dislikedPosts.push(post.id);\n      console.log(currentUser.username + \" disliked \" + post.title + \" with id \" + post.id);\n    }\n\n    currentUser.liked = likedPosts;\n    currentUser.dislike = dislikedPosts;\n\n    if (currentUser.liked.includes(post.id)) {\n      this.setState({\n        likeClass: \"btn btn-success disabled\"\n      });\n      this.setState({\n        dislikeClass: \"btn btn-outline-dark disabled\"\n      });\n    }\n\n    if (currentUser.disliked.includes(post.id)) {\n      this.setState({\n        dislikeClass: \"btn btn-danger disabled\"\n      });\n      this.setState({\n        likeClass: \"btn btn-outline-dark disabled\"\n      });\n    }\n\n    axiosInstance.put(\"user/list/\" + currentUserId, currentUser);\n    this.setState({\n      rating: rating + value\n    });\n    axiosInstance.put(\"update-post/\" + post.slug, { ...restPost,\n      rating: rating + value\n    });\n    window.location.replace(\"posts/\" + post.slug);\n  }\n\n  render() {\n    const {\n      title,\n      content,\n      slug,\n      author,\n      image,\n      postDate,\n      day,\n      dataType,\n      post,\n      rating,\n      getRatingSuffix\n    } = this.props;\n    const {\n      likeClass,\n      dislikeClass,\n      bookmarkClass,\n      bookmarkDataTip\n    } = this.state;\n    const currentUser = this.state.users.filter(user => user.username == localStorage.getItem(\"currentUser\"))[0];\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: this.context.darkMode ? \"blog-post text-light border bg-dark\" : \"blog-post border\",\n      children: [/*#__PURE__*/_jsxDEV(ReactTooltip, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"blog-post-img border\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: image,\n          alt: \"Image for: \" + title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"blog-post-info\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"blog-post-date\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: day\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 189,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: postDate\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 190,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 188,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"blog-post-author\",\n          children: /*#__PURE__*/_jsxDEV(UserContext.Consumer, {\n            children: userContext => {\n              return /*#__PURE__*/_jsxDEV(React.Fragment, {\n                children: [\"by \", /*#__PURE__*/_jsxDEV(\"span\", {\n                  children: userContext.getAuthor(author)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 197,\n                  columnNumber: 24\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 196,\n                columnNumber: 19\n              }, this);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 193,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 192,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"blog-post-title\",\n          children: title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 204,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"blog-post-text\",\n          children: content.length >= 500 ? content.substring(0, 500) + \"...\" : content\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 205,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Link, {\n          to: \"posts/\" + slug,\n          className: \"blog-post-cta\",\n          children: \"Read More\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 210,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"blog-post-options\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: this.getRatingColor(rating),\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            \"data-tip\": \"rating: \" + rating.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\"),\n            \"data-type\": dataType,\n            children: getRatingSuffix(rating)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 216,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 215,\n          columnNumber: 11\n        }, this), currentUser ? /*#__PURE__*/_jsxDEV(React.Fragment, {\n          children: author === currentUser.id ? /*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"fas fa-info-circle\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 229,\n            columnNumber: 17\n          }, this) : /*#__PURE__*/_jsxDEV(React.Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(ReactTooltip, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 232,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"react\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"upvote\",\n                children: /*#__PURE__*/_jsxDEV(\"button\", {\n                  className: likeClass,\n                  \"data-tip\": \"like\",\n                  \"data-type\": dataType,\n                  onClick: () => this.changeRating(post, 1),\n                  children: /*#__PURE__*/_jsxDEV(\"i\", {\n                    className: \"far fa-thumbs-up\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 241,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 235,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 234,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"downvote\",\n                children: /*#__PURE__*/_jsxDEV(\"button\", {\n                  className: dislikeClass,\n                  \"data-tip\": \"dislike\",\n                  \"data-type\": dataType,\n                  onClick: () => this.changeRating(post, -1),\n                  children: /*#__PURE__*/_jsxDEV(\"i\", {\n                    className: \"far fa-thumbs-down\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 251,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 245,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 244,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 233,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"other-react\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"bookmark\",\n                children: /*#__PURE__*/_jsxDEV(\"button\", {\n                  className: bookmarkClass,\n                  \"data-tip\": bookmarkDataTip,\n                  \"data-type\": dataType,\n                  onClick: () => this.addBookmark(post),\n                  children: /*#__PURE__*/_jsxDEV(\"i\", {\n                    className: \"far fa-bookmark\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 263,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 257,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 256,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"comment\",\n                \"data-tip\": \"comment on this post\",\n                \"data-type\": dataType,\n                children: /*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"btn btn-dark\",\n                  children: /*#__PURE__*/_jsxDEV(\"i\", {\n                    style: {\n                      fontSize: \".8rem\"\n                    },\n                    className: \"far fa-comment-alt\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 273,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 272,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 267,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 255,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 231,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 227,\n          columnNumber: 13\n        }, this) : \"\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 214,\n        columnNumber: 9\n      }, this)]\n    }, post.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 7\n    }, this);\n  }\n\n}\nSingularPost.contextType = DarkContext;","map":{"version":3,"sources":["C:/Users/kenny/Projects/drf_react_youpost/src/components/content/singularPost.jsx"],"names":["React","Component","Link","UserContext","ReactTooltip","axiosInstance","DarkContext","SingularPost","state","rating","users","currentUserId","JSON","parse","atob","localStorage","getItem","split","user_id","currentUser","likeClass","dislikeClass","bookmarkClass","bookmarkDataTip","addBookmark","post","bookmarked","console","log","includes","id","splice","indexOf","setState","push","put","window","location","replace","getRatingColor","rate","prefix","componentDidMount","get","then","res","data","props","slug","liked","disliked","changeRating","value","restPost","title","content","author","published","likedPosts","dislikedPosts","username","dislike","render","image","postDate","day","dataType","getRatingSuffix","filter","user","context","darkMode","userContext","getAuthor","length","substring","toString","fontSize","contextType"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport UserContext from \"./../../context/userContext\";\r\nimport ReactTooltip from \"react-tooltip\";\r\nimport axiosInstance from \"./../../baseAxios\";\r\nimport DarkContext from \"./../../context/darkMode\";\r\n\r\nexport default class SingularPost extends Component {\r\n  state = {\r\n    rating: 0,\r\n    users: [],\r\n    currentUserId: JSON.parse(\r\n      atob(localStorage.getItem(\"access_token\").split(\".\")[1])\r\n    ).user_id,\r\n    currentUser: {},\r\n    likeClass: \"btn btn-outline-dark\",\r\n    dislikeClass: \"btn btn-outline-dark\",\r\n    bookmarkClass: \"btn btn-outline-dark\",\r\n    bookmarkDataTip: \"add to bookmarks\",\r\n  };\r\n\r\n  static contextType = DarkContext;\r\n\r\n  componentDidMount() {\r\n    axiosInstance.get(\"user/list/\").then((res) => {\r\n      this.setState({ users: res.data });\r\n    });\r\n\r\n    axiosInstance\r\n      .get(\"posts/\" + this.props.post.slug)\r\n      .then((res) => this.setState({ rating: res.data.rating }));\r\n\r\n    axiosInstance.get(\"user/list/\" + this.state.currentUserId).then((res) => {\r\n      this.setState({ currentUser: res.data });\r\n\r\n      const { post } = this.props;\r\n\r\n      if (res.data.liked.includes(post.id)) {\r\n        this.setState({ likeClass: \"btn btn-success disabled\" });\r\n        this.setState({ dislikeClass: \"btn btn-outline-dark disabled\" });\r\n      }\r\n\r\n      if (res.data.disliked.includes(post.id)) {\r\n        // console.log(`${res.data.username} has already disliked  ${post.title}`);\r\n        this.setState({ dislikeClass: \"btn btn-danger disabled\" });\r\n        this.setState({ likeClass: \"btn btn-outline-dark disabled\" });\r\n      }\r\n\r\n      if (res.data.bookmarked.includes(post.id)) {\r\n        this.setState({ bookmarkClass: \"btn btn-info\" });\r\n        this.setState({ bookmarkDataTip: \"remove from bookmarks\" });\r\n      }\r\n    });\r\n  }\r\n\r\n  changeRating(post, value) {\r\n    const { rating, currentUser, currentUserId } = this.state;\r\n\r\n    const restPost = {\r\n      title: post.title,\r\n      slug: post.slug,\r\n      content: post.content,\r\n      author: post.author,\r\n      published: post.published,\r\n    };\r\n\r\n    let likedPosts = currentUser.liked;\r\n    let dislikedPosts = currentUser.disliked;\r\n\r\n    if (value === 1) {\r\n      likedPosts.push(post.id);\r\n      console.log(\r\n        currentUser.username + \" liked \" + post.title + \" with id \" + post.id\r\n      );\r\n    } else {\r\n      dislikedPosts.push(post.id);\r\n      console.log(\r\n        currentUser.username + \" disliked \" + post.title + \" with id \" + post.id\r\n      );\r\n    }\r\n\r\n    currentUser.liked = likedPosts;\r\n    currentUser.dislike = dislikedPosts;\r\n\r\n    if (currentUser.liked.includes(post.id)) {\r\n      this.setState({ likeClass: \"btn btn-success disabled\" });\r\n      this.setState({ dislikeClass: \"btn btn-outline-dark disabled\" });\r\n    }\r\n\r\n    if (currentUser.disliked.includes(post.id)) {\r\n      this.setState({ dislikeClass: \"btn btn-danger disabled\" });\r\n      this.setState({ likeClass: \"btn btn-outline-dark disabled\" });\r\n    }\r\n\r\n    axiosInstance.put(\"user/list/\" + currentUserId, currentUser);\r\n\r\n    this.setState({ rating: rating + value });\r\n\r\n    axiosInstance.put(\"update-post/\" + post.slug, {\r\n      ...restPost,\r\n      rating: rating + value,\r\n    });\r\n\r\n    window.location.replace(\"posts/\" + post.slug);\r\n  }\r\n\r\n  addBookmark = (post) => {\r\n    const { currentUser, currentUserId } = this.state;\r\n    let bookmarked;\r\n    bookmarked = currentUser.bookmarked;\r\n    console.log(\"\\n before\", currentUser.bookmarked);\r\n\r\n    if (currentUser.bookmarked.includes(post.id)) {\r\n      bookmarked.splice(bookmarked.indexOf(post.id), 1);\r\n      this.setState({ bookmarkClass: \"btn btn-outline-dark\" });\r\n      this.setState({ bookmarkDataTip: \"add to bookmarks\" });\r\n    } else {\r\n      bookmarked.push(post.id);\r\n      this.setState({ bookmarkClass: \"btn btn-info\" });\r\n      this.setState({ bookmarkDataTip: \"remove from bookmarks\" });\r\n    }\r\n\r\n    currentUser.bookmarked = bookmarked;\r\n    console.log(\"\\n after\", currentUser.bookmarked);\r\n\r\n    axiosInstance.put(\"user/list/\" + currentUserId, {\r\n      ...currentUser,\r\n      bookmarked: bookmarked,\r\n    });\r\n\r\n    window.location.replace(\"/dashboard\");\r\n  };\r\n\r\n  getRatingColor = (rate) => {\r\n    const prefix = \"rate badge \";\r\n\r\n    if (rate > 999999999) return prefix + \"rate1b\";\r\n    if (rate > 999999) return prefix + \"rate1m\";\r\n    if (rate > 99999) return prefix + \"rate100k\";\r\n    if (rate > 999) return prefix + \"rate1k\";\r\n    if (rate > 0) return prefix + \"before1k\";\r\n    if (rate === 0) return prefix + \"rate0\";\r\n    if (rate < -999999999) return prefix + \"rate-1b\";\r\n    if (rate < -999999) return prefix + \"rate-1m\";\r\n    if (rate < -99999) return prefix + \"rate-100k\";\r\n    if (rate < -999) return prefix + \"rate-1k\";\r\n    if (rate < 0) return prefix + \"before-1k\";\r\n\r\n    return prefix + \"badge-primary\";\r\n  };\r\n  render() {\r\n    const {\r\n      title,\r\n      content,\r\n      slug,\r\n      author,\r\n      image,\r\n      postDate,\r\n      day,\r\n      dataType,\r\n      post,\r\n      rating,\r\n\r\n      getRatingSuffix,\r\n    } = this.props;\r\n\r\n    const { likeClass, dislikeClass, bookmarkClass, bookmarkDataTip } =\r\n      this.state;\r\n\r\n    const currentUser = this.state.users.filter(\r\n      (user) => user.username == localStorage.getItem(\"currentUser\")\r\n    )[0];\r\n\r\n    return (\r\n      <div\r\n        key={post.id}\r\n        className={\r\n          this.context.darkMode\r\n            ? \"blog-post text-light border bg-dark\"\r\n            : \"blog-post border\"\r\n        }\r\n      >\r\n        <ReactTooltip />\r\n        <div className=\"blog-post-img border\">\r\n          <img src={image} alt={\"Image for: \" + title} />\r\n        </div>\r\n        <div className=\"blog-post-info\">\r\n          <div className=\"blog-post-date\">\r\n            <span>{day}</span>\r\n            <span>{postDate}</span>\r\n          </div>\r\n          <div className=\"blog-post-author\">\r\n            <UserContext.Consumer>\r\n              {(userContext) => {\r\n                return (\r\n                  <React.Fragment>\r\n                    by <span>{userContext.getAuthor(author)}</span>\r\n                  </React.Fragment>\r\n                );\r\n              }}\r\n            </UserContext.Consumer>\r\n          </div>\r\n\r\n          <h1 className=\"blog-post-title\">{title}</h1>\r\n          <p className=\"blog-post-text\">\r\n            {content.length >= 500\r\n              ? content.substring(0, 500) + \"...\"\r\n              : content}\r\n          </p>\r\n          <Link to={\"posts/\" + slug} className=\"blog-post-cta\">\r\n            Read More\r\n          </Link>\r\n        </div>\r\n        <div className=\"blog-post-options\">\r\n          <div className={this.getRatingColor(rating)}>\r\n            <span\r\n              data-tip={\"rating: \" +\r\n                rating.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")\r\n             \r\n              }\r\n              data-type={dataType}\r\n            >\r\n              {getRatingSuffix(rating)}\r\n            </span>\r\n          </div>\r\n          {currentUser ? (\r\n            <React.Fragment>\r\n              {author === currentUser.id ? (\r\n                <i className=\"fas fa-info-circle\"></i>\r\n              ) : (\r\n                <React.Fragment>\r\n                  <ReactTooltip />\r\n                  <div className=\"react\">\r\n                    <div className=\"upvote\">\r\n                      <button\r\n                        className={likeClass}\r\n                        data-tip=\"like\"\r\n                        data-type={dataType}\r\n                        onClick={() => this.changeRating(post, 1)}\r\n                      >\r\n                        <i className=\"far fa-thumbs-up\"></i>\r\n                      </button>\r\n                    </div>\r\n                    <div className=\"downvote\">\r\n                      <button\r\n                        className={dislikeClass}\r\n                        data-tip=\"dislike\"\r\n                        data-type={dataType}\r\n                        onClick={() => this.changeRating(post, -1)}\r\n                      >\r\n                        <i className=\"far fa-thumbs-down\"></i>\r\n                      </button>\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"other-react\">\r\n                    <div className=\"bookmark\">\r\n                      <button\r\n                        className={bookmarkClass}\r\n                        data-tip={bookmarkDataTip}\r\n                        data-type={dataType}\r\n                        onClick={() => this.addBookmark(post)}\r\n                      >\r\n                        <i className=\"far fa-bookmark\"></i>\r\n                        {/* <i className=\"fas fa-bookmark\"></i> */}\r\n                      </button>\r\n                    </div>\r\n                    <div\r\n                      className=\"comment\"\r\n                      data-tip=\"comment on this post\"\r\n                      data-type={dataType}\r\n                    >\r\n                      <button className=\"btn btn-dark\">\r\n                        <i\r\n                          style={{ fontSize: \".8rem\" }}\r\n                          className=\"far fa-comment-alt\"\r\n                        ></i>\r\n                      </button>\r\n                    </div>\r\n                  </div>\r\n                </React.Fragment>\r\n              )}\r\n            </React.Fragment>\r\n          ) : (\r\n            \"\"\r\n          )}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}